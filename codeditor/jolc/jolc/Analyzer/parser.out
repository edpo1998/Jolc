Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> jolc
Rule 1     jolc -> statement_list
Rule 2     statement_list -> statement terminator
Rule 3     statement_list -> statement_list statement terminator
Rule 4     statement_list -> <empty>
Rule 5     statement -> expression
Rule 6     statement -> if_statement
Rule 7     if_statement -> if expression statement_list elseif_clause end
Rule 8     if_statement -> if expression statement_list elseif_clause else_clause end
Rule 9     if_statement -> if expression statement_list end
Rule 10    if_statement -> if expression statement_list else_clause end
Rule 11    elseif_clause -> elseif expression statement_list
Rule 12    elseif_clause -> elseif_clause elseif expression statement_list
Rule 13    else_clause -> else statement_list
Rule 14    statement -> function identifier lparen arguments rparen statement_list end
Rule 15    statement -> print lparen arguments rparen
Rule 16    statement -> println lparen arguments rparen
Rule 17    statement -> while expression statement_list end
Rule 18    statement -> for container statement_list end
Rule 19    statement -> struct identifier struct_parameters end
Rule 20    statement -> mutable struct identifier struct_parameters end
Rule 21    type_data -> Int64
Rule 22    type_data -> Float64
Rule 23    type_data -> Bool
Rule 24    type_data -> Char
Rule 25    type_data -> String
Rule 26    type_data -> id
Rule 27    expression -> primitive
Rule 28    expression -> array_access
Rule 29    expression -> array_operator
Rule 30    expression -> type_data
Rule 31    primitive -> valor_entero
Rule 32    primitive -> valor_decimal
Rule 33    primitive -> valor_cadena
Rule 34    primitive -> valor_caracter
Rule 35    primitive -> verdadero
Rule 36    primitive -> falso
Rule 37    expression -> nothing
Rule 38    array_operator -> native point expression
Rule 39    array_operator -> expression point oparray
Rule 40    oparray -> plus expression
Rule 41    oparray -> minus expression
Rule 42    oparray -> mul expression
Rule 43    oparray -> div expression
Rule 44    oparray -> mod expression
Rule 45    oparray -> exp expression
Rule 46    expression -> global expression
Rule 47    expression -> local expression
Rule 48    expression -> expression equal expression
Rule 49    expression -> expression definir type_data
Rule 50    expression -> expression plus expression
Rule 51    expression -> expression minus expression
Rule 52    expression -> expression mul expression
Rule 53    expression -> expression div expression
Rule 54    expression -> expression mod expression
Rule 55    expression -> expression exp expression
Rule 56    expression -> plus expression
Rule 57    expression -> minus expression
Rule 58    expression -> expression gte expression
Rule 59    expression -> expression lte expression
Rule 60    expression -> expression gt expression
Rule 61    expression -> expression lt expression
Rule 62    expression -> expression eq expression
Rule 63    expression -> expression neq expression
Rule 64    expression -> expression and expression
Rule 65    expression -> expression or expression
Rule 66    expression -> no expression
Rule 67    expression -> identifier lparen arguments rparen
Rule 68    expression -> lsqbrack arguments rsqbrack
Rule 69    expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey
Rule 70    expression -> valor_cadena lsqbrack expslice rsqbrack
Rule 71    array_access -> identifier list_index
Rule 72    list_index -> lsqbrack argsarray rsqbrack
Rule 73    list_index -> list_index lsqbrack argsarray rsqbrack
Rule 74    argsarray -> expslice
Rule 75    expslice -> slice_copy
Rule 76    expslice -> slice_left
Rule 77    expslice -> slice_right
Rule 78    expslice -> slice_all
Rule 79    expslice -> expression
Rule 80    slice_copy -> twopoint
Rule 81    slice_left -> expression twopoint
Rule 82    slice_right -> twopoint expression
Rule 83    slice_all -> expression twopoint expression
Rule 84    container -> identifier in argscontainer
Rule 85    argscontainer -> slice_all
Rule 86    argscontainer -> expression
Rule 87    expression -> break
Rule 88    expression -> continue
Rule 89    expression -> return expression
Rule 90    expression -> lparen expression rparen
Rule 91    expression -> id listpoint
Rule 92    listpoint -> point identifier
Rule 93    listpoint -> listpoint point identifier
Rule 94    expression -> native lparen arguments rparen
Rule 95    native -> sin
Rule 96    native -> cos
Rule 97    native -> tan
Rule 98    native -> sqrt
Rule 99    native -> log10
Rule 100   native -> uppercase
Rule 101   native -> lowercase
Rule 102   native -> trunc
Rule 103   native -> float
Rule 104   native -> string
Rule 105   native -> typeof
Rule 106   native -> length
Rule 107   native -> log
Rule 108   native -> parse
Rule 109   native -> push no
Rule 110   native -> pop no
Rule 111   id -> identifier
Rule 112   arguments -> expression
Rule 113   arguments -> arguments comma expression
Rule 114   arguments -> <empty>
Rule 115   struct_parameters -> expression terminator
Rule 116   struct_parameters -> struct_parameters expression terminator
Rule 117   struct_parameters -> <empty>

Terminals, with rules where they appear

Array                : 69
Bool                 : 23
Char                 : 24
Float64              : 22
Int64                : 21
String               : 25
and                  : 64
break                : 87
comma                : 113
continue             : 88
cos                  : 96
definir              : 49 69
div                  : 43 53
else                 : 13
elseif               : 11 12
end                  : 7 8 9 10 14 17 18 19 20
eq                   : 62
equal                : 48
error                : 
exp                  : 45 55
falso                : 36
float                : 103
for                  : 18
function             : 14
global               : 46
gt                   : 60
gte                  : 58
identifier           : 14 19 20 67 71 84 92 93 111
if                   : 7 8 9 10
in                   : 84
length               : 106
lkey                 : 69
local                : 47
log                  : 107
log10                : 99
lowercase            : 101
lparen               : 14 15 16 67 90 94
lsqbrack             : 68 69 70 72 73
lt                   : 61
lte                  : 59
minus                : 41 51 57
mod                  : 44 54
mul                  : 42 52
mutable              : 20
neq                  : 63
no                   : 66 109 110
nothing              : 37
or                   : 65
parse                : 108
plus                 : 40 50 56
point                : 38 39 92 93
pop                  : 110
print                : 15
println              : 16
push                 : 109
return               : 89
rkey                 : 69
rparen               : 14 15 16 67 90 94
rsqbrack             : 68 69 70 72 73
sin                  : 95
sqrt                 : 98
string               : 104
struct               : 19 20
tan                  : 97
terminator           : 2 3 115 116
trunc                : 102
twopoint             : 80 81 82 83
typeof               : 105
uppercase            : 100
valor_cadena         : 33 70
valor_caracter       : 34
valor_decimal        : 32
valor_entero         : 31
verdadero            : 35
while                : 17

Nonterminals, with rules where they appear

argsarray            : 72 73
argscontainer        : 84
arguments            : 14 15 16 67 68 69 94 113
array_access         : 28
array_operator       : 29
container            : 18
else_clause          : 8 10
elseif_clause        : 7 8 12
expression           : 5 7 8 9 10 11 12 17 38 39 40 41 42 43 44 45 46 47 48 48 49 50 50 51 51 52 52 53 53 54 54 55 55 56 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 79 81 82 83 83 86 89 90 112 113 115 116
expslice             : 70 74
id                   : 26 91
if_statement         : 6
jolc                 : 0
list_index           : 71 73
listpoint            : 91 93
native               : 38 94
oparray              : 39
primitive            : 27
slice_all            : 78 85
slice_copy           : 75
slice_left           : 76
slice_right          : 77
statement            : 2 3
statement_list       : 1 3 7 8 9 10 11 12 13 14 17 18
struct_parameters    : 19 20 116
type_data            : 30 49 69

Parsing method: LALR

state 0

    (0) S' -> . jolc
    (1) jolc -> . statement_list
    (2) statement_list -> . statement terminator
    (3) statement_list -> . statement_list statement terminator
    (4) statement_list -> .
    (5) statement -> . expression
    (6) statement -> . if_statement
    (14) statement -> . function identifier lparen arguments rparen statement_list end
    (15) statement -> . print lparen arguments rparen
    (16) statement -> . println lparen arguments rparen
    (17) statement -> . while expression statement_list end
    (18) statement -> . for container statement_list end
    (19) statement -> . struct identifier struct_parameters end
    (20) statement -> . mutable struct identifier struct_parameters end
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (7) if_statement -> . if expression statement_list elseif_clause end
    (8) if_statement -> . if expression statement_list elseif_clause else_clause end
    (9) if_statement -> . if expression statement_list end
    (10) if_statement -> . if expression statement_list else_clause end
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for println resolved as shift
  ! shift/reduce conflict for while resolved as shift
  ! shift/reduce conflict for for resolved as shift
  ! shift/reduce conflict for struct resolved as shift
  ! shift/reduce conflict for mutable resolved as shift
  ! shift/reduce conflict for nothing resolved as shift
  ! shift/reduce conflict for global resolved as shift
  ! shift/reduce conflict for local resolved as shift
  ! shift/reduce conflict for plus resolved as shift
  ! shift/reduce conflict for minus resolved as shift
  ! shift/reduce conflict for no resolved as shift
  ! shift/reduce conflict for identifier resolved as shift
  ! shift/reduce conflict for lsqbrack resolved as shift
  ! shift/reduce conflict for valor_cadena resolved as shift
  ! shift/reduce conflict for break resolved as shift
  ! shift/reduce conflict for continue resolved as shift
  ! shift/reduce conflict for return resolved as shift
  ! shift/reduce conflict for lparen resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for valor_entero resolved as shift
  ! shift/reduce conflict for valor_decimal resolved as shift
  ! shift/reduce conflict for valor_caracter resolved as shift
  ! shift/reduce conflict for verdadero resolved as shift
  ! shift/reduce conflict for falso resolved as shift
  ! shift/reduce conflict for Int64 resolved as shift
  ! shift/reduce conflict for Float64 resolved as shift
  ! shift/reduce conflict for Bool resolved as shift
  ! shift/reduce conflict for Char resolved as shift
  ! shift/reduce conflict for String resolved as shift
  ! shift/reduce conflict for sin resolved as shift
  ! shift/reduce conflict for cos resolved as shift
  ! shift/reduce conflict for tan resolved as shift
  ! shift/reduce conflict for sqrt resolved as shift
  ! shift/reduce conflict for log10 resolved as shift
  ! shift/reduce conflict for uppercase resolved as shift
  ! shift/reduce conflict for lowercase resolved as shift
  ! shift/reduce conflict for trunc resolved as shift
  ! shift/reduce conflict for float resolved as shift
  ! shift/reduce conflict for string resolved as shift
  ! shift/reduce conflict for typeof resolved as shift
  ! shift/reduce conflict for length resolved as shift
  ! shift/reduce conflict for log resolved as shift
  ! shift/reduce conflict for parse resolved as shift
  ! shift/reduce conflict for push resolved as shift
  ! shift/reduce conflict for pop resolved as shift
    $end            reduce using rule 4 (statement_list -> .)
    function        shift and go to state 6
    print           shift and go to state 9
    println         shift and go to state 10
    while           shift and go to state 11
    for             shift and go to state 12
    struct          shift and go to state 13
    mutable         shift and go to state 14
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    if              shift and go to state 32
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

  ! function        [ reduce using rule 4 (statement_list -> .) ]
  ! print           [ reduce using rule 4 (statement_list -> .) ]
  ! println         [ reduce using rule 4 (statement_list -> .) ]
  ! while           [ reduce using rule 4 (statement_list -> .) ]
  ! for             [ reduce using rule 4 (statement_list -> .) ]
  ! struct          [ reduce using rule 4 (statement_list -> .) ]
  ! mutable         [ reduce using rule 4 (statement_list -> .) ]
  ! nothing         [ reduce using rule 4 (statement_list -> .) ]
  ! global          [ reduce using rule 4 (statement_list -> .) ]
  ! local           [ reduce using rule 4 (statement_list -> .) ]
  ! plus            [ reduce using rule 4 (statement_list -> .) ]
  ! minus           [ reduce using rule 4 (statement_list -> .) ]
  ! no              [ reduce using rule 4 (statement_list -> .) ]
  ! identifier      [ reduce using rule 4 (statement_list -> .) ]
  ! lsqbrack        [ reduce using rule 4 (statement_list -> .) ]
  ! valor_cadena    [ reduce using rule 4 (statement_list -> .) ]
  ! break           [ reduce using rule 4 (statement_list -> .) ]
  ! continue        [ reduce using rule 4 (statement_list -> .) ]
  ! return          [ reduce using rule 4 (statement_list -> .) ]
  ! lparen          [ reduce using rule 4 (statement_list -> .) ]
  ! if              [ reduce using rule 4 (statement_list -> .) ]
  ! valor_entero    [ reduce using rule 4 (statement_list -> .) ]
  ! valor_decimal   [ reduce using rule 4 (statement_list -> .) ]
  ! valor_caracter  [ reduce using rule 4 (statement_list -> .) ]
  ! verdadero       [ reduce using rule 4 (statement_list -> .) ]
  ! falso           [ reduce using rule 4 (statement_list -> .) ]
  ! Int64           [ reduce using rule 4 (statement_list -> .) ]
  ! Float64         [ reduce using rule 4 (statement_list -> .) ]
  ! Bool            [ reduce using rule 4 (statement_list -> .) ]
  ! Char            [ reduce using rule 4 (statement_list -> .) ]
  ! String          [ reduce using rule 4 (statement_list -> .) ]
  ! sin             [ reduce using rule 4 (statement_list -> .) ]
  ! cos             [ reduce using rule 4 (statement_list -> .) ]
  ! tan             [ reduce using rule 4 (statement_list -> .) ]
  ! sqrt            [ reduce using rule 4 (statement_list -> .) ]
  ! log10           [ reduce using rule 4 (statement_list -> .) ]
  ! uppercase       [ reduce using rule 4 (statement_list -> .) ]
  ! lowercase       [ reduce using rule 4 (statement_list -> .) ]
  ! trunc           [ reduce using rule 4 (statement_list -> .) ]
  ! float           [ reduce using rule 4 (statement_list -> .) ]
  ! string          [ reduce using rule 4 (statement_list -> .) ]
  ! typeof          [ reduce using rule 4 (statement_list -> .) ]
  ! length          [ reduce using rule 4 (statement_list -> .) ]
  ! log             [ reduce using rule 4 (statement_list -> .) ]
  ! parse           [ reduce using rule 4 (statement_list -> .) ]
  ! push            [ reduce using rule 4 (statement_list -> .) ]
  ! pop             [ reduce using rule 4 (statement_list -> .) ]

    jolc                           shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 4
    if_statement                   shift and go to state 5
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 1

    (0) S' -> jolc .



state 2

    (1) jolc -> statement_list .
    (3) statement_list -> statement_list . statement terminator
    (5) statement -> . expression
    (6) statement -> . if_statement
    (14) statement -> . function identifier lparen arguments rparen statement_list end
    (15) statement -> . print lparen arguments rparen
    (16) statement -> . println lparen arguments rparen
    (17) statement -> . while expression statement_list end
    (18) statement -> . for container statement_list end
    (19) statement -> . struct identifier struct_parameters end
    (20) statement -> . mutable struct identifier struct_parameters end
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (7) if_statement -> . if expression statement_list elseif_clause end
    (8) if_statement -> . if expression statement_list elseif_clause else_clause end
    (9) if_statement -> . if expression statement_list end
    (10) if_statement -> . if expression statement_list else_clause end
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    $end            reduce using rule 1 (jolc -> statement_list .)
    function        shift and go to state 6
    print           shift and go to state 9
    println         shift and go to state 10
    while           shift and go to state 11
    for             shift and go to state 12
    struct          shift and go to state 13
    mutable         shift and go to state 14
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    if              shift and go to state 32
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    statement                      shift and go to state 59
    expression                     shift and go to state 4
    if_statement                   shift and go to state 5
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 3

    (2) statement_list -> statement . terminator

    terminator      shift and go to state 60


state 4

    (5) statement -> expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    terminator      reduce using rule 5 (statement -> expression .)
    equal           shift and go to state 61
    definir         shift and go to state 62
    plus            shift and go to state 63
    minus           shift and go to state 64
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    eq              shift and go to state 73
    neq             shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    point           shift and go to state 77


state 5

    (6) statement -> if_statement .

    terminator      reduce using rule 6 (statement -> if_statement .)


state 6

    (14) statement -> function . identifier lparen arguments rparen statement_list end

    identifier      shift and go to state 78


state 7

    (67) expression -> identifier . lparen arguments rparen
    (71) array_access -> identifier . list_index
    (111) id -> identifier .
    (72) list_index -> . lsqbrack argsarray rsqbrack
    (73) list_index -> . list_index lsqbrack argsarray rsqbrack

  ! shift/reduce conflict for lparen resolved as shift
  ! shift/reduce conflict for lsqbrack resolved as shift
    lparen          shift and go to state 79
    point           reduce using rule 111 (id -> identifier .)
    equal           reduce using rule 111 (id -> identifier .)
    definir         reduce using rule 111 (id -> identifier .)
    plus            reduce using rule 111 (id -> identifier .)
    minus           reduce using rule 111 (id -> identifier .)
    mul             reduce using rule 111 (id -> identifier .)
    div             reduce using rule 111 (id -> identifier .)
    mod             reduce using rule 111 (id -> identifier .)
    exp             reduce using rule 111 (id -> identifier .)
    gte             reduce using rule 111 (id -> identifier .)
    lte             reduce using rule 111 (id -> identifier .)
    gt              reduce using rule 111 (id -> identifier .)
    lt              reduce using rule 111 (id -> identifier .)
    eq              reduce using rule 111 (id -> identifier .)
    neq             reduce using rule 111 (id -> identifier .)
    and             reduce using rule 111 (id -> identifier .)
    or              reduce using rule 111 (id -> identifier .)
    terminator      reduce using rule 111 (id -> identifier .)
    rparen          reduce using rule 111 (id -> identifier .)
    function        reduce using rule 111 (id -> identifier .)
    print           reduce using rule 111 (id -> identifier .)
    println         reduce using rule 111 (id -> identifier .)
    while           reduce using rule 111 (id -> identifier .)
    for             reduce using rule 111 (id -> identifier .)
    struct          reduce using rule 111 (id -> identifier .)
    mutable         reduce using rule 111 (id -> identifier .)
    nothing         reduce using rule 111 (id -> identifier .)
    global          reduce using rule 111 (id -> identifier .)
    local           reduce using rule 111 (id -> identifier .)
    no              reduce using rule 111 (id -> identifier .)
    identifier      reduce using rule 111 (id -> identifier .)
    valor_cadena    reduce using rule 111 (id -> identifier .)
    break           reduce using rule 111 (id -> identifier .)
    continue        reduce using rule 111 (id -> identifier .)
    return          reduce using rule 111 (id -> identifier .)
    if              reduce using rule 111 (id -> identifier .)
    valor_entero    reduce using rule 111 (id -> identifier .)
    valor_decimal   reduce using rule 111 (id -> identifier .)
    valor_caracter  reduce using rule 111 (id -> identifier .)
    verdadero       reduce using rule 111 (id -> identifier .)
    falso           reduce using rule 111 (id -> identifier .)
    Int64           reduce using rule 111 (id -> identifier .)
    Float64         reduce using rule 111 (id -> identifier .)
    Bool            reduce using rule 111 (id -> identifier .)
    Char            reduce using rule 111 (id -> identifier .)
    String          reduce using rule 111 (id -> identifier .)
    sin             reduce using rule 111 (id -> identifier .)
    cos             reduce using rule 111 (id -> identifier .)
    tan             reduce using rule 111 (id -> identifier .)
    sqrt            reduce using rule 111 (id -> identifier .)
    log10           reduce using rule 111 (id -> identifier .)
    uppercase       reduce using rule 111 (id -> identifier .)
    lowercase       reduce using rule 111 (id -> identifier .)
    trunc           reduce using rule 111 (id -> identifier .)
    float           reduce using rule 111 (id -> identifier .)
    string          reduce using rule 111 (id -> identifier .)
    typeof          reduce using rule 111 (id -> identifier .)
    length          reduce using rule 111 (id -> identifier .)
    log             reduce using rule 111 (id -> identifier .)
    parse           reduce using rule 111 (id -> identifier .)
    push            reduce using rule 111 (id -> identifier .)
    pop             reduce using rule 111 (id -> identifier .)
    end             reduce using rule 111 (id -> identifier .)
    rsqbrack        reduce using rule 111 (id -> identifier .)
    comma           reduce using rule 111 (id -> identifier .)
    elseif          reduce using rule 111 (id -> identifier .)
    else            reduce using rule 111 (id -> identifier .)
    twopoint        reduce using rule 111 (id -> identifier .)
    lsqbrack        shift and go to state 81

  ! lsqbrack        [ reduce using rule 111 (id -> identifier .) ]
  ! lparen          [ reduce using rule 111 (id -> identifier .) ]

    list_index                     shift and go to state 80

state 8

    (90) expression -> lparen . expression rparen
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 82
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 9

    (15) statement -> print . lparen arguments rparen

    lparen          shift and go to state 83


state 10

    (16) statement -> println . lparen arguments rparen

    lparen          shift and go to state 84


state 11

    (17) statement -> while . expression statement_list end
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 85
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 12

    (18) statement -> for . container statement_list end
    (84) container -> . identifier in argscontainer

    identifier      shift and go to state 87

    container                      shift and go to state 86

state 13

    (19) statement -> struct . identifier struct_parameters end

    identifier      shift and go to state 88


state 14

    (20) statement -> mutable . struct identifier struct_parameters end

    struct          shift and go to state 89


state 15

    (27) expression -> primitive .

    equal           reduce using rule 27 (expression -> primitive .)
    definir         reduce using rule 27 (expression -> primitive .)
    plus            reduce using rule 27 (expression -> primitive .)
    minus           reduce using rule 27 (expression -> primitive .)
    mul             reduce using rule 27 (expression -> primitive .)
    div             reduce using rule 27 (expression -> primitive .)
    mod             reduce using rule 27 (expression -> primitive .)
    exp             reduce using rule 27 (expression -> primitive .)
    gte             reduce using rule 27 (expression -> primitive .)
    lte             reduce using rule 27 (expression -> primitive .)
    gt              reduce using rule 27 (expression -> primitive .)
    lt              reduce using rule 27 (expression -> primitive .)
    eq              reduce using rule 27 (expression -> primitive .)
    neq             reduce using rule 27 (expression -> primitive .)
    and             reduce using rule 27 (expression -> primitive .)
    or              reduce using rule 27 (expression -> primitive .)
    point           reduce using rule 27 (expression -> primitive .)
    terminator      reduce using rule 27 (expression -> primitive .)
    rparen          reduce using rule 27 (expression -> primitive .)
    function        reduce using rule 27 (expression -> primitive .)
    print           reduce using rule 27 (expression -> primitive .)
    println         reduce using rule 27 (expression -> primitive .)
    while           reduce using rule 27 (expression -> primitive .)
    for             reduce using rule 27 (expression -> primitive .)
    struct          reduce using rule 27 (expression -> primitive .)
    mutable         reduce using rule 27 (expression -> primitive .)
    nothing         reduce using rule 27 (expression -> primitive .)
    global          reduce using rule 27 (expression -> primitive .)
    local           reduce using rule 27 (expression -> primitive .)
    no              reduce using rule 27 (expression -> primitive .)
    identifier      reduce using rule 27 (expression -> primitive .)
    lsqbrack        reduce using rule 27 (expression -> primitive .)
    valor_cadena    reduce using rule 27 (expression -> primitive .)
    break           reduce using rule 27 (expression -> primitive .)
    continue        reduce using rule 27 (expression -> primitive .)
    return          reduce using rule 27 (expression -> primitive .)
    lparen          reduce using rule 27 (expression -> primitive .)
    if              reduce using rule 27 (expression -> primitive .)
    valor_entero    reduce using rule 27 (expression -> primitive .)
    valor_decimal   reduce using rule 27 (expression -> primitive .)
    valor_caracter  reduce using rule 27 (expression -> primitive .)
    verdadero       reduce using rule 27 (expression -> primitive .)
    falso           reduce using rule 27 (expression -> primitive .)
    Int64           reduce using rule 27 (expression -> primitive .)
    Float64         reduce using rule 27 (expression -> primitive .)
    Bool            reduce using rule 27 (expression -> primitive .)
    Char            reduce using rule 27 (expression -> primitive .)
    String          reduce using rule 27 (expression -> primitive .)
    sin             reduce using rule 27 (expression -> primitive .)
    cos             reduce using rule 27 (expression -> primitive .)
    tan             reduce using rule 27 (expression -> primitive .)
    sqrt            reduce using rule 27 (expression -> primitive .)
    log10           reduce using rule 27 (expression -> primitive .)
    uppercase       reduce using rule 27 (expression -> primitive .)
    lowercase       reduce using rule 27 (expression -> primitive .)
    trunc           reduce using rule 27 (expression -> primitive .)
    float           reduce using rule 27 (expression -> primitive .)
    string          reduce using rule 27 (expression -> primitive .)
    typeof          reduce using rule 27 (expression -> primitive .)
    length          reduce using rule 27 (expression -> primitive .)
    log             reduce using rule 27 (expression -> primitive .)
    parse           reduce using rule 27 (expression -> primitive .)
    push            reduce using rule 27 (expression -> primitive .)
    pop             reduce using rule 27 (expression -> primitive .)
    end             reduce using rule 27 (expression -> primitive .)
    rsqbrack        reduce using rule 27 (expression -> primitive .)
    comma           reduce using rule 27 (expression -> primitive .)
    elseif          reduce using rule 27 (expression -> primitive .)
    else            reduce using rule 27 (expression -> primitive .)
    twopoint        reduce using rule 27 (expression -> primitive .)


state 16

    (28) expression -> array_access .

    equal           reduce using rule 28 (expression -> array_access .)
    definir         reduce using rule 28 (expression -> array_access .)
    plus            reduce using rule 28 (expression -> array_access .)
    minus           reduce using rule 28 (expression -> array_access .)
    mul             reduce using rule 28 (expression -> array_access .)
    div             reduce using rule 28 (expression -> array_access .)
    mod             reduce using rule 28 (expression -> array_access .)
    exp             reduce using rule 28 (expression -> array_access .)
    gte             reduce using rule 28 (expression -> array_access .)
    lte             reduce using rule 28 (expression -> array_access .)
    gt              reduce using rule 28 (expression -> array_access .)
    lt              reduce using rule 28 (expression -> array_access .)
    eq              reduce using rule 28 (expression -> array_access .)
    neq             reduce using rule 28 (expression -> array_access .)
    and             reduce using rule 28 (expression -> array_access .)
    or              reduce using rule 28 (expression -> array_access .)
    point           reduce using rule 28 (expression -> array_access .)
    terminator      reduce using rule 28 (expression -> array_access .)
    rparen          reduce using rule 28 (expression -> array_access .)
    function        reduce using rule 28 (expression -> array_access .)
    print           reduce using rule 28 (expression -> array_access .)
    println         reduce using rule 28 (expression -> array_access .)
    while           reduce using rule 28 (expression -> array_access .)
    for             reduce using rule 28 (expression -> array_access .)
    struct          reduce using rule 28 (expression -> array_access .)
    mutable         reduce using rule 28 (expression -> array_access .)
    nothing         reduce using rule 28 (expression -> array_access .)
    global          reduce using rule 28 (expression -> array_access .)
    local           reduce using rule 28 (expression -> array_access .)
    no              reduce using rule 28 (expression -> array_access .)
    identifier      reduce using rule 28 (expression -> array_access .)
    lsqbrack        reduce using rule 28 (expression -> array_access .)
    valor_cadena    reduce using rule 28 (expression -> array_access .)
    break           reduce using rule 28 (expression -> array_access .)
    continue        reduce using rule 28 (expression -> array_access .)
    return          reduce using rule 28 (expression -> array_access .)
    lparen          reduce using rule 28 (expression -> array_access .)
    if              reduce using rule 28 (expression -> array_access .)
    valor_entero    reduce using rule 28 (expression -> array_access .)
    valor_decimal   reduce using rule 28 (expression -> array_access .)
    valor_caracter  reduce using rule 28 (expression -> array_access .)
    verdadero       reduce using rule 28 (expression -> array_access .)
    falso           reduce using rule 28 (expression -> array_access .)
    Int64           reduce using rule 28 (expression -> array_access .)
    Float64         reduce using rule 28 (expression -> array_access .)
    Bool            reduce using rule 28 (expression -> array_access .)
    Char            reduce using rule 28 (expression -> array_access .)
    String          reduce using rule 28 (expression -> array_access .)
    sin             reduce using rule 28 (expression -> array_access .)
    cos             reduce using rule 28 (expression -> array_access .)
    tan             reduce using rule 28 (expression -> array_access .)
    sqrt            reduce using rule 28 (expression -> array_access .)
    log10           reduce using rule 28 (expression -> array_access .)
    uppercase       reduce using rule 28 (expression -> array_access .)
    lowercase       reduce using rule 28 (expression -> array_access .)
    trunc           reduce using rule 28 (expression -> array_access .)
    float           reduce using rule 28 (expression -> array_access .)
    string          reduce using rule 28 (expression -> array_access .)
    typeof          reduce using rule 28 (expression -> array_access .)
    length          reduce using rule 28 (expression -> array_access .)
    log             reduce using rule 28 (expression -> array_access .)
    parse           reduce using rule 28 (expression -> array_access .)
    push            reduce using rule 28 (expression -> array_access .)
    pop             reduce using rule 28 (expression -> array_access .)
    end             reduce using rule 28 (expression -> array_access .)
    rsqbrack        reduce using rule 28 (expression -> array_access .)
    comma           reduce using rule 28 (expression -> array_access .)
    elseif          reduce using rule 28 (expression -> array_access .)
    else            reduce using rule 28 (expression -> array_access .)
    twopoint        reduce using rule 28 (expression -> array_access .)


state 17

    (29) expression -> array_operator .

    equal           reduce using rule 29 (expression -> array_operator .)
    definir         reduce using rule 29 (expression -> array_operator .)
    plus            reduce using rule 29 (expression -> array_operator .)
    minus           reduce using rule 29 (expression -> array_operator .)
    mul             reduce using rule 29 (expression -> array_operator .)
    div             reduce using rule 29 (expression -> array_operator .)
    mod             reduce using rule 29 (expression -> array_operator .)
    exp             reduce using rule 29 (expression -> array_operator .)
    gte             reduce using rule 29 (expression -> array_operator .)
    lte             reduce using rule 29 (expression -> array_operator .)
    gt              reduce using rule 29 (expression -> array_operator .)
    lt              reduce using rule 29 (expression -> array_operator .)
    eq              reduce using rule 29 (expression -> array_operator .)
    neq             reduce using rule 29 (expression -> array_operator .)
    and             reduce using rule 29 (expression -> array_operator .)
    or              reduce using rule 29 (expression -> array_operator .)
    point           reduce using rule 29 (expression -> array_operator .)
    terminator      reduce using rule 29 (expression -> array_operator .)
    rparen          reduce using rule 29 (expression -> array_operator .)
    function        reduce using rule 29 (expression -> array_operator .)
    print           reduce using rule 29 (expression -> array_operator .)
    println         reduce using rule 29 (expression -> array_operator .)
    while           reduce using rule 29 (expression -> array_operator .)
    for             reduce using rule 29 (expression -> array_operator .)
    struct          reduce using rule 29 (expression -> array_operator .)
    mutable         reduce using rule 29 (expression -> array_operator .)
    nothing         reduce using rule 29 (expression -> array_operator .)
    global          reduce using rule 29 (expression -> array_operator .)
    local           reduce using rule 29 (expression -> array_operator .)
    no              reduce using rule 29 (expression -> array_operator .)
    identifier      reduce using rule 29 (expression -> array_operator .)
    lsqbrack        reduce using rule 29 (expression -> array_operator .)
    valor_cadena    reduce using rule 29 (expression -> array_operator .)
    break           reduce using rule 29 (expression -> array_operator .)
    continue        reduce using rule 29 (expression -> array_operator .)
    return          reduce using rule 29 (expression -> array_operator .)
    lparen          reduce using rule 29 (expression -> array_operator .)
    if              reduce using rule 29 (expression -> array_operator .)
    valor_entero    reduce using rule 29 (expression -> array_operator .)
    valor_decimal   reduce using rule 29 (expression -> array_operator .)
    valor_caracter  reduce using rule 29 (expression -> array_operator .)
    verdadero       reduce using rule 29 (expression -> array_operator .)
    falso           reduce using rule 29 (expression -> array_operator .)
    Int64           reduce using rule 29 (expression -> array_operator .)
    Float64         reduce using rule 29 (expression -> array_operator .)
    Bool            reduce using rule 29 (expression -> array_operator .)
    Char            reduce using rule 29 (expression -> array_operator .)
    String          reduce using rule 29 (expression -> array_operator .)
    sin             reduce using rule 29 (expression -> array_operator .)
    cos             reduce using rule 29 (expression -> array_operator .)
    tan             reduce using rule 29 (expression -> array_operator .)
    sqrt            reduce using rule 29 (expression -> array_operator .)
    log10           reduce using rule 29 (expression -> array_operator .)
    uppercase       reduce using rule 29 (expression -> array_operator .)
    lowercase       reduce using rule 29 (expression -> array_operator .)
    trunc           reduce using rule 29 (expression -> array_operator .)
    float           reduce using rule 29 (expression -> array_operator .)
    string          reduce using rule 29 (expression -> array_operator .)
    typeof          reduce using rule 29 (expression -> array_operator .)
    length          reduce using rule 29 (expression -> array_operator .)
    log             reduce using rule 29 (expression -> array_operator .)
    parse           reduce using rule 29 (expression -> array_operator .)
    push            reduce using rule 29 (expression -> array_operator .)
    pop             reduce using rule 29 (expression -> array_operator .)
    end             reduce using rule 29 (expression -> array_operator .)
    rsqbrack        reduce using rule 29 (expression -> array_operator .)
    comma           reduce using rule 29 (expression -> array_operator .)
    elseif          reduce using rule 29 (expression -> array_operator .)
    else            reduce using rule 29 (expression -> array_operator .)
    twopoint        reduce using rule 29 (expression -> array_operator .)


state 18

    (30) expression -> type_data .

    equal           reduce using rule 30 (expression -> type_data .)
    definir         reduce using rule 30 (expression -> type_data .)
    plus            reduce using rule 30 (expression -> type_data .)
    minus           reduce using rule 30 (expression -> type_data .)
    mul             reduce using rule 30 (expression -> type_data .)
    div             reduce using rule 30 (expression -> type_data .)
    mod             reduce using rule 30 (expression -> type_data .)
    exp             reduce using rule 30 (expression -> type_data .)
    gte             reduce using rule 30 (expression -> type_data .)
    lte             reduce using rule 30 (expression -> type_data .)
    gt              reduce using rule 30 (expression -> type_data .)
    lt              reduce using rule 30 (expression -> type_data .)
    eq              reduce using rule 30 (expression -> type_data .)
    neq             reduce using rule 30 (expression -> type_data .)
    and             reduce using rule 30 (expression -> type_data .)
    or              reduce using rule 30 (expression -> type_data .)
    point           reduce using rule 30 (expression -> type_data .)
    terminator      reduce using rule 30 (expression -> type_data .)
    rparen          reduce using rule 30 (expression -> type_data .)
    function        reduce using rule 30 (expression -> type_data .)
    print           reduce using rule 30 (expression -> type_data .)
    println         reduce using rule 30 (expression -> type_data .)
    while           reduce using rule 30 (expression -> type_data .)
    for             reduce using rule 30 (expression -> type_data .)
    struct          reduce using rule 30 (expression -> type_data .)
    mutable         reduce using rule 30 (expression -> type_data .)
    nothing         reduce using rule 30 (expression -> type_data .)
    global          reduce using rule 30 (expression -> type_data .)
    local           reduce using rule 30 (expression -> type_data .)
    no              reduce using rule 30 (expression -> type_data .)
    identifier      reduce using rule 30 (expression -> type_data .)
    lsqbrack        reduce using rule 30 (expression -> type_data .)
    valor_cadena    reduce using rule 30 (expression -> type_data .)
    break           reduce using rule 30 (expression -> type_data .)
    continue        reduce using rule 30 (expression -> type_data .)
    return          reduce using rule 30 (expression -> type_data .)
    lparen          reduce using rule 30 (expression -> type_data .)
    if              reduce using rule 30 (expression -> type_data .)
    valor_entero    reduce using rule 30 (expression -> type_data .)
    valor_decimal   reduce using rule 30 (expression -> type_data .)
    valor_caracter  reduce using rule 30 (expression -> type_data .)
    verdadero       reduce using rule 30 (expression -> type_data .)
    falso           reduce using rule 30 (expression -> type_data .)
    Int64           reduce using rule 30 (expression -> type_data .)
    Float64         reduce using rule 30 (expression -> type_data .)
    Bool            reduce using rule 30 (expression -> type_data .)
    Char            reduce using rule 30 (expression -> type_data .)
    String          reduce using rule 30 (expression -> type_data .)
    sin             reduce using rule 30 (expression -> type_data .)
    cos             reduce using rule 30 (expression -> type_data .)
    tan             reduce using rule 30 (expression -> type_data .)
    sqrt            reduce using rule 30 (expression -> type_data .)
    log10           reduce using rule 30 (expression -> type_data .)
    uppercase       reduce using rule 30 (expression -> type_data .)
    lowercase       reduce using rule 30 (expression -> type_data .)
    trunc           reduce using rule 30 (expression -> type_data .)
    float           reduce using rule 30 (expression -> type_data .)
    string          reduce using rule 30 (expression -> type_data .)
    typeof          reduce using rule 30 (expression -> type_data .)
    length          reduce using rule 30 (expression -> type_data .)
    log             reduce using rule 30 (expression -> type_data .)
    parse           reduce using rule 30 (expression -> type_data .)
    push            reduce using rule 30 (expression -> type_data .)
    pop             reduce using rule 30 (expression -> type_data .)
    end             reduce using rule 30 (expression -> type_data .)
    rsqbrack        reduce using rule 30 (expression -> type_data .)
    comma           reduce using rule 30 (expression -> type_data .)
    elseif          reduce using rule 30 (expression -> type_data .)
    else            reduce using rule 30 (expression -> type_data .)
    twopoint        reduce using rule 30 (expression -> type_data .)


state 19

    (37) expression -> nothing .

    equal           reduce using rule 37 (expression -> nothing .)
    definir         reduce using rule 37 (expression -> nothing .)
    plus            reduce using rule 37 (expression -> nothing .)
    minus           reduce using rule 37 (expression -> nothing .)
    mul             reduce using rule 37 (expression -> nothing .)
    div             reduce using rule 37 (expression -> nothing .)
    mod             reduce using rule 37 (expression -> nothing .)
    exp             reduce using rule 37 (expression -> nothing .)
    gte             reduce using rule 37 (expression -> nothing .)
    lte             reduce using rule 37 (expression -> nothing .)
    gt              reduce using rule 37 (expression -> nothing .)
    lt              reduce using rule 37 (expression -> nothing .)
    eq              reduce using rule 37 (expression -> nothing .)
    neq             reduce using rule 37 (expression -> nothing .)
    and             reduce using rule 37 (expression -> nothing .)
    or              reduce using rule 37 (expression -> nothing .)
    point           reduce using rule 37 (expression -> nothing .)
    terminator      reduce using rule 37 (expression -> nothing .)
    rparen          reduce using rule 37 (expression -> nothing .)
    function        reduce using rule 37 (expression -> nothing .)
    print           reduce using rule 37 (expression -> nothing .)
    println         reduce using rule 37 (expression -> nothing .)
    while           reduce using rule 37 (expression -> nothing .)
    for             reduce using rule 37 (expression -> nothing .)
    struct          reduce using rule 37 (expression -> nothing .)
    mutable         reduce using rule 37 (expression -> nothing .)
    nothing         reduce using rule 37 (expression -> nothing .)
    global          reduce using rule 37 (expression -> nothing .)
    local           reduce using rule 37 (expression -> nothing .)
    no              reduce using rule 37 (expression -> nothing .)
    identifier      reduce using rule 37 (expression -> nothing .)
    lsqbrack        reduce using rule 37 (expression -> nothing .)
    valor_cadena    reduce using rule 37 (expression -> nothing .)
    break           reduce using rule 37 (expression -> nothing .)
    continue        reduce using rule 37 (expression -> nothing .)
    return          reduce using rule 37 (expression -> nothing .)
    lparen          reduce using rule 37 (expression -> nothing .)
    if              reduce using rule 37 (expression -> nothing .)
    valor_entero    reduce using rule 37 (expression -> nothing .)
    valor_decimal   reduce using rule 37 (expression -> nothing .)
    valor_caracter  reduce using rule 37 (expression -> nothing .)
    verdadero       reduce using rule 37 (expression -> nothing .)
    falso           reduce using rule 37 (expression -> nothing .)
    Int64           reduce using rule 37 (expression -> nothing .)
    Float64         reduce using rule 37 (expression -> nothing .)
    Bool            reduce using rule 37 (expression -> nothing .)
    Char            reduce using rule 37 (expression -> nothing .)
    String          reduce using rule 37 (expression -> nothing .)
    sin             reduce using rule 37 (expression -> nothing .)
    cos             reduce using rule 37 (expression -> nothing .)
    tan             reduce using rule 37 (expression -> nothing .)
    sqrt            reduce using rule 37 (expression -> nothing .)
    log10           reduce using rule 37 (expression -> nothing .)
    uppercase       reduce using rule 37 (expression -> nothing .)
    lowercase       reduce using rule 37 (expression -> nothing .)
    trunc           reduce using rule 37 (expression -> nothing .)
    float           reduce using rule 37 (expression -> nothing .)
    string          reduce using rule 37 (expression -> nothing .)
    typeof          reduce using rule 37 (expression -> nothing .)
    length          reduce using rule 37 (expression -> nothing .)
    log             reduce using rule 37 (expression -> nothing .)
    parse           reduce using rule 37 (expression -> nothing .)
    push            reduce using rule 37 (expression -> nothing .)
    pop             reduce using rule 37 (expression -> nothing .)
    end             reduce using rule 37 (expression -> nothing .)
    rsqbrack        reduce using rule 37 (expression -> nothing .)
    comma           reduce using rule 37 (expression -> nothing .)
    elseif          reduce using rule 37 (expression -> nothing .)
    else            reduce using rule 37 (expression -> nothing .)
    twopoint        reduce using rule 37 (expression -> nothing .)


state 20

    (46) expression -> global . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 90
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 21

    (47) expression -> local . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 91
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 22

    (56) expression -> plus . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 92
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 23

    (57) expression -> minus . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 93
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 24

    (66) expression -> no . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 94
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 25

    (68) expression -> lsqbrack . arguments rsqbrack
    (69) expression -> lsqbrack . arguments rsqbrack definir Array lkey type_data rkey
    (112) arguments -> . expression
    (113) arguments -> . arguments comma expression
    (114) arguments -> .
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    rsqbrack        reduce using rule 114 (arguments -> .)
    comma           reduce using rule 114 (arguments -> .)
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    arguments                      shift and go to state 95
    type_data                      shift and go to state 18
    expression                     shift and go to state 96
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    id                             shift and go to state 30
    native                         shift and go to state 31

state 26

    (70) expression -> valor_cadena . lsqbrack expslice rsqbrack
    (33) primitive -> valor_cadena .

  ! shift/reduce conflict for lsqbrack resolved as shift
    lsqbrack        shift and go to state 97
    equal           reduce using rule 33 (primitive -> valor_cadena .)
    definir         reduce using rule 33 (primitive -> valor_cadena .)
    plus            reduce using rule 33 (primitive -> valor_cadena .)
    minus           reduce using rule 33 (primitive -> valor_cadena .)
    mul             reduce using rule 33 (primitive -> valor_cadena .)
    div             reduce using rule 33 (primitive -> valor_cadena .)
    mod             reduce using rule 33 (primitive -> valor_cadena .)
    exp             reduce using rule 33 (primitive -> valor_cadena .)
    gte             reduce using rule 33 (primitive -> valor_cadena .)
    lte             reduce using rule 33 (primitive -> valor_cadena .)
    gt              reduce using rule 33 (primitive -> valor_cadena .)
    lt              reduce using rule 33 (primitive -> valor_cadena .)
    eq              reduce using rule 33 (primitive -> valor_cadena .)
    neq             reduce using rule 33 (primitive -> valor_cadena .)
    and             reduce using rule 33 (primitive -> valor_cadena .)
    or              reduce using rule 33 (primitive -> valor_cadena .)
    point           reduce using rule 33 (primitive -> valor_cadena .)
    terminator      reduce using rule 33 (primitive -> valor_cadena .)
    rparen          reduce using rule 33 (primitive -> valor_cadena .)
    function        reduce using rule 33 (primitive -> valor_cadena .)
    print           reduce using rule 33 (primitive -> valor_cadena .)
    println         reduce using rule 33 (primitive -> valor_cadena .)
    while           reduce using rule 33 (primitive -> valor_cadena .)
    for             reduce using rule 33 (primitive -> valor_cadena .)
    struct          reduce using rule 33 (primitive -> valor_cadena .)
    mutable         reduce using rule 33 (primitive -> valor_cadena .)
    nothing         reduce using rule 33 (primitive -> valor_cadena .)
    global          reduce using rule 33 (primitive -> valor_cadena .)
    local           reduce using rule 33 (primitive -> valor_cadena .)
    no              reduce using rule 33 (primitive -> valor_cadena .)
    identifier      reduce using rule 33 (primitive -> valor_cadena .)
    valor_cadena    reduce using rule 33 (primitive -> valor_cadena .)
    break           reduce using rule 33 (primitive -> valor_cadena .)
    continue        reduce using rule 33 (primitive -> valor_cadena .)
    return          reduce using rule 33 (primitive -> valor_cadena .)
    lparen          reduce using rule 33 (primitive -> valor_cadena .)
    if              reduce using rule 33 (primitive -> valor_cadena .)
    valor_entero    reduce using rule 33 (primitive -> valor_cadena .)
    valor_decimal   reduce using rule 33 (primitive -> valor_cadena .)
    valor_caracter  reduce using rule 33 (primitive -> valor_cadena .)
    verdadero       reduce using rule 33 (primitive -> valor_cadena .)
    falso           reduce using rule 33 (primitive -> valor_cadena .)
    Int64           reduce using rule 33 (primitive -> valor_cadena .)
    Float64         reduce using rule 33 (primitive -> valor_cadena .)
    Bool            reduce using rule 33 (primitive -> valor_cadena .)
    Char            reduce using rule 33 (primitive -> valor_cadena .)
    String          reduce using rule 33 (primitive -> valor_cadena .)
    sin             reduce using rule 33 (primitive -> valor_cadena .)
    cos             reduce using rule 33 (primitive -> valor_cadena .)
    tan             reduce using rule 33 (primitive -> valor_cadena .)
    sqrt            reduce using rule 33 (primitive -> valor_cadena .)
    log10           reduce using rule 33 (primitive -> valor_cadena .)
    uppercase       reduce using rule 33 (primitive -> valor_cadena .)
    lowercase       reduce using rule 33 (primitive -> valor_cadena .)
    trunc           reduce using rule 33 (primitive -> valor_cadena .)
    float           reduce using rule 33 (primitive -> valor_cadena .)
    string          reduce using rule 33 (primitive -> valor_cadena .)
    typeof          reduce using rule 33 (primitive -> valor_cadena .)
    length          reduce using rule 33 (primitive -> valor_cadena .)
    log             reduce using rule 33 (primitive -> valor_cadena .)
    parse           reduce using rule 33 (primitive -> valor_cadena .)
    push            reduce using rule 33 (primitive -> valor_cadena .)
    pop             reduce using rule 33 (primitive -> valor_cadena .)
    end             reduce using rule 33 (primitive -> valor_cadena .)
    rsqbrack        reduce using rule 33 (primitive -> valor_cadena .)
    comma           reduce using rule 33 (primitive -> valor_cadena .)
    elseif          reduce using rule 33 (primitive -> valor_cadena .)
    else            reduce using rule 33 (primitive -> valor_cadena .)
    twopoint        reduce using rule 33 (primitive -> valor_cadena .)

  ! lsqbrack        [ reduce using rule 33 (primitive -> valor_cadena .) ]


state 27

    (87) expression -> break .

    equal           reduce using rule 87 (expression -> break .)
    definir         reduce using rule 87 (expression -> break .)
    plus            reduce using rule 87 (expression -> break .)
    minus           reduce using rule 87 (expression -> break .)
    mul             reduce using rule 87 (expression -> break .)
    div             reduce using rule 87 (expression -> break .)
    mod             reduce using rule 87 (expression -> break .)
    exp             reduce using rule 87 (expression -> break .)
    gte             reduce using rule 87 (expression -> break .)
    lte             reduce using rule 87 (expression -> break .)
    gt              reduce using rule 87 (expression -> break .)
    lt              reduce using rule 87 (expression -> break .)
    eq              reduce using rule 87 (expression -> break .)
    neq             reduce using rule 87 (expression -> break .)
    and             reduce using rule 87 (expression -> break .)
    or              reduce using rule 87 (expression -> break .)
    point           reduce using rule 87 (expression -> break .)
    terminator      reduce using rule 87 (expression -> break .)
    rparen          reduce using rule 87 (expression -> break .)
    function        reduce using rule 87 (expression -> break .)
    print           reduce using rule 87 (expression -> break .)
    println         reduce using rule 87 (expression -> break .)
    while           reduce using rule 87 (expression -> break .)
    for             reduce using rule 87 (expression -> break .)
    struct          reduce using rule 87 (expression -> break .)
    mutable         reduce using rule 87 (expression -> break .)
    nothing         reduce using rule 87 (expression -> break .)
    global          reduce using rule 87 (expression -> break .)
    local           reduce using rule 87 (expression -> break .)
    no              reduce using rule 87 (expression -> break .)
    identifier      reduce using rule 87 (expression -> break .)
    lsqbrack        reduce using rule 87 (expression -> break .)
    valor_cadena    reduce using rule 87 (expression -> break .)
    break           reduce using rule 87 (expression -> break .)
    continue        reduce using rule 87 (expression -> break .)
    return          reduce using rule 87 (expression -> break .)
    lparen          reduce using rule 87 (expression -> break .)
    if              reduce using rule 87 (expression -> break .)
    valor_entero    reduce using rule 87 (expression -> break .)
    valor_decimal   reduce using rule 87 (expression -> break .)
    valor_caracter  reduce using rule 87 (expression -> break .)
    verdadero       reduce using rule 87 (expression -> break .)
    falso           reduce using rule 87 (expression -> break .)
    Int64           reduce using rule 87 (expression -> break .)
    Float64         reduce using rule 87 (expression -> break .)
    Bool            reduce using rule 87 (expression -> break .)
    Char            reduce using rule 87 (expression -> break .)
    String          reduce using rule 87 (expression -> break .)
    sin             reduce using rule 87 (expression -> break .)
    cos             reduce using rule 87 (expression -> break .)
    tan             reduce using rule 87 (expression -> break .)
    sqrt            reduce using rule 87 (expression -> break .)
    log10           reduce using rule 87 (expression -> break .)
    uppercase       reduce using rule 87 (expression -> break .)
    lowercase       reduce using rule 87 (expression -> break .)
    trunc           reduce using rule 87 (expression -> break .)
    float           reduce using rule 87 (expression -> break .)
    string          reduce using rule 87 (expression -> break .)
    typeof          reduce using rule 87 (expression -> break .)
    length          reduce using rule 87 (expression -> break .)
    log             reduce using rule 87 (expression -> break .)
    parse           reduce using rule 87 (expression -> break .)
    push            reduce using rule 87 (expression -> break .)
    pop             reduce using rule 87 (expression -> break .)
    end             reduce using rule 87 (expression -> break .)
    rsqbrack        reduce using rule 87 (expression -> break .)
    comma           reduce using rule 87 (expression -> break .)
    elseif          reduce using rule 87 (expression -> break .)
    else            reduce using rule 87 (expression -> break .)
    twopoint        reduce using rule 87 (expression -> break .)


state 28

    (88) expression -> continue .

    equal           reduce using rule 88 (expression -> continue .)
    definir         reduce using rule 88 (expression -> continue .)
    plus            reduce using rule 88 (expression -> continue .)
    minus           reduce using rule 88 (expression -> continue .)
    mul             reduce using rule 88 (expression -> continue .)
    div             reduce using rule 88 (expression -> continue .)
    mod             reduce using rule 88 (expression -> continue .)
    exp             reduce using rule 88 (expression -> continue .)
    gte             reduce using rule 88 (expression -> continue .)
    lte             reduce using rule 88 (expression -> continue .)
    gt              reduce using rule 88 (expression -> continue .)
    lt              reduce using rule 88 (expression -> continue .)
    eq              reduce using rule 88 (expression -> continue .)
    neq             reduce using rule 88 (expression -> continue .)
    and             reduce using rule 88 (expression -> continue .)
    or              reduce using rule 88 (expression -> continue .)
    point           reduce using rule 88 (expression -> continue .)
    terminator      reduce using rule 88 (expression -> continue .)
    rparen          reduce using rule 88 (expression -> continue .)
    function        reduce using rule 88 (expression -> continue .)
    print           reduce using rule 88 (expression -> continue .)
    println         reduce using rule 88 (expression -> continue .)
    while           reduce using rule 88 (expression -> continue .)
    for             reduce using rule 88 (expression -> continue .)
    struct          reduce using rule 88 (expression -> continue .)
    mutable         reduce using rule 88 (expression -> continue .)
    nothing         reduce using rule 88 (expression -> continue .)
    global          reduce using rule 88 (expression -> continue .)
    local           reduce using rule 88 (expression -> continue .)
    no              reduce using rule 88 (expression -> continue .)
    identifier      reduce using rule 88 (expression -> continue .)
    lsqbrack        reduce using rule 88 (expression -> continue .)
    valor_cadena    reduce using rule 88 (expression -> continue .)
    break           reduce using rule 88 (expression -> continue .)
    continue        reduce using rule 88 (expression -> continue .)
    return          reduce using rule 88 (expression -> continue .)
    lparen          reduce using rule 88 (expression -> continue .)
    if              reduce using rule 88 (expression -> continue .)
    valor_entero    reduce using rule 88 (expression -> continue .)
    valor_decimal   reduce using rule 88 (expression -> continue .)
    valor_caracter  reduce using rule 88 (expression -> continue .)
    verdadero       reduce using rule 88 (expression -> continue .)
    falso           reduce using rule 88 (expression -> continue .)
    Int64           reduce using rule 88 (expression -> continue .)
    Float64         reduce using rule 88 (expression -> continue .)
    Bool            reduce using rule 88 (expression -> continue .)
    Char            reduce using rule 88 (expression -> continue .)
    String          reduce using rule 88 (expression -> continue .)
    sin             reduce using rule 88 (expression -> continue .)
    cos             reduce using rule 88 (expression -> continue .)
    tan             reduce using rule 88 (expression -> continue .)
    sqrt            reduce using rule 88 (expression -> continue .)
    log10           reduce using rule 88 (expression -> continue .)
    uppercase       reduce using rule 88 (expression -> continue .)
    lowercase       reduce using rule 88 (expression -> continue .)
    trunc           reduce using rule 88 (expression -> continue .)
    float           reduce using rule 88 (expression -> continue .)
    string          reduce using rule 88 (expression -> continue .)
    typeof          reduce using rule 88 (expression -> continue .)
    length          reduce using rule 88 (expression -> continue .)
    log             reduce using rule 88 (expression -> continue .)
    parse           reduce using rule 88 (expression -> continue .)
    push            reduce using rule 88 (expression -> continue .)
    pop             reduce using rule 88 (expression -> continue .)
    end             reduce using rule 88 (expression -> continue .)
    rsqbrack        reduce using rule 88 (expression -> continue .)
    comma           reduce using rule 88 (expression -> continue .)
    elseif          reduce using rule 88 (expression -> continue .)
    else            reduce using rule 88 (expression -> continue .)
    twopoint        reduce using rule 88 (expression -> continue .)


state 29

    (89) expression -> return . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 98
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 30

    (91) expression -> id . listpoint
    (26) type_data -> id .
    (92) listpoint -> . point identifier
    (93) listpoint -> . listpoint point identifier

  ! shift/reduce conflict for point resolved as shift
    equal           reduce using rule 26 (type_data -> id .)
    definir         reduce using rule 26 (type_data -> id .)
    plus            reduce using rule 26 (type_data -> id .)
    minus           reduce using rule 26 (type_data -> id .)
    mul             reduce using rule 26 (type_data -> id .)
    div             reduce using rule 26 (type_data -> id .)
    mod             reduce using rule 26 (type_data -> id .)
    exp             reduce using rule 26 (type_data -> id .)
    gte             reduce using rule 26 (type_data -> id .)
    lte             reduce using rule 26 (type_data -> id .)
    gt              reduce using rule 26 (type_data -> id .)
    lt              reduce using rule 26 (type_data -> id .)
    eq              reduce using rule 26 (type_data -> id .)
    neq             reduce using rule 26 (type_data -> id .)
    and             reduce using rule 26 (type_data -> id .)
    or              reduce using rule 26 (type_data -> id .)
    terminator      reduce using rule 26 (type_data -> id .)
    rparen          reduce using rule 26 (type_data -> id .)
    function        reduce using rule 26 (type_data -> id .)
    print           reduce using rule 26 (type_data -> id .)
    println         reduce using rule 26 (type_data -> id .)
    while           reduce using rule 26 (type_data -> id .)
    for             reduce using rule 26 (type_data -> id .)
    struct          reduce using rule 26 (type_data -> id .)
    mutable         reduce using rule 26 (type_data -> id .)
    nothing         reduce using rule 26 (type_data -> id .)
    global          reduce using rule 26 (type_data -> id .)
    local           reduce using rule 26 (type_data -> id .)
    no              reduce using rule 26 (type_data -> id .)
    identifier      reduce using rule 26 (type_data -> id .)
    lsqbrack        reduce using rule 26 (type_data -> id .)
    valor_cadena    reduce using rule 26 (type_data -> id .)
    break           reduce using rule 26 (type_data -> id .)
    continue        reduce using rule 26 (type_data -> id .)
    return          reduce using rule 26 (type_data -> id .)
    lparen          reduce using rule 26 (type_data -> id .)
    if              reduce using rule 26 (type_data -> id .)
    valor_entero    reduce using rule 26 (type_data -> id .)
    valor_decimal   reduce using rule 26 (type_data -> id .)
    valor_caracter  reduce using rule 26 (type_data -> id .)
    verdadero       reduce using rule 26 (type_data -> id .)
    falso           reduce using rule 26 (type_data -> id .)
    Int64           reduce using rule 26 (type_data -> id .)
    Float64         reduce using rule 26 (type_data -> id .)
    Bool            reduce using rule 26 (type_data -> id .)
    Char            reduce using rule 26 (type_data -> id .)
    String          reduce using rule 26 (type_data -> id .)
    sin             reduce using rule 26 (type_data -> id .)
    cos             reduce using rule 26 (type_data -> id .)
    tan             reduce using rule 26 (type_data -> id .)
    sqrt            reduce using rule 26 (type_data -> id .)
    log10           reduce using rule 26 (type_data -> id .)
    uppercase       reduce using rule 26 (type_data -> id .)
    lowercase       reduce using rule 26 (type_data -> id .)
    trunc           reduce using rule 26 (type_data -> id .)
    float           reduce using rule 26 (type_data -> id .)
    string          reduce using rule 26 (type_data -> id .)
    typeof          reduce using rule 26 (type_data -> id .)
    length          reduce using rule 26 (type_data -> id .)
    log             reduce using rule 26 (type_data -> id .)
    parse           reduce using rule 26 (type_data -> id .)
    push            reduce using rule 26 (type_data -> id .)
    pop             reduce using rule 26 (type_data -> id .)
    end             reduce using rule 26 (type_data -> id .)
    rsqbrack        reduce using rule 26 (type_data -> id .)
    comma           reduce using rule 26 (type_data -> id .)
    elseif          reduce using rule 26 (type_data -> id .)
    else            reduce using rule 26 (type_data -> id .)
    twopoint        reduce using rule 26 (type_data -> id .)
    point           shift and go to state 100

  ! point           [ reduce using rule 26 (type_data -> id .) ]

    listpoint                      shift and go to state 99

state 31

    (94) expression -> native . lparen arguments rparen
    (38) array_operator -> native . point expression

    lparen          shift and go to state 101
    point           shift and go to state 102


state 32

    (7) if_statement -> if . expression statement_list elseif_clause end
    (8) if_statement -> if . expression statement_list elseif_clause else_clause end
    (9) if_statement -> if . expression statement_list end
    (10) if_statement -> if . expression statement_list else_clause end
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 103
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 33

    (31) primitive -> valor_entero .

    equal           reduce using rule 31 (primitive -> valor_entero .)
    definir         reduce using rule 31 (primitive -> valor_entero .)
    plus            reduce using rule 31 (primitive -> valor_entero .)
    minus           reduce using rule 31 (primitive -> valor_entero .)
    mul             reduce using rule 31 (primitive -> valor_entero .)
    div             reduce using rule 31 (primitive -> valor_entero .)
    mod             reduce using rule 31 (primitive -> valor_entero .)
    exp             reduce using rule 31 (primitive -> valor_entero .)
    gte             reduce using rule 31 (primitive -> valor_entero .)
    lte             reduce using rule 31 (primitive -> valor_entero .)
    gt              reduce using rule 31 (primitive -> valor_entero .)
    lt              reduce using rule 31 (primitive -> valor_entero .)
    eq              reduce using rule 31 (primitive -> valor_entero .)
    neq             reduce using rule 31 (primitive -> valor_entero .)
    and             reduce using rule 31 (primitive -> valor_entero .)
    or              reduce using rule 31 (primitive -> valor_entero .)
    point           reduce using rule 31 (primitive -> valor_entero .)
    terminator      reduce using rule 31 (primitive -> valor_entero .)
    rparen          reduce using rule 31 (primitive -> valor_entero .)
    function        reduce using rule 31 (primitive -> valor_entero .)
    print           reduce using rule 31 (primitive -> valor_entero .)
    println         reduce using rule 31 (primitive -> valor_entero .)
    while           reduce using rule 31 (primitive -> valor_entero .)
    for             reduce using rule 31 (primitive -> valor_entero .)
    struct          reduce using rule 31 (primitive -> valor_entero .)
    mutable         reduce using rule 31 (primitive -> valor_entero .)
    nothing         reduce using rule 31 (primitive -> valor_entero .)
    global          reduce using rule 31 (primitive -> valor_entero .)
    local           reduce using rule 31 (primitive -> valor_entero .)
    no              reduce using rule 31 (primitive -> valor_entero .)
    identifier      reduce using rule 31 (primitive -> valor_entero .)
    lsqbrack        reduce using rule 31 (primitive -> valor_entero .)
    valor_cadena    reduce using rule 31 (primitive -> valor_entero .)
    break           reduce using rule 31 (primitive -> valor_entero .)
    continue        reduce using rule 31 (primitive -> valor_entero .)
    return          reduce using rule 31 (primitive -> valor_entero .)
    lparen          reduce using rule 31 (primitive -> valor_entero .)
    if              reduce using rule 31 (primitive -> valor_entero .)
    valor_entero    reduce using rule 31 (primitive -> valor_entero .)
    valor_decimal   reduce using rule 31 (primitive -> valor_entero .)
    valor_caracter  reduce using rule 31 (primitive -> valor_entero .)
    verdadero       reduce using rule 31 (primitive -> valor_entero .)
    falso           reduce using rule 31 (primitive -> valor_entero .)
    Int64           reduce using rule 31 (primitive -> valor_entero .)
    Float64         reduce using rule 31 (primitive -> valor_entero .)
    Bool            reduce using rule 31 (primitive -> valor_entero .)
    Char            reduce using rule 31 (primitive -> valor_entero .)
    String          reduce using rule 31 (primitive -> valor_entero .)
    sin             reduce using rule 31 (primitive -> valor_entero .)
    cos             reduce using rule 31 (primitive -> valor_entero .)
    tan             reduce using rule 31 (primitive -> valor_entero .)
    sqrt            reduce using rule 31 (primitive -> valor_entero .)
    log10           reduce using rule 31 (primitive -> valor_entero .)
    uppercase       reduce using rule 31 (primitive -> valor_entero .)
    lowercase       reduce using rule 31 (primitive -> valor_entero .)
    trunc           reduce using rule 31 (primitive -> valor_entero .)
    float           reduce using rule 31 (primitive -> valor_entero .)
    string          reduce using rule 31 (primitive -> valor_entero .)
    typeof          reduce using rule 31 (primitive -> valor_entero .)
    length          reduce using rule 31 (primitive -> valor_entero .)
    log             reduce using rule 31 (primitive -> valor_entero .)
    parse           reduce using rule 31 (primitive -> valor_entero .)
    push            reduce using rule 31 (primitive -> valor_entero .)
    pop             reduce using rule 31 (primitive -> valor_entero .)
    end             reduce using rule 31 (primitive -> valor_entero .)
    rsqbrack        reduce using rule 31 (primitive -> valor_entero .)
    comma           reduce using rule 31 (primitive -> valor_entero .)
    elseif          reduce using rule 31 (primitive -> valor_entero .)
    else            reduce using rule 31 (primitive -> valor_entero .)
    twopoint        reduce using rule 31 (primitive -> valor_entero .)


state 34

    (32) primitive -> valor_decimal .

    equal           reduce using rule 32 (primitive -> valor_decimal .)
    definir         reduce using rule 32 (primitive -> valor_decimal .)
    plus            reduce using rule 32 (primitive -> valor_decimal .)
    minus           reduce using rule 32 (primitive -> valor_decimal .)
    mul             reduce using rule 32 (primitive -> valor_decimal .)
    div             reduce using rule 32 (primitive -> valor_decimal .)
    mod             reduce using rule 32 (primitive -> valor_decimal .)
    exp             reduce using rule 32 (primitive -> valor_decimal .)
    gte             reduce using rule 32 (primitive -> valor_decimal .)
    lte             reduce using rule 32 (primitive -> valor_decimal .)
    gt              reduce using rule 32 (primitive -> valor_decimal .)
    lt              reduce using rule 32 (primitive -> valor_decimal .)
    eq              reduce using rule 32 (primitive -> valor_decimal .)
    neq             reduce using rule 32 (primitive -> valor_decimal .)
    and             reduce using rule 32 (primitive -> valor_decimal .)
    or              reduce using rule 32 (primitive -> valor_decimal .)
    point           reduce using rule 32 (primitive -> valor_decimal .)
    terminator      reduce using rule 32 (primitive -> valor_decimal .)
    rparen          reduce using rule 32 (primitive -> valor_decimal .)
    function        reduce using rule 32 (primitive -> valor_decimal .)
    print           reduce using rule 32 (primitive -> valor_decimal .)
    println         reduce using rule 32 (primitive -> valor_decimal .)
    while           reduce using rule 32 (primitive -> valor_decimal .)
    for             reduce using rule 32 (primitive -> valor_decimal .)
    struct          reduce using rule 32 (primitive -> valor_decimal .)
    mutable         reduce using rule 32 (primitive -> valor_decimal .)
    nothing         reduce using rule 32 (primitive -> valor_decimal .)
    global          reduce using rule 32 (primitive -> valor_decimal .)
    local           reduce using rule 32 (primitive -> valor_decimal .)
    no              reduce using rule 32 (primitive -> valor_decimal .)
    identifier      reduce using rule 32 (primitive -> valor_decimal .)
    lsqbrack        reduce using rule 32 (primitive -> valor_decimal .)
    valor_cadena    reduce using rule 32 (primitive -> valor_decimal .)
    break           reduce using rule 32 (primitive -> valor_decimal .)
    continue        reduce using rule 32 (primitive -> valor_decimal .)
    return          reduce using rule 32 (primitive -> valor_decimal .)
    lparen          reduce using rule 32 (primitive -> valor_decimal .)
    if              reduce using rule 32 (primitive -> valor_decimal .)
    valor_entero    reduce using rule 32 (primitive -> valor_decimal .)
    valor_decimal   reduce using rule 32 (primitive -> valor_decimal .)
    valor_caracter  reduce using rule 32 (primitive -> valor_decimal .)
    verdadero       reduce using rule 32 (primitive -> valor_decimal .)
    falso           reduce using rule 32 (primitive -> valor_decimal .)
    Int64           reduce using rule 32 (primitive -> valor_decimal .)
    Float64         reduce using rule 32 (primitive -> valor_decimal .)
    Bool            reduce using rule 32 (primitive -> valor_decimal .)
    Char            reduce using rule 32 (primitive -> valor_decimal .)
    String          reduce using rule 32 (primitive -> valor_decimal .)
    sin             reduce using rule 32 (primitive -> valor_decimal .)
    cos             reduce using rule 32 (primitive -> valor_decimal .)
    tan             reduce using rule 32 (primitive -> valor_decimal .)
    sqrt            reduce using rule 32 (primitive -> valor_decimal .)
    log10           reduce using rule 32 (primitive -> valor_decimal .)
    uppercase       reduce using rule 32 (primitive -> valor_decimal .)
    lowercase       reduce using rule 32 (primitive -> valor_decimal .)
    trunc           reduce using rule 32 (primitive -> valor_decimal .)
    float           reduce using rule 32 (primitive -> valor_decimal .)
    string          reduce using rule 32 (primitive -> valor_decimal .)
    typeof          reduce using rule 32 (primitive -> valor_decimal .)
    length          reduce using rule 32 (primitive -> valor_decimal .)
    log             reduce using rule 32 (primitive -> valor_decimal .)
    parse           reduce using rule 32 (primitive -> valor_decimal .)
    push            reduce using rule 32 (primitive -> valor_decimal .)
    pop             reduce using rule 32 (primitive -> valor_decimal .)
    end             reduce using rule 32 (primitive -> valor_decimal .)
    rsqbrack        reduce using rule 32 (primitive -> valor_decimal .)
    comma           reduce using rule 32 (primitive -> valor_decimal .)
    elseif          reduce using rule 32 (primitive -> valor_decimal .)
    else            reduce using rule 32 (primitive -> valor_decimal .)
    twopoint        reduce using rule 32 (primitive -> valor_decimal .)


state 35

    (34) primitive -> valor_caracter .

    equal           reduce using rule 34 (primitive -> valor_caracter .)
    definir         reduce using rule 34 (primitive -> valor_caracter .)
    plus            reduce using rule 34 (primitive -> valor_caracter .)
    minus           reduce using rule 34 (primitive -> valor_caracter .)
    mul             reduce using rule 34 (primitive -> valor_caracter .)
    div             reduce using rule 34 (primitive -> valor_caracter .)
    mod             reduce using rule 34 (primitive -> valor_caracter .)
    exp             reduce using rule 34 (primitive -> valor_caracter .)
    gte             reduce using rule 34 (primitive -> valor_caracter .)
    lte             reduce using rule 34 (primitive -> valor_caracter .)
    gt              reduce using rule 34 (primitive -> valor_caracter .)
    lt              reduce using rule 34 (primitive -> valor_caracter .)
    eq              reduce using rule 34 (primitive -> valor_caracter .)
    neq             reduce using rule 34 (primitive -> valor_caracter .)
    and             reduce using rule 34 (primitive -> valor_caracter .)
    or              reduce using rule 34 (primitive -> valor_caracter .)
    point           reduce using rule 34 (primitive -> valor_caracter .)
    terminator      reduce using rule 34 (primitive -> valor_caracter .)
    rparen          reduce using rule 34 (primitive -> valor_caracter .)
    function        reduce using rule 34 (primitive -> valor_caracter .)
    print           reduce using rule 34 (primitive -> valor_caracter .)
    println         reduce using rule 34 (primitive -> valor_caracter .)
    while           reduce using rule 34 (primitive -> valor_caracter .)
    for             reduce using rule 34 (primitive -> valor_caracter .)
    struct          reduce using rule 34 (primitive -> valor_caracter .)
    mutable         reduce using rule 34 (primitive -> valor_caracter .)
    nothing         reduce using rule 34 (primitive -> valor_caracter .)
    global          reduce using rule 34 (primitive -> valor_caracter .)
    local           reduce using rule 34 (primitive -> valor_caracter .)
    no              reduce using rule 34 (primitive -> valor_caracter .)
    identifier      reduce using rule 34 (primitive -> valor_caracter .)
    lsqbrack        reduce using rule 34 (primitive -> valor_caracter .)
    valor_cadena    reduce using rule 34 (primitive -> valor_caracter .)
    break           reduce using rule 34 (primitive -> valor_caracter .)
    continue        reduce using rule 34 (primitive -> valor_caracter .)
    return          reduce using rule 34 (primitive -> valor_caracter .)
    lparen          reduce using rule 34 (primitive -> valor_caracter .)
    if              reduce using rule 34 (primitive -> valor_caracter .)
    valor_entero    reduce using rule 34 (primitive -> valor_caracter .)
    valor_decimal   reduce using rule 34 (primitive -> valor_caracter .)
    valor_caracter  reduce using rule 34 (primitive -> valor_caracter .)
    verdadero       reduce using rule 34 (primitive -> valor_caracter .)
    falso           reduce using rule 34 (primitive -> valor_caracter .)
    Int64           reduce using rule 34 (primitive -> valor_caracter .)
    Float64         reduce using rule 34 (primitive -> valor_caracter .)
    Bool            reduce using rule 34 (primitive -> valor_caracter .)
    Char            reduce using rule 34 (primitive -> valor_caracter .)
    String          reduce using rule 34 (primitive -> valor_caracter .)
    sin             reduce using rule 34 (primitive -> valor_caracter .)
    cos             reduce using rule 34 (primitive -> valor_caracter .)
    tan             reduce using rule 34 (primitive -> valor_caracter .)
    sqrt            reduce using rule 34 (primitive -> valor_caracter .)
    log10           reduce using rule 34 (primitive -> valor_caracter .)
    uppercase       reduce using rule 34 (primitive -> valor_caracter .)
    lowercase       reduce using rule 34 (primitive -> valor_caracter .)
    trunc           reduce using rule 34 (primitive -> valor_caracter .)
    float           reduce using rule 34 (primitive -> valor_caracter .)
    string          reduce using rule 34 (primitive -> valor_caracter .)
    typeof          reduce using rule 34 (primitive -> valor_caracter .)
    length          reduce using rule 34 (primitive -> valor_caracter .)
    log             reduce using rule 34 (primitive -> valor_caracter .)
    parse           reduce using rule 34 (primitive -> valor_caracter .)
    push            reduce using rule 34 (primitive -> valor_caracter .)
    pop             reduce using rule 34 (primitive -> valor_caracter .)
    end             reduce using rule 34 (primitive -> valor_caracter .)
    rsqbrack        reduce using rule 34 (primitive -> valor_caracter .)
    comma           reduce using rule 34 (primitive -> valor_caracter .)
    elseif          reduce using rule 34 (primitive -> valor_caracter .)
    else            reduce using rule 34 (primitive -> valor_caracter .)
    twopoint        reduce using rule 34 (primitive -> valor_caracter .)


state 36

    (35) primitive -> verdadero .

    equal           reduce using rule 35 (primitive -> verdadero .)
    definir         reduce using rule 35 (primitive -> verdadero .)
    plus            reduce using rule 35 (primitive -> verdadero .)
    minus           reduce using rule 35 (primitive -> verdadero .)
    mul             reduce using rule 35 (primitive -> verdadero .)
    div             reduce using rule 35 (primitive -> verdadero .)
    mod             reduce using rule 35 (primitive -> verdadero .)
    exp             reduce using rule 35 (primitive -> verdadero .)
    gte             reduce using rule 35 (primitive -> verdadero .)
    lte             reduce using rule 35 (primitive -> verdadero .)
    gt              reduce using rule 35 (primitive -> verdadero .)
    lt              reduce using rule 35 (primitive -> verdadero .)
    eq              reduce using rule 35 (primitive -> verdadero .)
    neq             reduce using rule 35 (primitive -> verdadero .)
    and             reduce using rule 35 (primitive -> verdadero .)
    or              reduce using rule 35 (primitive -> verdadero .)
    point           reduce using rule 35 (primitive -> verdadero .)
    terminator      reduce using rule 35 (primitive -> verdadero .)
    rparen          reduce using rule 35 (primitive -> verdadero .)
    function        reduce using rule 35 (primitive -> verdadero .)
    print           reduce using rule 35 (primitive -> verdadero .)
    println         reduce using rule 35 (primitive -> verdadero .)
    while           reduce using rule 35 (primitive -> verdadero .)
    for             reduce using rule 35 (primitive -> verdadero .)
    struct          reduce using rule 35 (primitive -> verdadero .)
    mutable         reduce using rule 35 (primitive -> verdadero .)
    nothing         reduce using rule 35 (primitive -> verdadero .)
    global          reduce using rule 35 (primitive -> verdadero .)
    local           reduce using rule 35 (primitive -> verdadero .)
    no              reduce using rule 35 (primitive -> verdadero .)
    identifier      reduce using rule 35 (primitive -> verdadero .)
    lsqbrack        reduce using rule 35 (primitive -> verdadero .)
    valor_cadena    reduce using rule 35 (primitive -> verdadero .)
    break           reduce using rule 35 (primitive -> verdadero .)
    continue        reduce using rule 35 (primitive -> verdadero .)
    return          reduce using rule 35 (primitive -> verdadero .)
    lparen          reduce using rule 35 (primitive -> verdadero .)
    if              reduce using rule 35 (primitive -> verdadero .)
    valor_entero    reduce using rule 35 (primitive -> verdadero .)
    valor_decimal   reduce using rule 35 (primitive -> verdadero .)
    valor_caracter  reduce using rule 35 (primitive -> verdadero .)
    verdadero       reduce using rule 35 (primitive -> verdadero .)
    falso           reduce using rule 35 (primitive -> verdadero .)
    Int64           reduce using rule 35 (primitive -> verdadero .)
    Float64         reduce using rule 35 (primitive -> verdadero .)
    Bool            reduce using rule 35 (primitive -> verdadero .)
    Char            reduce using rule 35 (primitive -> verdadero .)
    String          reduce using rule 35 (primitive -> verdadero .)
    sin             reduce using rule 35 (primitive -> verdadero .)
    cos             reduce using rule 35 (primitive -> verdadero .)
    tan             reduce using rule 35 (primitive -> verdadero .)
    sqrt            reduce using rule 35 (primitive -> verdadero .)
    log10           reduce using rule 35 (primitive -> verdadero .)
    uppercase       reduce using rule 35 (primitive -> verdadero .)
    lowercase       reduce using rule 35 (primitive -> verdadero .)
    trunc           reduce using rule 35 (primitive -> verdadero .)
    float           reduce using rule 35 (primitive -> verdadero .)
    string          reduce using rule 35 (primitive -> verdadero .)
    typeof          reduce using rule 35 (primitive -> verdadero .)
    length          reduce using rule 35 (primitive -> verdadero .)
    log             reduce using rule 35 (primitive -> verdadero .)
    parse           reduce using rule 35 (primitive -> verdadero .)
    push            reduce using rule 35 (primitive -> verdadero .)
    pop             reduce using rule 35 (primitive -> verdadero .)
    end             reduce using rule 35 (primitive -> verdadero .)
    rsqbrack        reduce using rule 35 (primitive -> verdadero .)
    comma           reduce using rule 35 (primitive -> verdadero .)
    elseif          reduce using rule 35 (primitive -> verdadero .)
    else            reduce using rule 35 (primitive -> verdadero .)
    twopoint        reduce using rule 35 (primitive -> verdadero .)


state 37

    (36) primitive -> falso .

    equal           reduce using rule 36 (primitive -> falso .)
    definir         reduce using rule 36 (primitive -> falso .)
    plus            reduce using rule 36 (primitive -> falso .)
    minus           reduce using rule 36 (primitive -> falso .)
    mul             reduce using rule 36 (primitive -> falso .)
    div             reduce using rule 36 (primitive -> falso .)
    mod             reduce using rule 36 (primitive -> falso .)
    exp             reduce using rule 36 (primitive -> falso .)
    gte             reduce using rule 36 (primitive -> falso .)
    lte             reduce using rule 36 (primitive -> falso .)
    gt              reduce using rule 36 (primitive -> falso .)
    lt              reduce using rule 36 (primitive -> falso .)
    eq              reduce using rule 36 (primitive -> falso .)
    neq             reduce using rule 36 (primitive -> falso .)
    and             reduce using rule 36 (primitive -> falso .)
    or              reduce using rule 36 (primitive -> falso .)
    point           reduce using rule 36 (primitive -> falso .)
    terminator      reduce using rule 36 (primitive -> falso .)
    rparen          reduce using rule 36 (primitive -> falso .)
    function        reduce using rule 36 (primitive -> falso .)
    print           reduce using rule 36 (primitive -> falso .)
    println         reduce using rule 36 (primitive -> falso .)
    while           reduce using rule 36 (primitive -> falso .)
    for             reduce using rule 36 (primitive -> falso .)
    struct          reduce using rule 36 (primitive -> falso .)
    mutable         reduce using rule 36 (primitive -> falso .)
    nothing         reduce using rule 36 (primitive -> falso .)
    global          reduce using rule 36 (primitive -> falso .)
    local           reduce using rule 36 (primitive -> falso .)
    no              reduce using rule 36 (primitive -> falso .)
    identifier      reduce using rule 36 (primitive -> falso .)
    lsqbrack        reduce using rule 36 (primitive -> falso .)
    valor_cadena    reduce using rule 36 (primitive -> falso .)
    break           reduce using rule 36 (primitive -> falso .)
    continue        reduce using rule 36 (primitive -> falso .)
    return          reduce using rule 36 (primitive -> falso .)
    lparen          reduce using rule 36 (primitive -> falso .)
    if              reduce using rule 36 (primitive -> falso .)
    valor_entero    reduce using rule 36 (primitive -> falso .)
    valor_decimal   reduce using rule 36 (primitive -> falso .)
    valor_caracter  reduce using rule 36 (primitive -> falso .)
    verdadero       reduce using rule 36 (primitive -> falso .)
    falso           reduce using rule 36 (primitive -> falso .)
    Int64           reduce using rule 36 (primitive -> falso .)
    Float64         reduce using rule 36 (primitive -> falso .)
    Bool            reduce using rule 36 (primitive -> falso .)
    Char            reduce using rule 36 (primitive -> falso .)
    String          reduce using rule 36 (primitive -> falso .)
    sin             reduce using rule 36 (primitive -> falso .)
    cos             reduce using rule 36 (primitive -> falso .)
    tan             reduce using rule 36 (primitive -> falso .)
    sqrt            reduce using rule 36 (primitive -> falso .)
    log10           reduce using rule 36 (primitive -> falso .)
    uppercase       reduce using rule 36 (primitive -> falso .)
    lowercase       reduce using rule 36 (primitive -> falso .)
    trunc           reduce using rule 36 (primitive -> falso .)
    float           reduce using rule 36 (primitive -> falso .)
    string          reduce using rule 36 (primitive -> falso .)
    typeof          reduce using rule 36 (primitive -> falso .)
    length          reduce using rule 36 (primitive -> falso .)
    log             reduce using rule 36 (primitive -> falso .)
    parse           reduce using rule 36 (primitive -> falso .)
    push            reduce using rule 36 (primitive -> falso .)
    pop             reduce using rule 36 (primitive -> falso .)
    end             reduce using rule 36 (primitive -> falso .)
    rsqbrack        reduce using rule 36 (primitive -> falso .)
    comma           reduce using rule 36 (primitive -> falso .)
    elseif          reduce using rule 36 (primitive -> falso .)
    else            reduce using rule 36 (primitive -> falso .)
    twopoint        reduce using rule 36 (primitive -> falso .)


state 38

    (21) type_data -> Int64 .

    equal           reduce using rule 21 (type_data -> Int64 .)
    definir         reduce using rule 21 (type_data -> Int64 .)
    plus            reduce using rule 21 (type_data -> Int64 .)
    minus           reduce using rule 21 (type_data -> Int64 .)
    mul             reduce using rule 21 (type_data -> Int64 .)
    div             reduce using rule 21 (type_data -> Int64 .)
    mod             reduce using rule 21 (type_data -> Int64 .)
    exp             reduce using rule 21 (type_data -> Int64 .)
    gte             reduce using rule 21 (type_data -> Int64 .)
    lte             reduce using rule 21 (type_data -> Int64 .)
    gt              reduce using rule 21 (type_data -> Int64 .)
    lt              reduce using rule 21 (type_data -> Int64 .)
    eq              reduce using rule 21 (type_data -> Int64 .)
    neq             reduce using rule 21 (type_data -> Int64 .)
    and             reduce using rule 21 (type_data -> Int64 .)
    or              reduce using rule 21 (type_data -> Int64 .)
    point           reduce using rule 21 (type_data -> Int64 .)
    terminator      reduce using rule 21 (type_data -> Int64 .)
    rparen          reduce using rule 21 (type_data -> Int64 .)
    function        reduce using rule 21 (type_data -> Int64 .)
    print           reduce using rule 21 (type_data -> Int64 .)
    println         reduce using rule 21 (type_data -> Int64 .)
    while           reduce using rule 21 (type_data -> Int64 .)
    for             reduce using rule 21 (type_data -> Int64 .)
    struct          reduce using rule 21 (type_data -> Int64 .)
    mutable         reduce using rule 21 (type_data -> Int64 .)
    nothing         reduce using rule 21 (type_data -> Int64 .)
    global          reduce using rule 21 (type_data -> Int64 .)
    local           reduce using rule 21 (type_data -> Int64 .)
    no              reduce using rule 21 (type_data -> Int64 .)
    identifier      reduce using rule 21 (type_data -> Int64 .)
    lsqbrack        reduce using rule 21 (type_data -> Int64 .)
    valor_cadena    reduce using rule 21 (type_data -> Int64 .)
    break           reduce using rule 21 (type_data -> Int64 .)
    continue        reduce using rule 21 (type_data -> Int64 .)
    return          reduce using rule 21 (type_data -> Int64 .)
    lparen          reduce using rule 21 (type_data -> Int64 .)
    if              reduce using rule 21 (type_data -> Int64 .)
    valor_entero    reduce using rule 21 (type_data -> Int64 .)
    valor_decimal   reduce using rule 21 (type_data -> Int64 .)
    valor_caracter  reduce using rule 21 (type_data -> Int64 .)
    verdadero       reduce using rule 21 (type_data -> Int64 .)
    falso           reduce using rule 21 (type_data -> Int64 .)
    Int64           reduce using rule 21 (type_data -> Int64 .)
    Float64         reduce using rule 21 (type_data -> Int64 .)
    Bool            reduce using rule 21 (type_data -> Int64 .)
    Char            reduce using rule 21 (type_data -> Int64 .)
    String          reduce using rule 21 (type_data -> Int64 .)
    sin             reduce using rule 21 (type_data -> Int64 .)
    cos             reduce using rule 21 (type_data -> Int64 .)
    tan             reduce using rule 21 (type_data -> Int64 .)
    sqrt            reduce using rule 21 (type_data -> Int64 .)
    log10           reduce using rule 21 (type_data -> Int64 .)
    uppercase       reduce using rule 21 (type_data -> Int64 .)
    lowercase       reduce using rule 21 (type_data -> Int64 .)
    trunc           reduce using rule 21 (type_data -> Int64 .)
    float           reduce using rule 21 (type_data -> Int64 .)
    string          reduce using rule 21 (type_data -> Int64 .)
    typeof          reduce using rule 21 (type_data -> Int64 .)
    length          reduce using rule 21 (type_data -> Int64 .)
    log             reduce using rule 21 (type_data -> Int64 .)
    parse           reduce using rule 21 (type_data -> Int64 .)
    push            reduce using rule 21 (type_data -> Int64 .)
    pop             reduce using rule 21 (type_data -> Int64 .)
    end             reduce using rule 21 (type_data -> Int64 .)
    rsqbrack        reduce using rule 21 (type_data -> Int64 .)
    comma           reduce using rule 21 (type_data -> Int64 .)
    elseif          reduce using rule 21 (type_data -> Int64 .)
    else            reduce using rule 21 (type_data -> Int64 .)
    twopoint        reduce using rule 21 (type_data -> Int64 .)
    rkey            reduce using rule 21 (type_data -> Int64 .)


state 39

    (22) type_data -> Float64 .

    equal           reduce using rule 22 (type_data -> Float64 .)
    definir         reduce using rule 22 (type_data -> Float64 .)
    plus            reduce using rule 22 (type_data -> Float64 .)
    minus           reduce using rule 22 (type_data -> Float64 .)
    mul             reduce using rule 22 (type_data -> Float64 .)
    div             reduce using rule 22 (type_data -> Float64 .)
    mod             reduce using rule 22 (type_data -> Float64 .)
    exp             reduce using rule 22 (type_data -> Float64 .)
    gte             reduce using rule 22 (type_data -> Float64 .)
    lte             reduce using rule 22 (type_data -> Float64 .)
    gt              reduce using rule 22 (type_data -> Float64 .)
    lt              reduce using rule 22 (type_data -> Float64 .)
    eq              reduce using rule 22 (type_data -> Float64 .)
    neq             reduce using rule 22 (type_data -> Float64 .)
    and             reduce using rule 22 (type_data -> Float64 .)
    or              reduce using rule 22 (type_data -> Float64 .)
    point           reduce using rule 22 (type_data -> Float64 .)
    terminator      reduce using rule 22 (type_data -> Float64 .)
    rparen          reduce using rule 22 (type_data -> Float64 .)
    function        reduce using rule 22 (type_data -> Float64 .)
    print           reduce using rule 22 (type_data -> Float64 .)
    println         reduce using rule 22 (type_data -> Float64 .)
    while           reduce using rule 22 (type_data -> Float64 .)
    for             reduce using rule 22 (type_data -> Float64 .)
    struct          reduce using rule 22 (type_data -> Float64 .)
    mutable         reduce using rule 22 (type_data -> Float64 .)
    nothing         reduce using rule 22 (type_data -> Float64 .)
    global          reduce using rule 22 (type_data -> Float64 .)
    local           reduce using rule 22 (type_data -> Float64 .)
    no              reduce using rule 22 (type_data -> Float64 .)
    identifier      reduce using rule 22 (type_data -> Float64 .)
    lsqbrack        reduce using rule 22 (type_data -> Float64 .)
    valor_cadena    reduce using rule 22 (type_data -> Float64 .)
    break           reduce using rule 22 (type_data -> Float64 .)
    continue        reduce using rule 22 (type_data -> Float64 .)
    return          reduce using rule 22 (type_data -> Float64 .)
    lparen          reduce using rule 22 (type_data -> Float64 .)
    if              reduce using rule 22 (type_data -> Float64 .)
    valor_entero    reduce using rule 22 (type_data -> Float64 .)
    valor_decimal   reduce using rule 22 (type_data -> Float64 .)
    valor_caracter  reduce using rule 22 (type_data -> Float64 .)
    verdadero       reduce using rule 22 (type_data -> Float64 .)
    falso           reduce using rule 22 (type_data -> Float64 .)
    Int64           reduce using rule 22 (type_data -> Float64 .)
    Float64         reduce using rule 22 (type_data -> Float64 .)
    Bool            reduce using rule 22 (type_data -> Float64 .)
    Char            reduce using rule 22 (type_data -> Float64 .)
    String          reduce using rule 22 (type_data -> Float64 .)
    sin             reduce using rule 22 (type_data -> Float64 .)
    cos             reduce using rule 22 (type_data -> Float64 .)
    tan             reduce using rule 22 (type_data -> Float64 .)
    sqrt            reduce using rule 22 (type_data -> Float64 .)
    log10           reduce using rule 22 (type_data -> Float64 .)
    uppercase       reduce using rule 22 (type_data -> Float64 .)
    lowercase       reduce using rule 22 (type_data -> Float64 .)
    trunc           reduce using rule 22 (type_data -> Float64 .)
    float           reduce using rule 22 (type_data -> Float64 .)
    string          reduce using rule 22 (type_data -> Float64 .)
    typeof          reduce using rule 22 (type_data -> Float64 .)
    length          reduce using rule 22 (type_data -> Float64 .)
    log             reduce using rule 22 (type_data -> Float64 .)
    parse           reduce using rule 22 (type_data -> Float64 .)
    push            reduce using rule 22 (type_data -> Float64 .)
    pop             reduce using rule 22 (type_data -> Float64 .)
    end             reduce using rule 22 (type_data -> Float64 .)
    rsqbrack        reduce using rule 22 (type_data -> Float64 .)
    comma           reduce using rule 22 (type_data -> Float64 .)
    elseif          reduce using rule 22 (type_data -> Float64 .)
    else            reduce using rule 22 (type_data -> Float64 .)
    twopoint        reduce using rule 22 (type_data -> Float64 .)
    rkey            reduce using rule 22 (type_data -> Float64 .)


state 40

    (23) type_data -> Bool .

    equal           reduce using rule 23 (type_data -> Bool .)
    definir         reduce using rule 23 (type_data -> Bool .)
    plus            reduce using rule 23 (type_data -> Bool .)
    minus           reduce using rule 23 (type_data -> Bool .)
    mul             reduce using rule 23 (type_data -> Bool .)
    div             reduce using rule 23 (type_data -> Bool .)
    mod             reduce using rule 23 (type_data -> Bool .)
    exp             reduce using rule 23 (type_data -> Bool .)
    gte             reduce using rule 23 (type_data -> Bool .)
    lte             reduce using rule 23 (type_data -> Bool .)
    gt              reduce using rule 23 (type_data -> Bool .)
    lt              reduce using rule 23 (type_data -> Bool .)
    eq              reduce using rule 23 (type_data -> Bool .)
    neq             reduce using rule 23 (type_data -> Bool .)
    and             reduce using rule 23 (type_data -> Bool .)
    or              reduce using rule 23 (type_data -> Bool .)
    point           reduce using rule 23 (type_data -> Bool .)
    terminator      reduce using rule 23 (type_data -> Bool .)
    rparen          reduce using rule 23 (type_data -> Bool .)
    function        reduce using rule 23 (type_data -> Bool .)
    print           reduce using rule 23 (type_data -> Bool .)
    println         reduce using rule 23 (type_data -> Bool .)
    while           reduce using rule 23 (type_data -> Bool .)
    for             reduce using rule 23 (type_data -> Bool .)
    struct          reduce using rule 23 (type_data -> Bool .)
    mutable         reduce using rule 23 (type_data -> Bool .)
    nothing         reduce using rule 23 (type_data -> Bool .)
    global          reduce using rule 23 (type_data -> Bool .)
    local           reduce using rule 23 (type_data -> Bool .)
    no              reduce using rule 23 (type_data -> Bool .)
    identifier      reduce using rule 23 (type_data -> Bool .)
    lsqbrack        reduce using rule 23 (type_data -> Bool .)
    valor_cadena    reduce using rule 23 (type_data -> Bool .)
    break           reduce using rule 23 (type_data -> Bool .)
    continue        reduce using rule 23 (type_data -> Bool .)
    return          reduce using rule 23 (type_data -> Bool .)
    lparen          reduce using rule 23 (type_data -> Bool .)
    if              reduce using rule 23 (type_data -> Bool .)
    valor_entero    reduce using rule 23 (type_data -> Bool .)
    valor_decimal   reduce using rule 23 (type_data -> Bool .)
    valor_caracter  reduce using rule 23 (type_data -> Bool .)
    verdadero       reduce using rule 23 (type_data -> Bool .)
    falso           reduce using rule 23 (type_data -> Bool .)
    Int64           reduce using rule 23 (type_data -> Bool .)
    Float64         reduce using rule 23 (type_data -> Bool .)
    Bool            reduce using rule 23 (type_data -> Bool .)
    Char            reduce using rule 23 (type_data -> Bool .)
    String          reduce using rule 23 (type_data -> Bool .)
    sin             reduce using rule 23 (type_data -> Bool .)
    cos             reduce using rule 23 (type_data -> Bool .)
    tan             reduce using rule 23 (type_data -> Bool .)
    sqrt            reduce using rule 23 (type_data -> Bool .)
    log10           reduce using rule 23 (type_data -> Bool .)
    uppercase       reduce using rule 23 (type_data -> Bool .)
    lowercase       reduce using rule 23 (type_data -> Bool .)
    trunc           reduce using rule 23 (type_data -> Bool .)
    float           reduce using rule 23 (type_data -> Bool .)
    string          reduce using rule 23 (type_data -> Bool .)
    typeof          reduce using rule 23 (type_data -> Bool .)
    length          reduce using rule 23 (type_data -> Bool .)
    log             reduce using rule 23 (type_data -> Bool .)
    parse           reduce using rule 23 (type_data -> Bool .)
    push            reduce using rule 23 (type_data -> Bool .)
    pop             reduce using rule 23 (type_data -> Bool .)
    end             reduce using rule 23 (type_data -> Bool .)
    rsqbrack        reduce using rule 23 (type_data -> Bool .)
    comma           reduce using rule 23 (type_data -> Bool .)
    elseif          reduce using rule 23 (type_data -> Bool .)
    else            reduce using rule 23 (type_data -> Bool .)
    twopoint        reduce using rule 23 (type_data -> Bool .)
    rkey            reduce using rule 23 (type_data -> Bool .)


state 41

    (24) type_data -> Char .

    equal           reduce using rule 24 (type_data -> Char .)
    definir         reduce using rule 24 (type_data -> Char .)
    plus            reduce using rule 24 (type_data -> Char .)
    minus           reduce using rule 24 (type_data -> Char .)
    mul             reduce using rule 24 (type_data -> Char .)
    div             reduce using rule 24 (type_data -> Char .)
    mod             reduce using rule 24 (type_data -> Char .)
    exp             reduce using rule 24 (type_data -> Char .)
    gte             reduce using rule 24 (type_data -> Char .)
    lte             reduce using rule 24 (type_data -> Char .)
    gt              reduce using rule 24 (type_data -> Char .)
    lt              reduce using rule 24 (type_data -> Char .)
    eq              reduce using rule 24 (type_data -> Char .)
    neq             reduce using rule 24 (type_data -> Char .)
    and             reduce using rule 24 (type_data -> Char .)
    or              reduce using rule 24 (type_data -> Char .)
    point           reduce using rule 24 (type_data -> Char .)
    terminator      reduce using rule 24 (type_data -> Char .)
    rparen          reduce using rule 24 (type_data -> Char .)
    function        reduce using rule 24 (type_data -> Char .)
    print           reduce using rule 24 (type_data -> Char .)
    println         reduce using rule 24 (type_data -> Char .)
    while           reduce using rule 24 (type_data -> Char .)
    for             reduce using rule 24 (type_data -> Char .)
    struct          reduce using rule 24 (type_data -> Char .)
    mutable         reduce using rule 24 (type_data -> Char .)
    nothing         reduce using rule 24 (type_data -> Char .)
    global          reduce using rule 24 (type_data -> Char .)
    local           reduce using rule 24 (type_data -> Char .)
    no              reduce using rule 24 (type_data -> Char .)
    identifier      reduce using rule 24 (type_data -> Char .)
    lsqbrack        reduce using rule 24 (type_data -> Char .)
    valor_cadena    reduce using rule 24 (type_data -> Char .)
    break           reduce using rule 24 (type_data -> Char .)
    continue        reduce using rule 24 (type_data -> Char .)
    return          reduce using rule 24 (type_data -> Char .)
    lparen          reduce using rule 24 (type_data -> Char .)
    if              reduce using rule 24 (type_data -> Char .)
    valor_entero    reduce using rule 24 (type_data -> Char .)
    valor_decimal   reduce using rule 24 (type_data -> Char .)
    valor_caracter  reduce using rule 24 (type_data -> Char .)
    verdadero       reduce using rule 24 (type_data -> Char .)
    falso           reduce using rule 24 (type_data -> Char .)
    Int64           reduce using rule 24 (type_data -> Char .)
    Float64         reduce using rule 24 (type_data -> Char .)
    Bool            reduce using rule 24 (type_data -> Char .)
    Char            reduce using rule 24 (type_data -> Char .)
    String          reduce using rule 24 (type_data -> Char .)
    sin             reduce using rule 24 (type_data -> Char .)
    cos             reduce using rule 24 (type_data -> Char .)
    tan             reduce using rule 24 (type_data -> Char .)
    sqrt            reduce using rule 24 (type_data -> Char .)
    log10           reduce using rule 24 (type_data -> Char .)
    uppercase       reduce using rule 24 (type_data -> Char .)
    lowercase       reduce using rule 24 (type_data -> Char .)
    trunc           reduce using rule 24 (type_data -> Char .)
    float           reduce using rule 24 (type_data -> Char .)
    string          reduce using rule 24 (type_data -> Char .)
    typeof          reduce using rule 24 (type_data -> Char .)
    length          reduce using rule 24 (type_data -> Char .)
    log             reduce using rule 24 (type_data -> Char .)
    parse           reduce using rule 24 (type_data -> Char .)
    push            reduce using rule 24 (type_data -> Char .)
    pop             reduce using rule 24 (type_data -> Char .)
    end             reduce using rule 24 (type_data -> Char .)
    rsqbrack        reduce using rule 24 (type_data -> Char .)
    comma           reduce using rule 24 (type_data -> Char .)
    elseif          reduce using rule 24 (type_data -> Char .)
    else            reduce using rule 24 (type_data -> Char .)
    twopoint        reduce using rule 24 (type_data -> Char .)
    rkey            reduce using rule 24 (type_data -> Char .)


state 42

    (25) type_data -> String .

    equal           reduce using rule 25 (type_data -> String .)
    definir         reduce using rule 25 (type_data -> String .)
    plus            reduce using rule 25 (type_data -> String .)
    minus           reduce using rule 25 (type_data -> String .)
    mul             reduce using rule 25 (type_data -> String .)
    div             reduce using rule 25 (type_data -> String .)
    mod             reduce using rule 25 (type_data -> String .)
    exp             reduce using rule 25 (type_data -> String .)
    gte             reduce using rule 25 (type_data -> String .)
    lte             reduce using rule 25 (type_data -> String .)
    gt              reduce using rule 25 (type_data -> String .)
    lt              reduce using rule 25 (type_data -> String .)
    eq              reduce using rule 25 (type_data -> String .)
    neq             reduce using rule 25 (type_data -> String .)
    and             reduce using rule 25 (type_data -> String .)
    or              reduce using rule 25 (type_data -> String .)
    point           reduce using rule 25 (type_data -> String .)
    terminator      reduce using rule 25 (type_data -> String .)
    rparen          reduce using rule 25 (type_data -> String .)
    function        reduce using rule 25 (type_data -> String .)
    print           reduce using rule 25 (type_data -> String .)
    println         reduce using rule 25 (type_data -> String .)
    while           reduce using rule 25 (type_data -> String .)
    for             reduce using rule 25 (type_data -> String .)
    struct          reduce using rule 25 (type_data -> String .)
    mutable         reduce using rule 25 (type_data -> String .)
    nothing         reduce using rule 25 (type_data -> String .)
    global          reduce using rule 25 (type_data -> String .)
    local           reduce using rule 25 (type_data -> String .)
    no              reduce using rule 25 (type_data -> String .)
    identifier      reduce using rule 25 (type_data -> String .)
    lsqbrack        reduce using rule 25 (type_data -> String .)
    valor_cadena    reduce using rule 25 (type_data -> String .)
    break           reduce using rule 25 (type_data -> String .)
    continue        reduce using rule 25 (type_data -> String .)
    return          reduce using rule 25 (type_data -> String .)
    lparen          reduce using rule 25 (type_data -> String .)
    if              reduce using rule 25 (type_data -> String .)
    valor_entero    reduce using rule 25 (type_data -> String .)
    valor_decimal   reduce using rule 25 (type_data -> String .)
    valor_caracter  reduce using rule 25 (type_data -> String .)
    verdadero       reduce using rule 25 (type_data -> String .)
    falso           reduce using rule 25 (type_data -> String .)
    Int64           reduce using rule 25 (type_data -> String .)
    Float64         reduce using rule 25 (type_data -> String .)
    Bool            reduce using rule 25 (type_data -> String .)
    Char            reduce using rule 25 (type_data -> String .)
    String          reduce using rule 25 (type_data -> String .)
    sin             reduce using rule 25 (type_data -> String .)
    cos             reduce using rule 25 (type_data -> String .)
    tan             reduce using rule 25 (type_data -> String .)
    sqrt            reduce using rule 25 (type_data -> String .)
    log10           reduce using rule 25 (type_data -> String .)
    uppercase       reduce using rule 25 (type_data -> String .)
    lowercase       reduce using rule 25 (type_data -> String .)
    trunc           reduce using rule 25 (type_data -> String .)
    float           reduce using rule 25 (type_data -> String .)
    string          reduce using rule 25 (type_data -> String .)
    typeof          reduce using rule 25 (type_data -> String .)
    length          reduce using rule 25 (type_data -> String .)
    log             reduce using rule 25 (type_data -> String .)
    parse           reduce using rule 25 (type_data -> String .)
    push            reduce using rule 25 (type_data -> String .)
    pop             reduce using rule 25 (type_data -> String .)
    end             reduce using rule 25 (type_data -> String .)
    rsqbrack        reduce using rule 25 (type_data -> String .)
    comma           reduce using rule 25 (type_data -> String .)
    elseif          reduce using rule 25 (type_data -> String .)
    else            reduce using rule 25 (type_data -> String .)
    twopoint        reduce using rule 25 (type_data -> String .)
    rkey            reduce using rule 25 (type_data -> String .)


state 43

    (95) native -> sin .

    lparen          reduce using rule 95 (native -> sin .)
    point           reduce using rule 95 (native -> sin .)


state 44

    (96) native -> cos .

    lparen          reduce using rule 96 (native -> cos .)
    point           reduce using rule 96 (native -> cos .)


state 45

    (97) native -> tan .

    lparen          reduce using rule 97 (native -> tan .)
    point           reduce using rule 97 (native -> tan .)


state 46

    (98) native -> sqrt .

    lparen          reduce using rule 98 (native -> sqrt .)
    point           reduce using rule 98 (native -> sqrt .)


state 47

    (99) native -> log10 .

    lparen          reduce using rule 99 (native -> log10 .)
    point           reduce using rule 99 (native -> log10 .)


state 48

    (100) native -> uppercase .

    lparen          reduce using rule 100 (native -> uppercase .)
    point           reduce using rule 100 (native -> uppercase .)


state 49

    (101) native -> lowercase .

    lparen          reduce using rule 101 (native -> lowercase .)
    point           reduce using rule 101 (native -> lowercase .)


state 50

    (102) native -> trunc .

    lparen          reduce using rule 102 (native -> trunc .)
    point           reduce using rule 102 (native -> trunc .)


state 51

    (103) native -> float .

    lparen          reduce using rule 103 (native -> float .)
    point           reduce using rule 103 (native -> float .)


state 52

    (104) native -> string .

    lparen          reduce using rule 104 (native -> string .)
    point           reduce using rule 104 (native -> string .)


state 53

    (105) native -> typeof .

    lparen          reduce using rule 105 (native -> typeof .)
    point           reduce using rule 105 (native -> typeof .)


state 54

    (106) native -> length .

    lparen          reduce using rule 106 (native -> length .)
    point           reduce using rule 106 (native -> length .)


state 55

    (107) native -> log .

    lparen          reduce using rule 107 (native -> log .)
    point           reduce using rule 107 (native -> log .)


state 56

    (108) native -> parse .

    lparen          reduce using rule 108 (native -> parse .)
    point           reduce using rule 108 (native -> parse .)


state 57

    (109) native -> push . no

    no              shift and go to state 104


state 58

    (110) native -> pop . no

    no              shift and go to state 105


state 59

    (3) statement_list -> statement_list statement . terminator

    terminator      shift and go to state 106


state 60

    (2) statement_list -> statement terminator .

    function        reduce using rule 2 (statement_list -> statement terminator .)
    print           reduce using rule 2 (statement_list -> statement terminator .)
    println         reduce using rule 2 (statement_list -> statement terminator .)
    while           reduce using rule 2 (statement_list -> statement terminator .)
    for             reduce using rule 2 (statement_list -> statement terminator .)
    struct          reduce using rule 2 (statement_list -> statement terminator .)
    mutable         reduce using rule 2 (statement_list -> statement terminator .)
    nothing         reduce using rule 2 (statement_list -> statement terminator .)
    global          reduce using rule 2 (statement_list -> statement terminator .)
    local           reduce using rule 2 (statement_list -> statement terminator .)
    plus            reduce using rule 2 (statement_list -> statement terminator .)
    minus           reduce using rule 2 (statement_list -> statement terminator .)
    no              reduce using rule 2 (statement_list -> statement terminator .)
    identifier      reduce using rule 2 (statement_list -> statement terminator .)
    lsqbrack        reduce using rule 2 (statement_list -> statement terminator .)
    valor_cadena    reduce using rule 2 (statement_list -> statement terminator .)
    break           reduce using rule 2 (statement_list -> statement terminator .)
    continue        reduce using rule 2 (statement_list -> statement terminator .)
    return          reduce using rule 2 (statement_list -> statement terminator .)
    lparen          reduce using rule 2 (statement_list -> statement terminator .)
    if              reduce using rule 2 (statement_list -> statement terminator .)
    valor_entero    reduce using rule 2 (statement_list -> statement terminator .)
    valor_decimal   reduce using rule 2 (statement_list -> statement terminator .)
    valor_caracter  reduce using rule 2 (statement_list -> statement terminator .)
    verdadero       reduce using rule 2 (statement_list -> statement terminator .)
    falso           reduce using rule 2 (statement_list -> statement terminator .)
    Int64           reduce using rule 2 (statement_list -> statement terminator .)
    Float64         reduce using rule 2 (statement_list -> statement terminator .)
    Bool            reduce using rule 2 (statement_list -> statement terminator .)
    Char            reduce using rule 2 (statement_list -> statement terminator .)
    String          reduce using rule 2 (statement_list -> statement terminator .)
    sin             reduce using rule 2 (statement_list -> statement terminator .)
    cos             reduce using rule 2 (statement_list -> statement terminator .)
    tan             reduce using rule 2 (statement_list -> statement terminator .)
    sqrt            reduce using rule 2 (statement_list -> statement terminator .)
    log10           reduce using rule 2 (statement_list -> statement terminator .)
    uppercase       reduce using rule 2 (statement_list -> statement terminator .)
    lowercase       reduce using rule 2 (statement_list -> statement terminator .)
    trunc           reduce using rule 2 (statement_list -> statement terminator .)
    float           reduce using rule 2 (statement_list -> statement terminator .)
    string          reduce using rule 2 (statement_list -> statement terminator .)
    typeof          reduce using rule 2 (statement_list -> statement terminator .)
    length          reduce using rule 2 (statement_list -> statement terminator .)
    log             reduce using rule 2 (statement_list -> statement terminator .)
    parse           reduce using rule 2 (statement_list -> statement terminator .)
    push            reduce using rule 2 (statement_list -> statement terminator .)
    pop             reduce using rule 2 (statement_list -> statement terminator .)
    $end            reduce using rule 2 (statement_list -> statement terminator .)
    end             reduce using rule 2 (statement_list -> statement terminator .)
    elseif          reduce using rule 2 (statement_list -> statement terminator .)
    else            reduce using rule 2 (statement_list -> statement terminator .)


state 61

    (48) expression -> expression equal . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 107
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 62

    (49) expression -> expression definir . type_data
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier

    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    identifier      shift and go to state 110

    type_data                      shift and go to state 108
    id                             shift and go to state 109

state 63

    (50) expression -> expression plus . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 111
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 64

    (51) expression -> expression minus . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 112
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 65

    (52) expression -> expression mul . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 113
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 66

    (53) expression -> expression div . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 114
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 67

    (54) expression -> expression mod . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 115
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 68

    (55) expression -> expression exp . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 116
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 69

    (58) expression -> expression gte . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 117
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 70

    (59) expression -> expression lte . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 118
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 71

    (60) expression -> expression gt . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 119
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 72

    (61) expression -> expression lt . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 120
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 73

    (62) expression -> expression eq . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 121
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 74

    (63) expression -> expression neq . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 122
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 75

    (64) expression -> expression and . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 123
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 76

    (65) expression -> expression or . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 124
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 77

    (39) array_operator -> expression point . oparray
    (40) oparray -> . plus expression
    (41) oparray -> . minus expression
    (42) oparray -> . mul expression
    (43) oparray -> . div expression
    (44) oparray -> . mod expression
    (45) oparray -> . exp expression

    plus            shift and go to state 126
    minus           shift and go to state 127
    mul             shift and go to state 128
    div             shift and go to state 129
    mod             shift and go to state 130
    exp             shift and go to state 131

    oparray                        shift and go to state 125

state 78

    (14) statement -> function identifier . lparen arguments rparen statement_list end

    lparen          shift and go to state 132


state 79

    (67) expression -> identifier lparen . arguments rparen
    (112) arguments -> . expression
    (113) arguments -> . arguments comma expression
    (114) arguments -> .
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    rparen          reduce using rule 114 (arguments -> .)
    comma           reduce using rule 114 (arguments -> .)
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    arguments                      shift and go to state 133
    expression                     shift and go to state 96
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 80

    (71) array_access -> identifier list_index .
    (73) list_index -> list_index . lsqbrack argsarray rsqbrack

  ! shift/reduce conflict for lsqbrack resolved as shift
    equal           reduce using rule 71 (array_access -> identifier list_index .)
    definir         reduce using rule 71 (array_access -> identifier list_index .)
    plus            reduce using rule 71 (array_access -> identifier list_index .)
    minus           reduce using rule 71 (array_access -> identifier list_index .)
    mul             reduce using rule 71 (array_access -> identifier list_index .)
    div             reduce using rule 71 (array_access -> identifier list_index .)
    mod             reduce using rule 71 (array_access -> identifier list_index .)
    exp             reduce using rule 71 (array_access -> identifier list_index .)
    gte             reduce using rule 71 (array_access -> identifier list_index .)
    lte             reduce using rule 71 (array_access -> identifier list_index .)
    gt              reduce using rule 71 (array_access -> identifier list_index .)
    lt              reduce using rule 71 (array_access -> identifier list_index .)
    eq              reduce using rule 71 (array_access -> identifier list_index .)
    neq             reduce using rule 71 (array_access -> identifier list_index .)
    and             reduce using rule 71 (array_access -> identifier list_index .)
    or              reduce using rule 71 (array_access -> identifier list_index .)
    point           reduce using rule 71 (array_access -> identifier list_index .)
    terminator      reduce using rule 71 (array_access -> identifier list_index .)
    rparen          reduce using rule 71 (array_access -> identifier list_index .)
    function        reduce using rule 71 (array_access -> identifier list_index .)
    print           reduce using rule 71 (array_access -> identifier list_index .)
    println         reduce using rule 71 (array_access -> identifier list_index .)
    while           reduce using rule 71 (array_access -> identifier list_index .)
    for             reduce using rule 71 (array_access -> identifier list_index .)
    struct          reduce using rule 71 (array_access -> identifier list_index .)
    mutable         reduce using rule 71 (array_access -> identifier list_index .)
    nothing         reduce using rule 71 (array_access -> identifier list_index .)
    global          reduce using rule 71 (array_access -> identifier list_index .)
    local           reduce using rule 71 (array_access -> identifier list_index .)
    no              reduce using rule 71 (array_access -> identifier list_index .)
    identifier      reduce using rule 71 (array_access -> identifier list_index .)
    valor_cadena    reduce using rule 71 (array_access -> identifier list_index .)
    break           reduce using rule 71 (array_access -> identifier list_index .)
    continue        reduce using rule 71 (array_access -> identifier list_index .)
    return          reduce using rule 71 (array_access -> identifier list_index .)
    lparen          reduce using rule 71 (array_access -> identifier list_index .)
    if              reduce using rule 71 (array_access -> identifier list_index .)
    valor_entero    reduce using rule 71 (array_access -> identifier list_index .)
    valor_decimal   reduce using rule 71 (array_access -> identifier list_index .)
    valor_caracter  reduce using rule 71 (array_access -> identifier list_index .)
    verdadero       reduce using rule 71 (array_access -> identifier list_index .)
    falso           reduce using rule 71 (array_access -> identifier list_index .)
    Int64           reduce using rule 71 (array_access -> identifier list_index .)
    Float64         reduce using rule 71 (array_access -> identifier list_index .)
    Bool            reduce using rule 71 (array_access -> identifier list_index .)
    Char            reduce using rule 71 (array_access -> identifier list_index .)
    String          reduce using rule 71 (array_access -> identifier list_index .)
    sin             reduce using rule 71 (array_access -> identifier list_index .)
    cos             reduce using rule 71 (array_access -> identifier list_index .)
    tan             reduce using rule 71 (array_access -> identifier list_index .)
    sqrt            reduce using rule 71 (array_access -> identifier list_index .)
    log10           reduce using rule 71 (array_access -> identifier list_index .)
    uppercase       reduce using rule 71 (array_access -> identifier list_index .)
    lowercase       reduce using rule 71 (array_access -> identifier list_index .)
    trunc           reduce using rule 71 (array_access -> identifier list_index .)
    float           reduce using rule 71 (array_access -> identifier list_index .)
    string          reduce using rule 71 (array_access -> identifier list_index .)
    typeof          reduce using rule 71 (array_access -> identifier list_index .)
    length          reduce using rule 71 (array_access -> identifier list_index .)
    log             reduce using rule 71 (array_access -> identifier list_index .)
    parse           reduce using rule 71 (array_access -> identifier list_index .)
    push            reduce using rule 71 (array_access -> identifier list_index .)
    pop             reduce using rule 71 (array_access -> identifier list_index .)
    end             reduce using rule 71 (array_access -> identifier list_index .)
    rsqbrack        reduce using rule 71 (array_access -> identifier list_index .)
    comma           reduce using rule 71 (array_access -> identifier list_index .)
    elseif          reduce using rule 71 (array_access -> identifier list_index .)
    else            reduce using rule 71 (array_access -> identifier list_index .)
    twopoint        reduce using rule 71 (array_access -> identifier list_index .)
    lsqbrack        shift and go to state 134

  ! lsqbrack        [ reduce using rule 71 (array_access -> identifier list_index .) ]


state 81

    (72) list_index -> lsqbrack . argsarray rsqbrack
    (74) argsarray -> . expslice
    (75) expslice -> . slice_copy
    (76) expslice -> . slice_left
    (77) expslice -> . slice_right
    (78) expslice -> . slice_all
    (79) expslice -> . expression
    (80) slice_copy -> . twopoint
    (81) slice_left -> . expression twopoint
    (82) slice_right -> . twopoint expression
    (83) slice_all -> . expression twopoint expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    twopoint        shift and go to state 142
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    argsarray                      shift and go to state 135
    expslice                       shift and go to state 136
    slice_copy                     shift and go to state 137
    slice_left                     shift and go to state 138
    slice_right                    shift and go to state 139
    slice_all                      shift and go to state 140
    expression                     shift and go to state 141
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 82

    (90) expression -> lparen expression . rparen
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    rparen          shift and go to state 143
    equal           shift and go to state 61
    definir         shift and go to state 62
    plus            shift and go to state 63
    minus           shift and go to state 64
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    eq              shift and go to state 73
    neq             shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    point           shift and go to state 77


state 83

    (15) statement -> print lparen . arguments rparen
    (112) arguments -> . expression
    (113) arguments -> . arguments comma expression
    (114) arguments -> .
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    rparen          reduce using rule 114 (arguments -> .)
    comma           reduce using rule 114 (arguments -> .)
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    arguments                      shift and go to state 144
    expression                     shift and go to state 96
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 84

    (16) statement -> println lparen . arguments rparen
    (112) arguments -> . expression
    (113) arguments -> . arguments comma expression
    (114) arguments -> .
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    rparen          reduce using rule 114 (arguments -> .)
    comma           reduce using rule 114 (arguments -> .)
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    arguments                      shift and go to state 145
    expression                     shift and go to state 96
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 85

    (17) statement -> while expression . statement_list end
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray
    (2) statement_list -> . statement terminator
    (3) statement_list -> . statement_list statement terminator
    (4) statement_list -> .
    (5) statement -> . expression
    (6) statement -> . if_statement
    (14) statement -> . function identifier lparen arguments rparen statement_list end
    (15) statement -> . print lparen arguments rparen
    (16) statement -> . println lparen arguments rparen
    (17) statement -> . while expression statement_list end
    (18) statement -> . for container statement_list end
    (19) statement -> . struct identifier struct_parameters end
    (20) statement -> . mutable struct identifier struct_parameters end
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (7) if_statement -> . if expression statement_list elseif_clause end
    (8) if_statement -> . if expression statement_list elseif_clause else_clause end
    (9) if_statement -> . if expression statement_list end
    (10) if_statement -> . if expression statement_list else_clause end
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

  ! shift/reduce conflict for plus resolved as shift
  ! shift/reduce conflict for minus resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for println resolved as shift
  ! shift/reduce conflict for while resolved as shift
  ! shift/reduce conflict for for resolved as shift
  ! shift/reduce conflict for struct resolved as shift
  ! shift/reduce conflict for mutable resolved as shift
  ! shift/reduce conflict for nothing resolved as shift
  ! shift/reduce conflict for global resolved as shift
  ! shift/reduce conflict for local resolved as shift
  ! shift/reduce conflict for no resolved as shift
  ! shift/reduce conflict for identifier resolved as shift
  ! shift/reduce conflict for lsqbrack resolved as shift
  ! shift/reduce conflict for valor_cadena resolved as shift
  ! shift/reduce conflict for break resolved as shift
  ! shift/reduce conflict for continue resolved as shift
  ! shift/reduce conflict for return resolved as shift
  ! shift/reduce conflict for lparen resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for valor_entero resolved as shift
  ! shift/reduce conflict for valor_decimal resolved as shift
  ! shift/reduce conflict for valor_caracter resolved as shift
  ! shift/reduce conflict for verdadero resolved as shift
  ! shift/reduce conflict for falso resolved as shift
  ! shift/reduce conflict for Int64 resolved as shift
  ! shift/reduce conflict for Float64 resolved as shift
  ! shift/reduce conflict for Bool resolved as shift
  ! shift/reduce conflict for Char resolved as shift
  ! shift/reduce conflict for String resolved as shift
  ! shift/reduce conflict for sin resolved as shift
  ! shift/reduce conflict for cos resolved as shift
  ! shift/reduce conflict for tan resolved as shift
  ! shift/reduce conflict for sqrt resolved as shift
  ! shift/reduce conflict for log10 resolved as shift
  ! shift/reduce conflict for uppercase resolved as shift
  ! shift/reduce conflict for lowercase resolved as shift
  ! shift/reduce conflict for trunc resolved as shift
  ! shift/reduce conflict for float resolved as shift
  ! shift/reduce conflict for string resolved as shift
  ! shift/reduce conflict for typeof resolved as shift
  ! shift/reduce conflict for length resolved as shift
  ! shift/reduce conflict for log resolved as shift
  ! shift/reduce conflict for parse resolved as shift
  ! shift/reduce conflict for push resolved as shift
  ! shift/reduce conflict for pop resolved as shift
    equal           shift and go to state 61
    definir         shift and go to state 62
    plus            shift and go to state 147
    minus           shift and go to state 148
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    eq              shift and go to state 73
    neq             shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    point           shift and go to state 77
    end             reduce using rule 4 (statement_list -> .)
    function        shift and go to state 6
    print           shift and go to state 9
    println         shift and go to state 10
    while           shift and go to state 11
    for             shift and go to state 12
    struct          shift and go to state 13
    mutable         shift and go to state 14
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    if              shift and go to state 32
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

  ! function        [ reduce using rule 4 (statement_list -> .) ]
  ! print           [ reduce using rule 4 (statement_list -> .) ]
  ! println         [ reduce using rule 4 (statement_list -> .) ]
  ! while           [ reduce using rule 4 (statement_list -> .) ]
  ! for             [ reduce using rule 4 (statement_list -> .) ]
  ! struct          [ reduce using rule 4 (statement_list -> .) ]
  ! mutable         [ reduce using rule 4 (statement_list -> .) ]
  ! nothing         [ reduce using rule 4 (statement_list -> .) ]
  ! global          [ reduce using rule 4 (statement_list -> .) ]
  ! local           [ reduce using rule 4 (statement_list -> .) ]
  ! plus            [ reduce using rule 4 (statement_list -> .) ]
  ! minus           [ reduce using rule 4 (statement_list -> .) ]
  ! no              [ reduce using rule 4 (statement_list -> .) ]
  ! identifier      [ reduce using rule 4 (statement_list -> .) ]
  ! lsqbrack        [ reduce using rule 4 (statement_list -> .) ]
  ! valor_cadena    [ reduce using rule 4 (statement_list -> .) ]
  ! break           [ reduce using rule 4 (statement_list -> .) ]
  ! continue        [ reduce using rule 4 (statement_list -> .) ]
  ! return          [ reduce using rule 4 (statement_list -> .) ]
  ! lparen          [ reduce using rule 4 (statement_list -> .) ]
  ! if              [ reduce using rule 4 (statement_list -> .) ]
  ! valor_entero    [ reduce using rule 4 (statement_list -> .) ]
  ! valor_decimal   [ reduce using rule 4 (statement_list -> .) ]
  ! valor_caracter  [ reduce using rule 4 (statement_list -> .) ]
  ! verdadero       [ reduce using rule 4 (statement_list -> .) ]
  ! falso           [ reduce using rule 4 (statement_list -> .) ]
  ! Int64           [ reduce using rule 4 (statement_list -> .) ]
  ! Float64         [ reduce using rule 4 (statement_list -> .) ]
  ! Bool            [ reduce using rule 4 (statement_list -> .) ]
  ! Char            [ reduce using rule 4 (statement_list -> .) ]
  ! String          [ reduce using rule 4 (statement_list -> .) ]
  ! sin             [ reduce using rule 4 (statement_list -> .) ]
  ! cos             [ reduce using rule 4 (statement_list -> .) ]
  ! tan             [ reduce using rule 4 (statement_list -> .) ]
  ! sqrt            [ reduce using rule 4 (statement_list -> .) ]
  ! log10           [ reduce using rule 4 (statement_list -> .) ]
  ! uppercase       [ reduce using rule 4 (statement_list -> .) ]
  ! lowercase       [ reduce using rule 4 (statement_list -> .) ]
  ! trunc           [ reduce using rule 4 (statement_list -> .) ]
  ! float           [ reduce using rule 4 (statement_list -> .) ]
  ! string          [ reduce using rule 4 (statement_list -> .) ]
  ! typeof          [ reduce using rule 4 (statement_list -> .) ]
  ! length          [ reduce using rule 4 (statement_list -> .) ]
  ! log             [ reduce using rule 4 (statement_list -> .) ]
  ! parse           [ reduce using rule 4 (statement_list -> .) ]
  ! push            [ reduce using rule 4 (statement_list -> .) ]
  ! pop             [ reduce using rule 4 (statement_list -> .) ]

    expression                     shift and go to state 4
    statement_list                 shift and go to state 146
    type_data                      shift and go to state 18
    statement                      shift and go to state 3
    if_statement                   shift and go to state 5
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    id                             shift and go to state 30
    native                         shift and go to state 31

state 86

    (18) statement -> for container . statement_list end
    (2) statement_list -> . statement terminator
    (3) statement_list -> . statement_list statement terminator
    (4) statement_list -> .
    (5) statement -> . expression
    (6) statement -> . if_statement
    (14) statement -> . function identifier lparen arguments rparen statement_list end
    (15) statement -> . print lparen arguments rparen
    (16) statement -> . println lparen arguments rparen
    (17) statement -> . while expression statement_list end
    (18) statement -> . for container statement_list end
    (19) statement -> . struct identifier struct_parameters end
    (20) statement -> . mutable struct identifier struct_parameters end
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (7) if_statement -> . if expression statement_list elseif_clause end
    (8) if_statement -> . if expression statement_list elseif_clause else_clause end
    (9) if_statement -> . if expression statement_list end
    (10) if_statement -> . if expression statement_list else_clause end
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for println resolved as shift
  ! shift/reduce conflict for while resolved as shift
  ! shift/reduce conflict for for resolved as shift
  ! shift/reduce conflict for struct resolved as shift
  ! shift/reduce conflict for mutable resolved as shift
  ! shift/reduce conflict for nothing resolved as shift
  ! shift/reduce conflict for global resolved as shift
  ! shift/reduce conflict for local resolved as shift
  ! shift/reduce conflict for plus resolved as shift
  ! shift/reduce conflict for minus resolved as shift
  ! shift/reduce conflict for no resolved as shift
  ! shift/reduce conflict for identifier resolved as shift
  ! shift/reduce conflict for lsqbrack resolved as shift
  ! shift/reduce conflict for valor_cadena resolved as shift
  ! shift/reduce conflict for break resolved as shift
  ! shift/reduce conflict for continue resolved as shift
  ! shift/reduce conflict for return resolved as shift
  ! shift/reduce conflict for lparen resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for valor_entero resolved as shift
  ! shift/reduce conflict for valor_decimal resolved as shift
  ! shift/reduce conflict for valor_caracter resolved as shift
  ! shift/reduce conflict for verdadero resolved as shift
  ! shift/reduce conflict for falso resolved as shift
  ! shift/reduce conflict for Int64 resolved as shift
  ! shift/reduce conflict for Float64 resolved as shift
  ! shift/reduce conflict for Bool resolved as shift
  ! shift/reduce conflict for Char resolved as shift
  ! shift/reduce conflict for String resolved as shift
  ! shift/reduce conflict for sin resolved as shift
  ! shift/reduce conflict for cos resolved as shift
  ! shift/reduce conflict for tan resolved as shift
  ! shift/reduce conflict for sqrt resolved as shift
  ! shift/reduce conflict for log10 resolved as shift
  ! shift/reduce conflict for uppercase resolved as shift
  ! shift/reduce conflict for lowercase resolved as shift
  ! shift/reduce conflict for trunc resolved as shift
  ! shift/reduce conflict for float resolved as shift
  ! shift/reduce conflict for string resolved as shift
  ! shift/reduce conflict for typeof resolved as shift
  ! shift/reduce conflict for length resolved as shift
  ! shift/reduce conflict for log resolved as shift
  ! shift/reduce conflict for parse resolved as shift
  ! shift/reduce conflict for push resolved as shift
  ! shift/reduce conflict for pop resolved as shift
    end             reduce using rule 4 (statement_list -> .)
    function        shift and go to state 6
    print           shift and go to state 9
    println         shift and go to state 10
    while           shift and go to state 11
    for             shift and go to state 12
    struct          shift and go to state 13
    mutable         shift and go to state 14
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    if              shift and go to state 32
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

  ! function        [ reduce using rule 4 (statement_list -> .) ]
  ! print           [ reduce using rule 4 (statement_list -> .) ]
  ! println         [ reduce using rule 4 (statement_list -> .) ]
  ! while           [ reduce using rule 4 (statement_list -> .) ]
  ! for             [ reduce using rule 4 (statement_list -> .) ]
  ! struct          [ reduce using rule 4 (statement_list -> .) ]
  ! mutable         [ reduce using rule 4 (statement_list -> .) ]
  ! nothing         [ reduce using rule 4 (statement_list -> .) ]
  ! global          [ reduce using rule 4 (statement_list -> .) ]
  ! local           [ reduce using rule 4 (statement_list -> .) ]
  ! plus            [ reduce using rule 4 (statement_list -> .) ]
  ! minus           [ reduce using rule 4 (statement_list -> .) ]
  ! no              [ reduce using rule 4 (statement_list -> .) ]
  ! identifier      [ reduce using rule 4 (statement_list -> .) ]
  ! lsqbrack        [ reduce using rule 4 (statement_list -> .) ]
  ! valor_cadena    [ reduce using rule 4 (statement_list -> .) ]
  ! break           [ reduce using rule 4 (statement_list -> .) ]
  ! continue        [ reduce using rule 4 (statement_list -> .) ]
  ! return          [ reduce using rule 4 (statement_list -> .) ]
  ! lparen          [ reduce using rule 4 (statement_list -> .) ]
  ! if              [ reduce using rule 4 (statement_list -> .) ]
  ! valor_entero    [ reduce using rule 4 (statement_list -> .) ]
  ! valor_decimal   [ reduce using rule 4 (statement_list -> .) ]
  ! valor_caracter  [ reduce using rule 4 (statement_list -> .) ]
  ! verdadero       [ reduce using rule 4 (statement_list -> .) ]
  ! falso           [ reduce using rule 4 (statement_list -> .) ]
  ! Int64           [ reduce using rule 4 (statement_list -> .) ]
  ! Float64         [ reduce using rule 4 (statement_list -> .) ]
  ! Bool            [ reduce using rule 4 (statement_list -> .) ]
  ! Char            [ reduce using rule 4 (statement_list -> .) ]
  ! String          [ reduce using rule 4 (statement_list -> .) ]
  ! sin             [ reduce using rule 4 (statement_list -> .) ]
  ! cos             [ reduce using rule 4 (statement_list -> .) ]
  ! tan             [ reduce using rule 4 (statement_list -> .) ]
  ! sqrt            [ reduce using rule 4 (statement_list -> .) ]
  ! log10           [ reduce using rule 4 (statement_list -> .) ]
  ! uppercase       [ reduce using rule 4 (statement_list -> .) ]
  ! lowercase       [ reduce using rule 4 (statement_list -> .) ]
  ! trunc           [ reduce using rule 4 (statement_list -> .) ]
  ! float           [ reduce using rule 4 (statement_list -> .) ]
  ! string          [ reduce using rule 4 (statement_list -> .) ]
  ! typeof          [ reduce using rule 4 (statement_list -> .) ]
  ! length          [ reduce using rule 4 (statement_list -> .) ]
  ! log             [ reduce using rule 4 (statement_list -> .) ]
  ! parse           [ reduce using rule 4 (statement_list -> .) ]
  ! push            [ reduce using rule 4 (statement_list -> .) ]
  ! pop             [ reduce using rule 4 (statement_list -> .) ]

    statement_list                 shift and go to state 149
    statement                      shift and go to state 3
    expression                     shift and go to state 4
    if_statement                   shift and go to state 5
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 87

    (84) container -> identifier . in argscontainer

    in              shift and go to state 150


state 88

    (19) statement -> struct identifier . struct_parameters end
    (115) struct_parameters -> . expression terminator
    (116) struct_parameters -> . struct_parameters expression terminator
    (117) struct_parameters -> .
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

  ! shift/reduce conflict for nothing resolved as shift
  ! shift/reduce conflict for global resolved as shift
  ! shift/reduce conflict for local resolved as shift
  ! shift/reduce conflict for plus resolved as shift
  ! shift/reduce conflict for minus resolved as shift
  ! shift/reduce conflict for no resolved as shift
  ! shift/reduce conflict for identifier resolved as shift
  ! shift/reduce conflict for lsqbrack resolved as shift
  ! shift/reduce conflict for valor_cadena resolved as shift
  ! shift/reduce conflict for break resolved as shift
  ! shift/reduce conflict for continue resolved as shift
  ! shift/reduce conflict for return resolved as shift
  ! shift/reduce conflict for lparen resolved as shift
  ! shift/reduce conflict for valor_entero resolved as shift
  ! shift/reduce conflict for valor_decimal resolved as shift
  ! shift/reduce conflict for valor_caracter resolved as shift
  ! shift/reduce conflict for verdadero resolved as shift
  ! shift/reduce conflict for falso resolved as shift
  ! shift/reduce conflict for Int64 resolved as shift
  ! shift/reduce conflict for Float64 resolved as shift
  ! shift/reduce conflict for Bool resolved as shift
  ! shift/reduce conflict for Char resolved as shift
  ! shift/reduce conflict for String resolved as shift
  ! shift/reduce conflict for sin resolved as shift
  ! shift/reduce conflict for cos resolved as shift
  ! shift/reduce conflict for tan resolved as shift
  ! shift/reduce conflict for sqrt resolved as shift
  ! shift/reduce conflict for log10 resolved as shift
  ! shift/reduce conflict for uppercase resolved as shift
  ! shift/reduce conflict for lowercase resolved as shift
  ! shift/reduce conflict for trunc resolved as shift
  ! shift/reduce conflict for float resolved as shift
  ! shift/reduce conflict for string resolved as shift
  ! shift/reduce conflict for typeof resolved as shift
  ! shift/reduce conflict for length resolved as shift
  ! shift/reduce conflict for log resolved as shift
  ! shift/reduce conflict for parse resolved as shift
  ! shift/reduce conflict for push resolved as shift
  ! shift/reduce conflict for pop resolved as shift
    end             reduce using rule 117 (struct_parameters -> .)
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

  ! nothing         [ reduce using rule 117 (struct_parameters -> .) ]
  ! global          [ reduce using rule 117 (struct_parameters -> .) ]
  ! local           [ reduce using rule 117 (struct_parameters -> .) ]
  ! plus            [ reduce using rule 117 (struct_parameters -> .) ]
  ! minus           [ reduce using rule 117 (struct_parameters -> .) ]
  ! no              [ reduce using rule 117 (struct_parameters -> .) ]
  ! identifier      [ reduce using rule 117 (struct_parameters -> .) ]
  ! lsqbrack        [ reduce using rule 117 (struct_parameters -> .) ]
  ! valor_cadena    [ reduce using rule 117 (struct_parameters -> .) ]
  ! break           [ reduce using rule 117 (struct_parameters -> .) ]
  ! continue        [ reduce using rule 117 (struct_parameters -> .) ]
  ! return          [ reduce using rule 117 (struct_parameters -> .) ]
  ! lparen          [ reduce using rule 117 (struct_parameters -> .) ]
  ! valor_entero    [ reduce using rule 117 (struct_parameters -> .) ]
  ! valor_decimal   [ reduce using rule 117 (struct_parameters -> .) ]
  ! valor_caracter  [ reduce using rule 117 (struct_parameters -> .) ]
  ! verdadero       [ reduce using rule 117 (struct_parameters -> .) ]
  ! falso           [ reduce using rule 117 (struct_parameters -> .) ]
  ! Int64           [ reduce using rule 117 (struct_parameters -> .) ]
  ! Float64         [ reduce using rule 117 (struct_parameters -> .) ]
  ! Bool            [ reduce using rule 117 (struct_parameters -> .) ]
  ! Char            [ reduce using rule 117 (struct_parameters -> .) ]
  ! String          [ reduce using rule 117 (struct_parameters -> .) ]
  ! sin             [ reduce using rule 117 (struct_parameters -> .) ]
  ! cos             [ reduce using rule 117 (struct_parameters -> .) ]
  ! tan             [ reduce using rule 117 (struct_parameters -> .) ]
  ! sqrt            [ reduce using rule 117 (struct_parameters -> .) ]
  ! log10           [ reduce using rule 117 (struct_parameters -> .) ]
  ! uppercase       [ reduce using rule 117 (struct_parameters -> .) ]
  ! lowercase       [ reduce using rule 117 (struct_parameters -> .) ]
  ! trunc           [ reduce using rule 117 (struct_parameters -> .) ]
  ! float           [ reduce using rule 117 (struct_parameters -> .) ]
  ! string          [ reduce using rule 117 (struct_parameters -> .) ]
  ! typeof          [ reduce using rule 117 (struct_parameters -> .) ]
  ! length          [ reduce using rule 117 (struct_parameters -> .) ]
  ! log             [ reduce using rule 117 (struct_parameters -> .) ]
  ! parse           [ reduce using rule 117 (struct_parameters -> .) ]
  ! push            [ reduce using rule 117 (struct_parameters -> .) ]
  ! pop             [ reduce using rule 117 (struct_parameters -> .) ]

    struct_parameters              shift and go to state 151
    expression                     shift and go to state 152
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 89

    (20) statement -> mutable struct . identifier struct_parameters end

    identifier      shift and go to state 153


state 90

    (46) expression -> global expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

  ! shift/reduce conflict for equal resolved as shift
  ! shift/reduce conflict for definir resolved as shift
  ! shift/reduce conflict for plus resolved as shift
  ! shift/reduce conflict for minus resolved as shift
  ! shift/reduce conflict for mul resolved as shift
  ! shift/reduce conflict for div resolved as shift
  ! shift/reduce conflict for mod resolved as shift
  ! shift/reduce conflict for exp resolved as shift
  ! shift/reduce conflict for gte resolved as shift
  ! shift/reduce conflict for lte resolved as shift
  ! shift/reduce conflict for gt resolved as shift
  ! shift/reduce conflict for lt resolved as shift
  ! shift/reduce conflict for eq resolved as shift
  ! shift/reduce conflict for neq resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for point resolved as shift
    terminator      reduce using rule 46 (expression -> global expression .)
    rparen          reduce using rule 46 (expression -> global expression .)
    function        reduce using rule 46 (expression -> global expression .)
    print           reduce using rule 46 (expression -> global expression .)
    println         reduce using rule 46 (expression -> global expression .)
    while           reduce using rule 46 (expression -> global expression .)
    for             reduce using rule 46 (expression -> global expression .)
    struct          reduce using rule 46 (expression -> global expression .)
    mutable         reduce using rule 46 (expression -> global expression .)
    nothing         reduce using rule 46 (expression -> global expression .)
    global          reduce using rule 46 (expression -> global expression .)
    local           reduce using rule 46 (expression -> global expression .)
    no              reduce using rule 46 (expression -> global expression .)
    identifier      reduce using rule 46 (expression -> global expression .)
    lsqbrack        reduce using rule 46 (expression -> global expression .)
    valor_cadena    reduce using rule 46 (expression -> global expression .)
    break           reduce using rule 46 (expression -> global expression .)
    continue        reduce using rule 46 (expression -> global expression .)
    return          reduce using rule 46 (expression -> global expression .)
    lparen          reduce using rule 46 (expression -> global expression .)
    if              reduce using rule 46 (expression -> global expression .)
    valor_entero    reduce using rule 46 (expression -> global expression .)
    valor_decimal   reduce using rule 46 (expression -> global expression .)
    valor_caracter  reduce using rule 46 (expression -> global expression .)
    verdadero       reduce using rule 46 (expression -> global expression .)
    falso           reduce using rule 46 (expression -> global expression .)
    Int64           reduce using rule 46 (expression -> global expression .)
    Float64         reduce using rule 46 (expression -> global expression .)
    Bool            reduce using rule 46 (expression -> global expression .)
    Char            reduce using rule 46 (expression -> global expression .)
    String          reduce using rule 46 (expression -> global expression .)
    sin             reduce using rule 46 (expression -> global expression .)
    cos             reduce using rule 46 (expression -> global expression .)
    tan             reduce using rule 46 (expression -> global expression .)
    sqrt            reduce using rule 46 (expression -> global expression .)
    log10           reduce using rule 46 (expression -> global expression .)
    uppercase       reduce using rule 46 (expression -> global expression .)
    lowercase       reduce using rule 46 (expression -> global expression .)
    trunc           reduce using rule 46 (expression -> global expression .)
    float           reduce using rule 46 (expression -> global expression .)
    string          reduce using rule 46 (expression -> global expression .)
    typeof          reduce using rule 46 (expression -> global expression .)
    length          reduce using rule 46 (expression -> global expression .)
    log             reduce using rule 46 (expression -> global expression .)
    parse           reduce using rule 46 (expression -> global expression .)
    push            reduce using rule 46 (expression -> global expression .)
    pop             reduce using rule 46 (expression -> global expression .)
    end             reduce using rule 46 (expression -> global expression .)
    rsqbrack        reduce using rule 46 (expression -> global expression .)
    comma           reduce using rule 46 (expression -> global expression .)
    elseif          reduce using rule 46 (expression -> global expression .)
    else            reduce using rule 46 (expression -> global expression .)
    twopoint        reduce using rule 46 (expression -> global expression .)
    equal           shift and go to state 61
    definir         shift and go to state 62
    plus            shift and go to state 63
    minus           shift and go to state 64
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    eq              shift and go to state 73
    neq             shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    point           shift and go to state 77

  ! equal           [ reduce using rule 46 (expression -> global expression .) ]
  ! definir         [ reduce using rule 46 (expression -> global expression .) ]
  ! plus            [ reduce using rule 46 (expression -> global expression .) ]
  ! minus           [ reduce using rule 46 (expression -> global expression .) ]
  ! mul             [ reduce using rule 46 (expression -> global expression .) ]
  ! div             [ reduce using rule 46 (expression -> global expression .) ]
  ! mod             [ reduce using rule 46 (expression -> global expression .) ]
  ! exp             [ reduce using rule 46 (expression -> global expression .) ]
  ! gte             [ reduce using rule 46 (expression -> global expression .) ]
  ! lte             [ reduce using rule 46 (expression -> global expression .) ]
  ! gt              [ reduce using rule 46 (expression -> global expression .) ]
  ! lt              [ reduce using rule 46 (expression -> global expression .) ]
  ! eq              [ reduce using rule 46 (expression -> global expression .) ]
  ! neq             [ reduce using rule 46 (expression -> global expression .) ]
  ! and             [ reduce using rule 46 (expression -> global expression .) ]
  ! or              [ reduce using rule 46 (expression -> global expression .) ]
  ! point           [ reduce using rule 46 (expression -> global expression .) ]


state 91

    (47) expression -> local expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

  ! shift/reduce conflict for equal resolved as shift
  ! shift/reduce conflict for definir resolved as shift
  ! shift/reduce conflict for plus resolved as shift
  ! shift/reduce conflict for minus resolved as shift
  ! shift/reduce conflict for mul resolved as shift
  ! shift/reduce conflict for div resolved as shift
  ! shift/reduce conflict for mod resolved as shift
  ! shift/reduce conflict for exp resolved as shift
  ! shift/reduce conflict for gte resolved as shift
  ! shift/reduce conflict for lte resolved as shift
  ! shift/reduce conflict for gt resolved as shift
  ! shift/reduce conflict for lt resolved as shift
  ! shift/reduce conflict for eq resolved as shift
  ! shift/reduce conflict for neq resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for point resolved as shift
    terminator      reduce using rule 47 (expression -> local expression .)
    rparen          reduce using rule 47 (expression -> local expression .)
    function        reduce using rule 47 (expression -> local expression .)
    print           reduce using rule 47 (expression -> local expression .)
    println         reduce using rule 47 (expression -> local expression .)
    while           reduce using rule 47 (expression -> local expression .)
    for             reduce using rule 47 (expression -> local expression .)
    struct          reduce using rule 47 (expression -> local expression .)
    mutable         reduce using rule 47 (expression -> local expression .)
    nothing         reduce using rule 47 (expression -> local expression .)
    global          reduce using rule 47 (expression -> local expression .)
    local           reduce using rule 47 (expression -> local expression .)
    no              reduce using rule 47 (expression -> local expression .)
    identifier      reduce using rule 47 (expression -> local expression .)
    lsqbrack        reduce using rule 47 (expression -> local expression .)
    valor_cadena    reduce using rule 47 (expression -> local expression .)
    break           reduce using rule 47 (expression -> local expression .)
    continue        reduce using rule 47 (expression -> local expression .)
    return          reduce using rule 47 (expression -> local expression .)
    lparen          reduce using rule 47 (expression -> local expression .)
    if              reduce using rule 47 (expression -> local expression .)
    valor_entero    reduce using rule 47 (expression -> local expression .)
    valor_decimal   reduce using rule 47 (expression -> local expression .)
    valor_caracter  reduce using rule 47 (expression -> local expression .)
    verdadero       reduce using rule 47 (expression -> local expression .)
    falso           reduce using rule 47 (expression -> local expression .)
    Int64           reduce using rule 47 (expression -> local expression .)
    Float64         reduce using rule 47 (expression -> local expression .)
    Bool            reduce using rule 47 (expression -> local expression .)
    Char            reduce using rule 47 (expression -> local expression .)
    String          reduce using rule 47 (expression -> local expression .)
    sin             reduce using rule 47 (expression -> local expression .)
    cos             reduce using rule 47 (expression -> local expression .)
    tan             reduce using rule 47 (expression -> local expression .)
    sqrt            reduce using rule 47 (expression -> local expression .)
    log10           reduce using rule 47 (expression -> local expression .)
    uppercase       reduce using rule 47 (expression -> local expression .)
    lowercase       reduce using rule 47 (expression -> local expression .)
    trunc           reduce using rule 47 (expression -> local expression .)
    float           reduce using rule 47 (expression -> local expression .)
    string          reduce using rule 47 (expression -> local expression .)
    typeof          reduce using rule 47 (expression -> local expression .)
    length          reduce using rule 47 (expression -> local expression .)
    log             reduce using rule 47 (expression -> local expression .)
    parse           reduce using rule 47 (expression -> local expression .)
    push            reduce using rule 47 (expression -> local expression .)
    pop             reduce using rule 47 (expression -> local expression .)
    end             reduce using rule 47 (expression -> local expression .)
    rsqbrack        reduce using rule 47 (expression -> local expression .)
    comma           reduce using rule 47 (expression -> local expression .)
    elseif          reduce using rule 47 (expression -> local expression .)
    else            reduce using rule 47 (expression -> local expression .)
    twopoint        reduce using rule 47 (expression -> local expression .)
    equal           shift and go to state 61
    definir         shift and go to state 62
    plus            shift and go to state 63
    minus           shift and go to state 64
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    eq              shift and go to state 73
    neq             shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    point           shift and go to state 77

  ! equal           [ reduce using rule 47 (expression -> local expression .) ]
  ! definir         [ reduce using rule 47 (expression -> local expression .) ]
  ! plus            [ reduce using rule 47 (expression -> local expression .) ]
  ! minus           [ reduce using rule 47 (expression -> local expression .) ]
  ! mul             [ reduce using rule 47 (expression -> local expression .) ]
  ! div             [ reduce using rule 47 (expression -> local expression .) ]
  ! mod             [ reduce using rule 47 (expression -> local expression .) ]
  ! exp             [ reduce using rule 47 (expression -> local expression .) ]
  ! gte             [ reduce using rule 47 (expression -> local expression .) ]
  ! lte             [ reduce using rule 47 (expression -> local expression .) ]
  ! gt              [ reduce using rule 47 (expression -> local expression .) ]
  ! lt              [ reduce using rule 47 (expression -> local expression .) ]
  ! eq              [ reduce using rule 47 (expression -> local expression .) ]
  ! neq             [ reduce using rule 47 (expression -> local expression .) ]
  ! and             [ reduce using rule 47 (expression -> local expression .) ]
  ! or              [ reduce using rule 47 (expression -> local expression .) ]
  ! point           [ reduce using rule 47 (expression -> local expression .) ]


state 92

    (56) expression -> plus expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 56 (expression -> plus expression .)
    definir         reduce using rule 56 (expression -> plus expression .)
    plus            reduce using rule 56 (expression -> plus expression .)
    minus           reduce using rule 56 (expression -> plus expression .)
    mul             reduce using rule 56 (expression -> plus expression .)
    div             reduce using rule 56 (expression -> plus expression .)
    mod             reduce using rule 56 (expression -> plus expression .)
    gte             reduce using rule 56 (expression -> plus expression .)
    lte             reduce using rule 56 (expression -> plus expression .)
    gt              reduce using rule 56 (expression -> plus expression .)
    lt              reduce using rule 56 (expression -> plus expression .)
    eq              reduce using rule 56 (expression -> plus expression .)
    neq             reduce using rule 56 (expression -> plus expression .)
    and             reduce using rule 56 (expression -> plus expression .)
    or              reduce using rule 56 (expression -> plus expression .)
    terminator      reduce using rule 56 (expression -> plus expression .)
    rparen          reduce using rule 56 (expression -> plus expression .)
    function        reduce using rule 56 (expression -> plus expression .)
    print           reduce using rule 56 (expression -> plus expression .)
    println         reduce using rule 56 (expression -> plus expression .)
    while           reduce using rule 56 (expression -> plus expression .)
    for             reduce using rule 56 (expression -> plus expression .)
    struct          reduce using rule 56 (expression -> plus expression .)
    mutable         reduce using rule 56 (expression -> plus expression .)
    nothing         reduce using rule 56 (expression -> plus expression .)
    global          reduce using rule 56 (expression -> plus expression .)
    local           reduce using rule 56 (expression -> plus expression .)
    no              reduce using rule 56 (expression -> plus expression .)
    identifier      reduce using rule 56 (expression -> plus expression .)
    lsqbrack        reduce using rule 56 (expression -> plus expression .)
    valor_cadena    reduce using rule 56 (expression -> plus expression .)
    break           reduce using rule 56 (expression -> plus expression .)
    continue        reduce using rule 56 (expression -> plus expression .)
    return          reduce using rule 56 (expression -> plus expression .)
    lparen          reduce using rule 56 (expression -> plus expression .)
    if              reduce using rule 56 (expression -> plus expression .)
    valor_entero    reduce using rule 56 (expression -> plus expression .)
    valor_decimal   reduce using rule 56 (expression -> plus expression .)
    valor_caracter  reduce using rule 56 (expression -> plus expression .)
    verdadero       reduce using rule 56 (expression -> plus expression .)
    falso           reduce using rule 56 (expression -> plus expression .)
    Int64           reduce using rule 56 (expression -> plus expression .)
    Float64         reduce using rule 56 (expression -> plus expression .)
    Bool            reduce using rule 56 (expression -> plus expression .)
    Char            reduce using rule 56 (expression -> plus expression .)
    String          reduce using rule 56 (expression -> plus expression .)
    sin             reduce using rule 56 (expression -> plus expression .)
    cos             reduce using rule 56 (expression -> plus expression .)
    tan             reduce using rule 56 (expression -> plus expression .)
    sqrt            reduce using rule 56 (expression -> plus expression .)
    log10           reduce using rule 56 (expression -> plus expression .)
    uppercase       reduce using rule 56 (expression -> plus expression .)
    lowercase       reduce using rule 56 (expression -> plus expression .)
    trunc           reduce using rule 56 (expression -> plus expression .)
    float           reduce using rule 56 (expression -> plus expression .)
    string          reduce using rule 56 (expression -> plus expression .)
    typeof          reduce using rule 56 (expression -> plus expression .)
    length          reduce using rule 56 (expression -> plus expression .)
    log             reduce using rule 56 (expression -> plus expression .)
    parse           reduce using rule 56 (expression -> plus expression .)
    push            reduce using rule 56 (expression -> plus expression .)
    pop             reduce using rule 56 (expression -> plus expression .)
    end             reduce using rule 56 (expression -> plus expression .)
    rsqbrack        reduce using rule 56 (expression -> plus expression .)
    comma           reduce using rule 56 (expression -> plus expression .)
    elseif          reduce using rule 56 (expression -> plus expression .)
    else            reduce using rule 56 (expression -> plus expression .)
    twopoint        reduce using rule 56 (expression -> plus expression .)
    exp             shift and go to state 68
    point           shift and go to state 77

  ! exp             [ reduce using rule 56 (expression -> plus expression .) ]
  ! point           [ reduce using rule 56 (expression -> plus expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! plus            [ shift and go to state 63 ]
  ! minus           [ shift and go to state 64 ]
  ! mul             [ shift and go to state 65 ]
  ! div             [ shift and go to state 66 ]
  ! mod             [ shift and go to state 67 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 93

    (57) expression -> minus expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 57 (expression -> minus expression .)
    definir         reduce using rule 57 (expression -> minus expression .)
    plus            reduce using rule 57 (expression -> minus expression .)
    minus           reduce using rule 57 (expression -> minus expression .)
    mul             reduce using rule 57 (expression -> minus expression .)
    div             reduce using rule 57 (expression -> minus expression .)
    mod             reduce using rule 57 (expression -> minus expression .)
    gte             reduce using rule 57 (expression -> minus expression .)
    lte             reduce using rule 57 (expression -> minus expression .)
    gt              reduce using rule 57 (expression -> minus expression .)
    lt              reduce using rule 57 (expression -> minus expression .)
    eq              reduce using rule 57 (expression -> minus expression .)
    neq             reduce using rule 57 (expression -> minus expression .)
    and             reduce using rule 57 (expression -> minus expression .)
    or              reduce using rule 57 (expression -> minus expression .)
    terminator      reduce using rule 57 (expression -> minus expression .)
    rparen          reduce using rule 57 (expression -> minus expression .)
    function        reduce using rule 57 (expression -> minus expression .)
    print           reduce using rule 57 (expression -> minus expression .)
    println         reduce using rule 57 (expression -> minus expression .)
    while           reduce using rule 57 (expression -> minus expression .)
    for             reduce using rule 57 (expression -> minus expression .)
    struct          reduce using rule 57 (expression -> minus expression .)
    mutable         reduce using rule 57 (expression -> minus expression .)
    nothing         reduce using rule 57 (expression -> minus expression .)
    global          reduce using rule 57 (expression -> minus expression .)
    local           reduce using rule 57 (expression -> minus expression .)
    no              reduce using rule 57 (expression -> minus expression .)
    identifier      reduce using rule 57 (expression -> minus expression .)
    lsqbrack        reduce using rule 57 (expression -> minus expression .)
    valor_cadena    reduce using rule 57 (expression -> minus expression .)
    break           reduce using rule 57 (expression -> minus expression .)
    continue        reduce using rule 57 (expression -> minus expression .)
    return          reduce using rule 57 (expression -> minus expression .)
    lparen          reduce using rule 57 (expression -> minus expression .)
    if              reduce using rule 57 (expression -> minus expression .)
    valor_entero    reduce using rule 57 (expression -> minus expression .)
    valor_decimal   reduce using rule 57 (expression -> minus expression .)
    valor_caracter  reduce using rule 57 (expression -> minus expression .)
    verdadero       reduce using rule 57 (expression -> minus expression .)
    falso           reduce using rule 57 (expression -> minus expression .)
    Int64           reduce using rule 57 (expression -> minus expression .)
    Float64         reduce using rule 57 (expression -> minus expression .)
    Bool            reduce using rule 57 (expression -> minus expression .)
    Char            reduce using rule 57 (expression -> minus expression .)
    String          reduce using rule 57 (expression -> minus expression .)
    sin             reduce using rule 57 (expression -> minus expression .)
    cos             reduce using rule 57 (expression -> minus expression .)
    tan             reduce using rule 57 (expression -> minus expression .)
    sqrt            reduce using rule 57 (expression -> minus expression .)
    log10           reduce using rule 57 (expression -> minus expression .)
    uppercase       reduce using rule 57 (expression -> minus expression .)
    lowercase       reduce using rule 57 (expression -> minus expression .)
    trunc           reduce using rule 57 (expression -> minus expression .)
    float           reduce using rule 57 (expression -> minus expression .)
    string          reduce using rule 57 (expression -> minus expression .)
    typeof          reduce using rule 57 (expression -> minus expression .)
    length          reduce using rule 57 (expression -> minus expression .)
    log             reduce using rule 57 (expression -> minus expression .)
    parse           reduce using rule 57 (expression -> minus expression .)
    push            reduce using rule 57 (expression -> minus expression .)
    pop             reduce using rule 57 (expression -> minus expression .)
    end             reduce using rule 57 (expression -> minus expression .)
    rsqbrack        reduce using rule 57 (expression -> minus expression .)
    comma           reduce using rule 57 (expression -> minus expression .)
    elseif          reduce using rule 57 (expression -> minus expression .)
    else            reduce using rule 57 (expression -> minus expression .)
    twopoint        reduce using rule 57 (expression -> minus expression .)
    exp             shift and go to state 68
    point           shift and go to state 77

  ! exp             [ reduce using rule 57 (expression -> minus expression .) ]
  ! point           [ reduce using rule 57 (expression -> minus expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! plus            [ shift and go to state 63 ]
  ! minus           [ shift and go to state 64 ]
  ! mul             [ shift and go to state 65 ]
  ! div             [ shift and go to state 66 ]
  ! mod             [ shift and go to state 67 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 94

    (66) expression -> no expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 66 (expression -> no expression .)
    definir         reduce using rule 66 (expression -> no expression .)
    plus            reduce using rule 66 (expression -> no expression .)
    minus           reduce using rule 66 (expression -> no expression .)
    mul             reduce using rule 66 (expression -> no expression .)
    div             reduce using rule 66 (expression -> no expression .)
    mod             reduce using rule 66 (expression -> no expression .)
    gte             reduce using rule 66 (expression -> no expression .)
    lte             reduce using rule 66 (expression -> no expression .)
    gt              reduce using rule 66 (expression -> no expression .)
    lt              reduce using rule 66 (expression -> no expression .)
    eq              reduce using rule 66 (expression -> no expression .)
    neq             reduce using rule 66 (expression -> no expression .)
    and             reduce using rule 66 (expression -> no expression .)
    or              reduce using rule 66 (expression -> no expression .)
    terminator      reduce using rule 66 (expression -> no expression .)
    rparen          reduce using rule 66 (expression -> no expression .)
    function        reduce using rule 66 (expression -> no expression .)
    print           reduce using rule 66 (expression -> no expression .)
    println         reduce using rule 66 (expression -> no expression .)
    while           reduce using rule 66 (expression -> no expression .)
    for             reduce using rule 66 (expression -> no expression .)
    struct          reduce using rule 66 (expression -> no expression .)
    mutable         reduce using rule 66 (expression -> no expression .)
    nothing         reduce using rule 66 (expression -> no expression .)
    global          reduce using rule 66 (expression -> no expression .)
    local           reduce using rule 66 (expression -> no expression .)
    no              reduce using rule 66 (expression -> no expression .)
    identifier      reduce using rule 66 (expression -> no expression .)
    lsqbrack        reduce using rule 66 (expression -> no expression .)
    valor_cadena    reduce using rule 66 (expression -> no expression .)
    break           reduce using rule 66 (expression -> no expression .)
    continue        reduce using rule 66 (expression -> no expression .)
    return          reduce using rule 66 (expression -> no expression .)
    lparen          reduce using rule 66 (expression -> no expression .)
    if              reduce using rule 66 (expression -> no expression .)
    valor_entero    reduce using rule 66 (expression -> no expression .)
    valor_decimal   reduce using rule 66 (expression -> no expression .)
    valor_caracter  reduce using rule 66 (expression -> no expression .)
    verdadero       reduce using rule 66 (expression -> no expression .)
    falso           reduce using rule 66 (expression -> no expression .)
    Int64           reduce using rule 66 (expression -> no expression .)
    Float64         reduce using rule 66 (expression -> no expression .)
    Bool            reduce using rule 66 (expression -> no expression .)
    Char            reduce using rule 66 (expression -> no expression .)
    String          reduce using rule 66 (expression -> no expression .)
    sin             reduce using rule 66 (expression -> no expression .)
    cos             reduce using rule 66 (expression -> no expression .)
    tan             reduce using rule 66 (expression -> no expression .)
    sqrt            reduce using rule 66 (expression -> no expression .)
    log10           reduce using rule 66 (expression -> no expression .)
    uppercase       reduce using rule 66 (expression -> no expression .)
    lowercase       reduce using rule 66 (expression -> no expression .)
    trunc           reduce using rule 66 (expression -> no expression .)
    float           reduce using rule 66 (expression -> no expression .)
    string          reduce using rule 66 (expression -> no expression .)
    typeof          reduce using rule 66 (expression -> no expression .)
    length          reduce using rule 66 (expression -> no expression .)
    log             reduce using rule 66 (expression -> no expression .)
    parse           reduce using rule 66 (expression -> no expression .)
    push            reduce using rule 66 (expression -> no expression .)
    pop             reduce using rule 66 (expression -> no expression .)
    end             reduce using rule 66 (expression -> no expression .)
    rsqbrack        reduce using rule 66 (expression -> no expression .)
    comma           reduce using rule 66 (expression -> no expression .)
    elseif          reduce using rule 66 (expression -> no expression .)
    else            reduce using rule 66 (expression -> no expression .)
    twopoint        reduce using rule 66 (expression -> no expression .)
    exp             shift and go to state 68
    point           shift and go to state 77

  ! exp             [ reduce using rule 66 (expression -> no expression .) ]
  ! point           [ reduce using rule 66 (expression -> no expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! plus            [ shift and go to state 63 ]
  ! minus           [ shift and go to state 64 ]
  ! mul             [ shift and go to state 65 ]
  ! div             [ shift and go to state 66 ]
  ! mod             [ shift and go to state 67 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 95

    (68) expression -> lsqbrack arguments . rsqbrack
    (69) expression -> lsqbrack arguments . rsqbrack definir Array lkey type_data rkey
    (113) arguments -> arguments . comma expression

    rsqbrack        shift and go to state 154
    comma           shift and go to state 155


state 96

    (112) arguments -> expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    rsqbrack        reduce using rule 112 (arguments -> expression .)
    comma           reduce using rule 112 (arguments -> expression .)
    rparen          reduce using rule 112 (arguments -> expression .)
    equal           shift and go to state 61
    definir         shift and go to state 62
    plus            shift and go to state 63
    minus           shift and go to state 64
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    eq              shift and go to state 73
    neq             shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    point           shift and go to state 77


state 97

    (70) expression -> valor_cadena lsqbrack . expslice rsqbrack
    (75) expslice -> . slice_copy
    (76) expslice -> . slice_left
    (77) expslice -> . slice_right
    (78) expslice -> . slice_all
    (79) expslice -> . expression
    (80) slice_copy -> . twopoint
    (81) slice_left -> . expression twopoint
    (82) slice_right -> . twopoint expression
    (83) slice_all -> . expression twopoint expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    twopoint        shift and go to state 142
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expslice                       shift and go to state 156
    slice_copy                     shift and go to state 137
    slice_left                     shift and go to state 138
    slice_right                    shift and go to state 139
    slice_all                      shift and go to state 140
    expression                     shift and go to state 141
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 98

    (89) expression -> return expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

  ! shift/reduce conflict for equal resolved as shift
  ! shift/reduce conflict for definir resolved as shift
  ! shift/reduce conflict for plus resolved as shift
  ! shift/reduce conflict for minus resolved as shift
  ! shift/reduce conflict for mul resolved as shift
  ! shift/reduce conflict for div resolved as shift
  ! shift/reduce conflict for mod resolved as shift
  ! shift/reduce conflict for exp resolved as shift
  ! shift/reduce conflict for gte resolved as shift
  ! shift/reduce conflict for lte resolved as shift
  ! shift/reduce conflict for gt resolved as shift
  ! shift/reduce conflict for lt resolved as shift
  ! shift/reduce conflict for eq resolved as shift
  ! shift/reduce conflict for neq resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for point resolved as shift
    terminator      reduce using rule 89 (expression -> return expression .)
    rparen          reduce using rule 89 (expression -> return expression .)
    function        reduce using rule 89 (expression -> return expression .)
    print           reduce using rule 89 (expression -> return expression .)
    println         reduce using rule 89 (expression -> return expression .)
    while           reduce using rule 89 (expression -> return expression .)
    for             reduce using rule 89 (expression -> return expression .)
    struct          reduce using rule 89 (expression -> return expression .)
    mutable         reduce using rule 89 (expression -> return expression .)
    nothing         reduce using rule 89 (expression -> return expression .)
    global          reduce using rule 89 (expression -> return expression .)
    local           reduce using rule 89 (expression -> return expression .)
    no              reduce using rule 89 (expression -> return expression .)
    identifier      reduce using rule 89 (expression -> return expression .)
    lsqbrack        reduce using rule 89 (expression -> return expression .)
    valor_cadena    reduce using rule 89 (expression -> return expression .)
    break           reduce using rule 89 (expression -> return expression .)
    continue        reduce using rule 89 (expression -> return expression .)
    return          reduce using rule 89 (expression -> return expression .)
    lparen          reduce using rule 89 (expression -> return expression .)
    if              reduce using rule 89 (expression -> return expression .)
    valor_entero    reduce using rule 89 (expression -> return expression .)
    valor_decimal   reduce using rule 89 (expression -> return expression .)
    valor_caracter  reduce using rule 89 (expression -> return expression .)
    verdadero       reduce using rule 89 (expression -> return expression .)
    falso           reduce using rule 89 (expression -> return expression .)
    Int64           reduce using rule 89 (expression -> return expression .)
    Float64         reduce using rule 89 (expression -> return expression .)
    Bool            reduce using rule 89 (expression -> return expression .)
    Char            reduce using rule 89 (expression -> return expression .)
    String          reduce using rule 89 (expression -> return expression .)
    sin             reduce using rule 89 (expression -> return expression .)
    cos             reduce using rule 89 (expression -> return expression .)
    tan             reduce using rule 89 (expression -> return expression .)
    sqrt            reduce using rule 89 (expression -> return expression .)
    log10           reduce using rule 89 (expression -> return expression .)
    uppercase       reduce using rule 89 (expression -> return expression .)
    lowercase       reduce using rule 89 (expression -> return expression .)
    trunc           reduce using rule 89 (expression -> return expression .)
    float           reduce using rule 89 (expression -> return expression .)
    string          reduce using rule 89 (expression -> return expression .)
    typeof          reduce using rule 89 (expression -> return expression .)
    length          reduce using rule 89 (expression -> return expression .)
    log             reduce using rule 89 (expression -> return expression .)
    parse           reduce using rule 89 (expression -> return expression .)
    push            reduce using rule 89 (expression -> return expression .)
    pop             reduce using rule 89 (expression -> return expression .)
    end             reduce using rule 89 (expression -> return expression .)
    rsqbrack        reduce using rule 89 (expression -> return expression .)
    comma           reduce using rule 89 (expression -> return expression .)
    elseif          reduce using rule 89 (expression -> return expression .)
    else            reduce using rule 89 (expression -> return expression .)
    twopoint        reduce using rule 89 (expression -> return expression .)
    equal           shift and go to state 61
    definir         shift and go to state 62
    plus            shift and go to state 63
    minus           shift and go to state 64
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    eq              shift and go to state 73
    neq             shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    point           shift and go to state 77

  ! equal           [ reduce using rule 89 (expression -> return expression .) ]
  ! definir         [ reduce using rule 89 (expression -> return expression .) ]
  ! plus            [ reduce using rule 89 (expression -> return expression .) ]
  ! minus           [ reduce using rule 89 (expression -> return expression .) ]
  ! mul             [ reduce using rule 89 (expression -> return expression .) ]
  ! div             [ reduce using rule 89 (expression -> return expression .) ]
  ! mod             [ reduce using rule 89 (expression -> return expression .) ]
  ! exp             [ reduce using rule 89 (expression -> return expression .) ]
  ! gte             [ reduce using rule 89 (expression -> return expression .) ]
  ! lte             [ reduce using rule 89 (expression -> return expression .) ]
  ! gt              [ reduce using rule 89 (expression -> return expression .) ]
  ! lt              [ reduce using rule 89 (expression -> return expression .) ]
  ! eq              [ reduce using rule 89 (expression -> return expression .) ]
  ! neq             [ reduce using rule 89 (expression -> return expression .) ]
  ! and             [ reduce using rule 89 (expression -> return expression .) ]
  ! or              [ reduce using rule 89 (expression -> return expression .) ]
  ! point           [ reduce using rule 89 (expression -> return expression .) ]


state 99

    (91) expression -> id listpoint .
    (93) listpoint -> listpoint . point identifier

  ! shift/reduce conflict for point resolved as shift
    equal           reduce using rule 91 (expression -> id listpoint .)
    definir         reduce using rule 91 (expression -> id listpoint .)
    plus            reduce using rule 91 (expression -> id listpoint .)
    minus           reduce using rule 91 (expression -> id listpoint .)
    mul             reduce using rule 91 (expression -> id listpoint .)
    div             reduce using rule 91 (expression -> id listpoint .)
    mod             reduce using rule 91 (expression -> id listpoint .)
    exp             reduce using rule 91 (expression -> id listpoint .)
    gte             reduce using rule 91 (expression -> id listpoint .)
    lte             reduce using rule 91 (expression -> id listpoint .)
    gt              reduce using rule 91 (expression -> id listpoint .)
    lt              reduce using rule 91 (expression -> id listpoint .)
    eq              reduce using rule 91 (expression -> id listpoint .)
    neq             reduce using rule 91 (expression -> id listpoint .)
    and             reduce using rule 91 (expression -> id listpoint .)
    or              reduce using rule 91 (expression -> id listpoint .)
    terminator      reduce using rule 91 (expression -> id listpoint .)
    rparen          reduce using rule 91 (expression -> id listpoint .)
    function        reduce using rule 91 (expression -> id listpoint .)
    print           reduce using rule 91 (expression -> id listpoint .)
    println         reduce using rule 91 (expression -> id listpoint .)
    while           reduce using rule 91 (expression -> id listpoint .)
    for             reduce using rule 91 (expression -> id listpoint .)
    struct          reduce using rule 91 (expression -> id listpoint .)
    mutable         reduce using rule 91 (expression -> id listpoint .)
    nothing         reduce using rule 91 (expression -> id listpoint .)
    global          reduce using rule 91 (expression -> id listpoint .)
    local           reduce using rule 91 (expression -> id listpoint .)
    no              reduce using rule 91 (expression -> id listpoint .)
    identifier      reduce using rule 91 (expression -> id listpoint .)
    lsqbrack        reduce using rule 91 (expression -> id listpoint .)
    valor_cadena    reduce using rule 91 (expression -> id listpoint .)
    break           reduce using rule 91 (expression -> id listpoint .)
    continue        reduce using rule 91 (expression -> id listpoint .)
    return          reduce using rule 91 (expression -> id listpoint .)
    lparen          reduce using rule 91 (expression -> id listpoint .)
    if              reduce using rule 91 (expression -> id listpoint .)
    valor_entero    reduce using rule 91 (expression -> id listpoint .)
    valor_decimal   reduce using rule 91 (expression -> id listpoint .)
    valor_caracter  reduce using rule 91 (expression -> id listpoint .)
    verdadero       reduce using rule 91 (expression -> id listpoint .)
    falso           reduce using rule 91 (expression -> id listpoint .)
    Int64           reduce using rule 91 (expression -> id listpoint .)
    Float64         reduce using rule 91 (expression -> id listpoint .)
    Bool            reduce using rule 91 (expression -> id listpoint .)
    Char            reduce using rule 91 (expression -> id listpoint .)
    String          reduce using rule 91 (expression -> id listpoint .)
    sin             reduce using rule 91 (expression -> id listpoint .)
    cos             reduce using rule 91 (expression -> id listpoint .)
    tan             reduce using rule 91 (expression -> id listpoint .)
    sqrt            reduce using rule 91 (expression -> id listpoint .)
    log10           reduce using rule 91 (expression -> id listpoint .)
    uppercase       reduce using rule 91 (expression -> id listpoint .)
    lowercase       reduce using rule 91 (expression -> id listpoint .)
    trunc           reduce using rule 91 (expression -> id listpoint .)
    float           reduce using rule 91 (expression -> id listpoint .)
    string          reduce using rule 91 (expression -> id listpoint .)
    typeof          reduce using rule 91 (expression -> id listpoint .)
    length          reduce using rule 91 (expression -> id listpoint .)
    log             reduce using rule 91 (expression -> id listpoint .)
    parse           reduce using rule 91 (expression -> id listpoint .)
    push            reduce using rule 91 (expression -> id listpoint .)
    pop             reduce using rule 91 (expression -> id listpoint .)
    end             reduce using rule 91 (expression -> id listpoint .)
    rsqbrack        reduce using rule 91 (expression -> id listpoint .)
    comma           reduce using rule 91 (expression -> id listpoint .)
    elseif          reduce using rule 91 (expression -> id listpoint .)
    else            reduce using rule 91 (expression -> id listpoint .)
    twopoint        reduce using rule 91 (expression -> id listpoint .)
    point           shift and go to state 157

  ! point           [ reduce using rule 91 (expression -> id listpoint .) ]


state 100

    (92) listpoint -> point . identifier

    identifier      shift and go to state 158


state 101

    (94) expression -> native lparen . arguments rparen
    (112) arguments -> . expression
    (113) arguments -> . arguments comma expression
    (114) arguments -> .
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    rparen          reduce using rule 114 (arguments -> .)
    comma           reduce using rule 114 (arguments -> .)
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    native                         shift and go to state 31
    arguments                      shift and go to state 159
    expression                     shift and go to state 96
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30

state 102

    (38) array_operator -> native point . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    native                         shift and go to state 31
    expression                     shift and go to state 160
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30

state 103

    (7) if_statement -> if expression . statement_list elseif_clause end
    (8) if_statement -> if expression . statement_list elseif_clause else_clause end
    (9) if_statement -> if expression . statement_list end
    (10) if_statement -> if expression . statement_list else_clause end
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray
    (2) statement_list -> . statement terminator
    (3) statement_list -> . statement_list statement terminator
    (4) statement_list -> .
    (5) statement -> . expression
    (6) statement -> . if_statement
    (14) statement -> . function identifier lparen arguments rparen statement_list end
    (15) statement -> . print lparen arguments rparen
    (16) statement -> . println lparen arguments rparen
    (17) statement -> . while expression statement_list end
    (18) statement -> . for container statement_list end
    (19) statement -> . struct identifier struct_parameters end
    (20) statement -> . mutable struct identifier struct_parameters end
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (7) if_statement -> . if expression statement_list elseif_clause end
    (8) if_statement -> . if expression statement_list elseif_clause else_clause end
    (9) if_statement -> . if expression statement_list end
    (10) if_statement -> . if expression statement_list else_clause end
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

  ! shift/reduce conflict for plus resolved as shift
  ! shift/reduce conflict for minus resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for println resolved as shift
  ! shift/reduce conflict for while resolved as shift
  ! shift/reduce conflict for for resolved as shift
  ! shift/reduce conflict for struct resolved as shift
  ! shift/reduce conflict for mutable resolved as shift
  ! shift/reduce conflict for nothing resolved as shift
  ! shift/reduce conflict for global resolved as shift
  ! shift/reduce conflict for local resolved as shift
  ! shift/reduce conflict for no resolved as shift
  ! shift/reduce conflict for identifier resolved as shift
  ! shift/reduce conflict for lsqbrack resolved as shift
  ! shift/reduce conflict for valor_cadena resolved as shift
  ! shift/reduce conflict for break resolved as shift
  ! shift/reduce conflict for continue resolved as shift
  ! shift/reduce conflict for return resolved as shift
  ! shift/reduce conflict for lparen resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for valor_entero resolved as shift
  ! shift/reduce conflict for valor_decimal resolved as shift
  ! shift/reduce conflict for valor_caracter resolved as shift
  ! shift/reduce conflict for verdadero resolved as shift
  ! shift/reduce conflict for falso resolved as shift
  ! shift/reduce conflict for Int64 resolved as shift
  ! shift/reduce conflict for Float64 resolved as shift
  ! shift/reduce conflict for Bool resolved as shift
  ! shift/reduce conflict for Char resolved as shift
  ! shift/reduce conflict for String resolved as shift
  ! shift/reduce conflict for sin resolved as shift
  ! shift/reduce conflict for cos resolved as shift
  ! shift/reduce conflict for tan resolved as shift
  ! shift/reduce conflict for sqrt resolved as shift
  ! shift/reduce conflict for log10 resolved as shift
  ! shift/reduce conflict for uppercase resolved as shift
  ! shift/reduce conflict for lowercase resolved as shift
  ! shift/reduce conflict for trunc resolved as shift
  ! shift/reduce conflict for float resolved as shift
  ! shift/reduce conflict for string resolved as shift
  ! shift/reduce conflict for typeof resolved as shift
  ! shift/reduce conflict for length resolved as shift
  ! shift/reduce conflict for log resolved as shift
  ! shift/reduce conflict for parse resolved as shift
  ! shift/reduce conflict for push resolved as shift
  ! shift/reduce conflict for pop resolved as shift
    equal           shift and go to state 61
    definir         shift and go to state 62
    plus            shift and go to state 147
    minus           shift and go to state 148
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    eq              shift and go to state 73
    neq             shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    point           shift and go to state 77
    end             reduce using rule 4 (statement_list -> .)
    elseif          reduce using rule 4 (statement_list -> .)
    else            reduce using rule 4 (statement_list -> .)
    function        shift and go to state 6
    print           shift and go to state 9
    println         shift and go to state 10
    while           shift and go to state 11
    for             shift and go to state 12
    struct          shift and go to state 13
    mutable         shift and go to state 14
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    if              shift and go to state 32
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

  ! function        [ reduce using rule 4 (statement_list -> .) ]
  ! print           [ reduce using rule 4 (statement_list -> .) ]
  ! println         [ reduce using rule 4 (statement_list -> .) ]
  ! while           [ reduce using rule 4 (statement_list -> .) ]
  ! for             [ reduce using rule 4 (statement_list -> .) ]
  ! struct          [ reduce using rule 4 (statement_list -> .) ]
  ! mutable         [ reduce using rule 4 (statement_list -> .) ]
  ! nothing         [ reduce using rule 4 (statement_list -> .) ]
  ! global          [ reduce using rule 4 (statement_list -> .) ]
  ! local           [ reduce using rule 4 (statement_list -> .) ]
  ! plus            [ reduce using rule 4 (statement_list -> .) ]
  ! minus           [ reduce using rule 4 (statement_list -> .) ]
  ! no              [ reduce using rule 4 (statement_list -> .) ]
  ! identifier      [ reduce using rule 4 (statement_list -> .) ]
  ! lsqbrack        [ reduce using rule 4 (statement_list -> .) ]
  ! valor_cadena    [ reduce using rule 4 (statement_list -> .) ]
  ! break           [ reduce using rule 4 (statement_list -> .) ]
  ! continue        [ reduce using rule 4 (statement_list -> .) ]
  ! return          [ reduce using rule 4 (statement_list -> .) ]
  ! lparen          [ reduce using rule 4 (statement_list -> .) ]
  ! if              [ reduce using rule 4 (statement_list -> .) ]
  ! valor_entero    [ reduce using rule 4 (statement_list -> .) ]
  ! valor_decimal   [ reduce using rule 4 (statement_list -> .) ]
  ! valor_caracter  [ reduce using rule 4 (statement_list -> .) ]
  ! verdadero       [ reduce using rule 4 (statement_list -> .) ]
  ! falso           [ reduce using rule 4 (statement_list -> .) ]
  ! Int64           [ reduce using rule 4 (statement_list -> .) ]
  ! Float64         [ reduce using rule 4 (statement_list -> .) ]
  ! Bool            [ reduce using rule 4 (statement_list -> .) ]
  ! Char            [ reduce using rule 4 (statement_list -> .) ]
  ! String          [ reduce using rule 4 (statement_list -> .) ]
  ! sin             [ reduce using rule 4 (statement_list -> .) ]
  ! cos             [ reduce using rule 4 (statement_list -> .) ]
  ! tan             [ reduce using rule 4 (statement_list -> .) ]
  ! sqrt            [ reduce using rule 4 (statement_list -> .) ]
  ! log10           [ reduce using rule 4 (statement_list -> .) ]
  ! uppercase       [ reduce using rule 4 (statement_list -> .) ]
  ! lowercase       [ reduce using rule 4 (statement_list -> .) ]
  ! trunc           [ reduce using rule 4 (statement_list -> .) ]
  ! float           [ reduce using rule 4 (statement_list -> .) ]
  ! string          [ reduce using rule 4 (statement_list -> .) ]
  ! typeof          [ reduce using rule 4 (statement_list -> .) ]
  ! length          [ reduce using rule 4 (statement_list -> .) ]
  ! log             [ reduce using rule 4 (statement_list -> .) ]
  ! parse           [ reduce using rule 4 (statement_list -> .) ]
  ! push            [ reduce using rule 4 (statement_list -> .) ]
  ! pop             [ reduce using rule 4 (statement_list -> .) ]

    expression                     shift and go to state 4
    statement_list                 shift and go to state 161
    type_data                      shift and go to state 18
    statement                      shift and go to state 3
    if_statement                   shift and go to state 5
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    id                             shift and go to state 30
    native                         shift and go to state 31

state 104

    (109) native -> push no .

    lparen          reduce using rule 109 (native -> push no .)
    point           reduce using rule 109 (native -> push no .)


state 105

    (110) native -> pop no .

    lparen          reduce using rule 110 (native -> pop no .)
    point           reduce using rule 110 (native -> pop no .)


state 106

    (3) statement_list -> statement_list statement terminator .

    function        reduce using rule 3 (statement_list -> statement_list statement terminator .)
    print           reduce using rule 3 (statement_list -> statement_list statement terminator .)
    println         reduce using rule 3 (statement_list -> statement_list statement terminator .)
    while           reduce using rule 3 (statement_list -> statement_list statement terminator .)
    for             reduce using rule 3 (statement_list -> statement_list statement terminator .)
    struct          reduce using rule 3 (statement_list -> statement_list statement terminator .)
    mutable         reduce using rule 3 (statement_list -> statement_list statement terminator .)
    nothing         reduce using rule 3 (statement_list -> statement_list statement terminator .)
    global          reduce using rule 3 (statement_list -> statement_list statement terminator .)
    local           reduce using rule 3 (statement_list -> statement_list statement terminator .)
    plus            reduce using rule 3 (statement_list -> statement_list statement terminator .)
    minus           reduce using rule 3 (statement_list -> statement_list statement terminator .)
    no              reduce using rule 3 (statement_list -> statement_list statement terminator .)
    identifier      reduce using rule 3 (statement_list -> statement_list statement terminator .)
    lsqbrack        reduce using rule 3 (statement_list -> statement_list statement terminator .)
    valor_cadena    reduce using rule 3 (statement_list -> statement_list statement terminator .)
    break           reduce using rule 3 (statement_list -> statement_list statement terminator .)
    continue        reduce using rule 3 (statement_list -> statement_list statement terminator .)
    return          reduce using rule 3 (statement_list -> statement_list statement terminator .)
    lparen          reduce using rule 3 (statement_list -> statement_list statement terminator .)
    if              reduce using rule 3 (statement_list -> statement_list statement terminator .)
    valor_entero    reduce using rule 3 (statement_list -> statement_list statement terminator .)
    valor_decimal   reduce using rule 3 (statement_list -> statement_list statement terminator .)
    valor_caracter  reduce using rule 3 (statement_list -> statement_list statement terminator .)
    verdadero       reduce using rule 3 (statement_list -> statement_list statement terminator .)
    falso           reduce using rule 3 (statement_list -> statement_list statement terminator .)
    Int64           reduce using rule 3 (statement_list -> statement_list statement terminator .)
    Float64         reduce using rule 3 (statement_list -> statement_list statement terminator .)
    Bool            reduce using rule 3 (statement_list -> statement_list statement terminator .)
    Char            reduce using rule 3 (statement_list -> statement_list statement terminator .)
    String          reduce using rule 3 (statement_list -> statement_list statement terminator .)
    sin             reduce using rule 3 (statement_list -> statement_list statement terminator .)
    cos             reduce using rule 3 (statement_list -> statement_list statement terminator .)
    tan             reduce using rule 3 (statement_list -> statement_list statement terminator .)
    sqrt            reduce using rule 3 (statement_list -> statement_list statement terminator .)
    log10           reduce using rule 3 (statement_list -> statement_list statement terminator .)
    uppercase       reduce using rule 3 (statement_list -> statement_list statement terminator .)
    lowercase       reduce using rule 3 (statement_list -> statement_list statement terminator .)
    trunc           reduce using rule 3 (statement_list -> statement_list statement terminator .)
    float           reduce using rule 3 (statement_list -> statement_list statement terminator .)
    string          reduce using rule 3 (statement_list -> statement_list statement terminator .)
    typeof          reduce using rule 3 (statement_list -> statement_list statement terminator .)
    length          reduce using rule 3 (statement_list -> statement_list statement terminator .)
    log             reduce using rule 3 (statement_list -> statement_list statement terminator .)
    parse           reduce using rule 3 (statement_list -> statement_list statement terminator .)
    push            reduce using rule 3 (statement_list -> statement_list statement terminator .)
    pop             reduce using rule 3 (statement_list -> statement_list statement terminator .)
    $end            reduce using rule 3 (statement_list -> statement_list statement terminator .)
    end             reduce using rule 3 (statement_list -> statement_list statement terminator .)
    elseif          reduce using rule 3 (statement_list -> statement_list statement terminator .)
    else            reduce using rule 3 (statement_list -> statement_list statement terminator .)


state 107

    (48) expression -> expression equal expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    terminator      reduce using rule 48 (expression -> expression equal expression .)
    rparen          reduce using rule 48 (expression -> expression equal expression .)
    function        reduce using rule 48 (expression -> expression equal expression .)
    print           reduce using rule 48 (expression -> expression equal expression .)
    println         reduce using rule 48 (expression -> expression equal expression .)
    while           reduce using rule 48 (expression -> expression equal expression .)
    for             reduce using rule 48 (expression -> expression equal expression .)
    struct          reduce using rule 48 (expression -> expression equal expression .)
    mutable         reduce using rule 48 (expression -> expression equal expression .)
    nothing         reduce using rule 48 (expression -> expression equal expression .)
    global          reduce using rule 48 (expression -> expression equal expression .)
    local           reduce using rule 48 (expression -> expression equal expression .)
    no              reduce using rule 48 (expression -> expression equal expression .)
    identifier      reduce using rule 48 (expression -> expression equal expression .)
    lsqbrack        reduce using rule 48 (expression -> expression equal expression .)
    valor_cadena    reduce using rule 48 (expression -> expression equal expression .)
    break           reduce using rule 48 (expression -> expression equal expression .)
    continue        reduce using rule 48 (expression -> expression equal expression .)
    return          reduce using rule 48 (expression -> expression equal expression .)
    lparen          reduce using rule 48 (expression -> expression equal expression .)
    if              reduce using rule 48 (expression -> expression equal expression .)
    valor_entero    reduce using rule 48 (expression -> expression equal expression .)
    valor_decimal   reduce using rule 48 (expression -> expression equal expression .)
    valor_caracter  reduce using rule 48 (expression -> expression equal expression .)
    verdadero       reduce using rule 48 (expression -> expression equal expression .)
    falso           reduce using rule 48 (expression -> expression equal expression .)
    Int64           reduce using rule 48 (expression -> expression equal expression .)
    Float64         reduce using rule 48 (expression -> expression equal expression .)
    Bool            reduce using rule 48 (expression -> expression equal expression .)
    Char            reduce using rule 48 (expression -> expression equal expression .)
    String          reduce using rule 48 (expression -> expression equal expression .)
    sin             reduce using rule 48 (expression -> expression equal expression .)
    cos             reduce using rule 48 (expression -> expression equal expression .)
    tan             reduce using rule 48 (expression -> expression equal expression .)
    sqrt            reduce using rule 48 (expression -> expression equal expression .)
    log10           reduce using rule 48 (expression -> expression equal expression .)
    uppercase       reduce using rule 48 (expression -> expression equal expression .)
    lowercase       reduce using rule 48 (expression -> expression equal expression .)
    trunc           reduce using rule 48 (expression -> expression equal expression .)
    float           reduce using rule 48 (expression -> expression equal expression .)
    string          reduce using rule 48 (expression -> expression equal expression .)
    typeof          reduce using rule 48 (expression -> expression equal expression .)
    length          reduce using rule 48 (expression -> expression equal expression .)
    log             reduce using rule 48 (expression -> expression equal expression .)
    parse           reduce using rule 48 (expression -> expression equal expression .)
    push            reduce using rule 48 (expression -> expression equal expression .)
    pop             reduce using rule 48 (expression -> expression equal expression .)
    end             reduce using rule 48 (expression -> expression equal expression .)
    rsqbrack        reduce using rule 48 (expression -> expression equal expression .)
    comma           reduce using rule 48 (expression -> expression equal expression .)
    elseif          reduce using rule 48 (expression -> expression equal expression .)
    else            reduce using rule 48 (expression -> expression equal expression .)
    twopoint        reduce using rule 48 (expression -> expression equal expression .)
    equal           shift and go to state 61
    definir         shift and go to state 62
    plus            shift and go to state 63
    minus           shift and go to state 64
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    eq              shift and go to state 73
    neq             shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    point           shift and go to state 77

  ! equal           [ reduce using rule 48 (expression -> expression equal expression .) ]
  ! definir         [ reduce using rule 48 (expression -> expression equal expression .) ]
  ! plus            [ reduce using rule 48 (expression -> expression equal expression .) ]
  ! minus           [ reduce using rule 48 (expression -> expression equal expression .) ]
  ! mul             [ reduce using rule 48 (expression -> expression equal expression .) ]
  ! div             [ reduce using rule 48 (expression -> expression equal expression .) ]
  ! mod             [ reduce using rule 48 (expression -> expression equal expression .) ]
  ! exp             [ reduce using rule 48 (expression -> expression equal expression .) ]
  ! gte             [ reduce using rule 48 (expression -> expression equal expression .) ]
  ! lte             [ reduce using rule 48 (expression -> expression equal expression .) ]
  ! gt              [ reduce using rule 48 (expression -> expression equal expression .) ]
  ! lt              [ reduce using rule 48 (expression -> expression equal expression .) ]
  ! eq              [ reduce using rule 48 (expression -> expression equal expression .) ]
  ! neq             [ reduce using rule 48 (expression -> expression equal expression .) ]
  ! and             [ reduce using rule 48 (expression -> expression equal expression .) ]
  ! or              [ reduce using rule 48 (expression -> expression equal expression .) ]
  ! point           [ reduce using rule 48 (expression -> expression equal expression .) ]


state 108

    (49) expression -> expression definir type_data .

    equal           reduce using rule 49 (expression -> expression definir type_data .)
    definir         reduce using rule 49 (expression -> expression definir type_data .)
    plus            reduce using rule 49 (expression -> expression definir type_data .)
    minus           reduce using rule 49 (expression -> expression definir type_data .)
    mul             reduce using rule 49 (expression -> expression definir type_data .)
    div             reduce using rule 49 (expression -> expression definir type_data .)
    mod             reduce using rule 49 (expression -> expression definir type_data .)
    exp             reduce using rule 49 (expression -> expression definir type_data .)
    gte             reduce using rule 49 (expression -> expression definir type_data .)
    lte             reduce using rule 49 (expression -> expression definir type_data .)
    gt              reduce using rule 49 (expression -> expression definir type_data .)
    lt              reduce using rule 49 (expression -> expression definir type_data .)
    eq              reduce using rule 49 (expression -> expression definir type_data .)
    neq             reduce using rule 49 (expression -> expression definir type_data .)
    and             reduce using rule 49 (expression -> expression definir type_data .)
    or              reduce using rule 49 (expression -> expression definir type_data .)
    point           reduce using rule 49 (expression -> expression definir type_data .)
    terminator      reduce using rule 49 (expression -> expression definir type_data .)
    rparen          reduce using rule 49 (expression -> expression definir type_data .)
    function        reduce using rule 49 (expression -> expression definir type_data .)
    print           reduce using rule 49 (expression -> expression definir type_data .)
    println         reduce using rule 49 (expression -> expression definir type_data .)
    while           reduce using rule 49 (expression -> expression definir type_data .)
    for             reduce using rule 49 (expression -> expression definir type_data .)
    struct          reduce using rule 49 (expression -> expression definir type_data .)
    mutable         reduce using rule 49 (expression -> expression definir type_data .)
    nothing         reduce using rule 49 (expression -> expression definir type_data .)
    global          reduce using rule 49 (expression -> expression definir type_data .)
    local           reduce using rule 49 (expression -> expression definir type_data .)
    no              reduce using rule 49 (expression -> expression definir type_data .)
    identifier      reduce using rule 49 (expression -> expression definir type_data .)
    lsqbrack        reduce using rule 49 (expression -> expression definir type_data .)
    valor_cadena    reduce using rule 49 (expression -> expression definir type_data .)
    break           reduce using rule 49 (expression -> expression definir type_data .)
    continue        reduce using rule 49 (expression -> expression definir type_data .)
    return          reduce using rule 49 (expression -> expression definir type_data .)
    lparen          reduce using rule 49 (expression -> expression definir type_data .)
    if              reduce using rule 49 (expression -> expression definir type_data .)
    valor_entero    reduce using rule 49 (expression -> expression definir type_data .)
    valor_decimal   reduce using rule 49 (expression -> expression definir type_data .)
    valor_caracter  reduce using rule 49 (expression -> expression definir type_data .)
    verdadero       reduce using rule 49 (expression -> expression definir type_data .)
    falso           reduce using rule 49 (expression -> expression definir type_data .)
    Int64           reduce using rule 49 (expression -> expression definir type_data .)
    Float64         reduce using rule 49 (expression -> expression definir type_data .)
    Bool            reduce using rule 49 (expression -> expression definir type_data .)
    Char            reduce using rule 49 (expression -> expression definir type_data .)
    String          reduce using rule 49 (expression -> expression definir type_data .)
    sin             reduce using rule 49 (expression -> expression definir type_data .)
    cos             reduce using rule 49 (expression -> expression definir type_data .)
    tan             reduce using rule 49 (expression -> expression definir type_data .)
    sqrt            reduce using rule 49 (expression -> expression definir type_data .)
    log10           reduce using rule 49 (expression -> expression definir type_data .)
    uppercase       reduce using rule 49 (expression -> expression definir type_data .)
    lowercase       reduce using rule 49 (expression -> expression definir type_data .)
    trunc           reduce using rule 49 (expression -> expression definir type_data .)
    float           reduce using rule 49 (expression -> expression definir type_data .)
    string          reduce using rule 49 (expression -> expression definir type_data .)
    typeof          reduce using rule 49 (expression -> expression definir type_data .)
    length          reduce using rule 49 (expression -> expression definir type_data .)
    log             reduce using rule 49 (expression -> expression definir type_data .)
    parse           reduce using rule 49 (expression -> expression definir type_data .)
    push            reduce using rule 49 (expression -> expression definir type_data .)
    pop             reduce using rule 49 (expression -> expression definir type_data .)
    end             reduce using rule 49 (expression -> expression definir type_data .)
    rsqbrack        reduce using rule 49 (expression -> expression definir type_data .)
    comma           reduce using rule 49 (expression -> expression definir type_data .)
    elseif          reduce using rule 49 (expression -> expression definir type_data .)
    else            reduce using rule 49 (expression -> expression definir type_data .)
    twopoint        reduce using rule 49 (expression -> expression definir type_data .)


state 109

    (26) type_data -> id .

    equal           reduce using rule 26 (type_data -> id .)
    definir         reduce using rule 26 (type_data -> id .)
    plus            reduce using rule 26 (type_data -> id .)
    minus           reduce using rule 26 (type_data -> id .)
    mul             reduce using rule 26 (type_data -> id .)
    div             reduce using rule 26 (type_data -> id .)
    mod             reduce using rule 26 (type_data -> id .)
    exp             reduce using rule 26 (type_data -> id .)
    gte             reduce using rule 26 (type_data -> id .)
    lte             reduce using rule 26 (type_data -> id .)
    gt              reduce using rule 26 (type_data -> id .)
    lt              reduce using rule 26 (type_data -> id .)
    eq              reduce using rule 26 (type_data -> id .)
    neq             reduce using rule 26 (type_data -> id .)
    and             reduce using rule 26 (type_data -> id .)
    or              reduce using rule 26 (type_data -> id .)
    point           reduce using rule 26 (type_data -> id .)
    terminator      reduce using rule 26 (type_data -> id .)
    rparen          reduce using rule 26 (type_data -> id .)
    function        reduce using rule 26 (type_data -> id .)
    print           reduce using rule 26 (type_data -> id .)
    println         reduce using rule 26 (type_data -> id .)
    while           reduce using rule 26 (type_data -> id .)
    for             reduce using rule 26 (type_data -> id .)
    struct          reduce using rule 26 (type_data -> id .)
    mutable         reduce using rule 26 (type_data -> id .)
    nothing         reduce using rule 26 (type_data -> id .)
    global          reduce using rule 26 (type_data -> id .)
    local           reduce using rule 26 (type_data -> id .)
    no              reduce using rule 26 (type_data -> id .)
    identifier      reduce using rule 26 (type_data -> id .)
    lsqbrack        reduce using rule 26 (type_data -> id .)
    valor_cadena    reduce using rule 26 (type_data -> id .)
    break           reduce using rule 26 (type_data -> id .)
    continue        reduce using rule 26 (type_data -> id .)
    return          reduce using rule 26 (type_data -> id .)
    lparen          reduce using rule 26 (type_data -> id .)
    if              reduce using rule 26 (type_data -> id .)
    valor_entero    reduce using rule 26 (type_data -> id .)
    valor_decimal   reduce using rule 26 (type_data -> id .)
    valor_caracter  reduce using rule 26 (type_data -> id .)
    verdadero       reduce using rule 26 (type_data -> id .)
    falso           reduce using rule 26 (type_data -> id .)
    Int64           reduce using rule 26 (type_data -> id .)
    Float64         reduce using rule 26 (type_data -> id .)
    Bool            reduce using rule 26 (type_data -> id .)
    Char            reduce using rule 26 (type_data -> id .)
    String          reduce using rule 26 (type_data -> id .)
    sin             reduce using rule 26 (type_data -> id .)
    cos             reduce using rule 26 (type_data -> id .)
    tan             reduce using rule 26 (type_data -> id .)
    sqrt            reduce using rule 26 (type_data -> id .)
    log10           reduce using rule 26 (type_data -> id .)
    uppercase       reduce using rule 26 (type_data -> id .)
    lowercase       reduce using rule 26 (type_data -> id .)
    trunc           reduce using rule 26 (type_data -> id .)
    float           reduce using rule 26 (type_data -> id .)
    string          reduce using rule 26 (type_data -> id .)
    typeof          reduce using rule 26 (type_data -> id .)
    length          reduce using rule 26 (type_data -> id .)
    log             reduce using rule 26 (type_data -> id .)
    parse           reduce using rule 26 (type_data -> id .)
    push            reduce using rule 26 (type_data -> id .)
    pop             reduce using rule 26 (type_data -> id .)
    end             reduce using rule 26 (type_data -> id .)
    rsqbrack        reduce using rule 26 (type_data -> id .)
    comma           reduce using rule 26 (type_data -> id .)
    elseif          reduce using rule 26 (type_data -> id .)
    else            reduce using rule 26 (type_data -> id .)
    twopoint        reduce using rule 26 (type_data -> id .)
    rkey            reduce using rule 26 (type_data -> id .)


state 110

    (111) id -> identifier .

    equal           reduce using rule 111 (id -> identifier .)
    definir         reduce using rule 111 (id -> identifier .)
    plus            reduce using rule 111 (id -> identifier .)
    minus           reduce using rule 111 (id -> identifier .)
    mul             reduce using rule 111 (id -> identifier .)
    div             reduce using rule 111 (id -> identifier .)
    mod             reduce using rule 111 (id -> identifier .)
    exp             reduce using rule 111 (id -> identifier .)
    gte             reduce using rule 111 (id -> identifier .)
    lte             reduce using rule 111 (id -> identifier .)
    gt              reduce using rule 111 (id -> identifier .)
    lt              reduce using rule 111 (id -> identifier .)
    eq              reduce using rule 111 (id -> identifier .)
    neq             reduce using rule 111 (id -> identifier .)
    and             reduce using rule 111 (id -> identifier .)
    or              reduce using rule 111 (id -> identifier .)
    point           reduce using rule 111 (id -> identifier .)
    terminator      reduce using rule 111 (id -> identifier .)
    rparen          reduce using rule 111 (id -> identifier .)
    function        reduce using rule 111 (id -> identifier .)
    print           reduce using rule 111 (id -> identifier .)
    println         reduce using rule 111 (id -> identifier .)
    while           reduce using rule 111 (id -> identifier .)
    for             reduce using rule 111 (id -> identifier .)
    struct          reduce using rule 111 (id -> identifier .)
    mutable         reduce using rule 111 (id -> identifier .)
    nothing         reduce using rule 111 (id -> identifier .)
    global          reduce using rule 111 (id -> identifier .)
    local           reduce using rule 111 (id -> identifier .)
    no              reduce using rule 111 (id -> identifier .)
    identifier      reduce using rule 111 (id -> identifier .)
    lsqbrack        reduce using rule 111 (id -> identifier .)
    valor_cadena    reduce using rule 111 (id -> identifier .)
    break           reduce using rule 111 (id -> identifier .)
    continue        reduce using rule 111 (id -> identifier .)
    return          reduce using rule 111 (id -> identifier .)
    lparen          reduce using rule 111 (id -> identifier .)
    if              reduce using rule 111 (id -> identifier .)
    valor_entero    reduce using rule 111 (id -> identifier .)
    valor_decimal   reduce using rule 111 (id -> identifier .)
    valor_caracter  reduce using rule 111 (id -> identifier .)
    verdadero       reduce using rule 111 (id -> identifier .)
    falso           reduce using rule 111 (id -> identifier .)
    Int64           reduce using rule 111 (id -> identifier .)
    Float64         reduce using rule 111 (id -> identifier .)
    Bool            reduce using rule 111 (id -> identifier .)
    Char            reduce using rule 111 (id -> identifier .)
    String          reduce using rule 111 (id -> identifier .)
    sin             reduce using rule 111 (id -> identifier .)
    cos             reduce using rule 111 (id -> identifier .)
    tan             reduce using rule 111 (id -> identifier .)
    sqrt            reduce using rule 111 (id -> identifier .)
    log10           reduce using rule 111 (id -> identifier .)
    uppercase       reduce using rule 111 (id -> identifier .)
    lowercase       reduce using rule 111 (id -> identifier .)
    trunc           reduce using rule 111 (id -> identifier .)
    float           reduce using rule 111 (id -> identifier .)
    string          reduce using rule 111 (id -> identifier .)
    typeof          reduce using rule 111 (id -> identifier .)
    length          reduce using rule 111 (id -> identifier .)
    log             reduce using rule 111 (id -> identifier .)
    parse           reduce using rule 111 (id -> identifier .)
    push            reduce using rule 111 (id -> identifier .)
    pop             reduce using rule 111 (id -> identifier .)
    end             reduce using rule 111 (id -> identifier .)
    rsqbrack        reduce using rule 111 (id -> identifier .)
    comma           reduce using rule 111 (id -> identifier .)
    elseif          reduce using rule 111 (id -> identifier .)
    else            reduce using rule 111 (id -> identifier .)
    twopoint        reduce using rule 111 (id -> identifier .)
    rkey            reduce using rule 111 (id -> identifier .)


state 111

    (50) expression -> expression plus expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 50 (expression -> expression plus expression .)
    definir         reduce using rule 50 (expression -> expression plus expression .)
    plus            reduce using rule 50 (expression -> expression plus expression .)
    minus           reduce using rule 50 (expression -> expression plus expression .)
    gte             reduce using rule 50 (expression -> expression plus expression .)
    lte             reduce using rule 50 (expression -> expression plus expression .)
    gt              reduce using rule 50 (expression -> expression plus expression .)
    lt              reduce using rule 50 (expression -> expression plus expression .)
    eq              reduce using rule 50 (expression -> expression plus expression .)
    neq             reduce using rule 50 (expression -> expression plus expression .)
    and             reduce using rule 50 (expression -> expression plus expression .)
    or              reduce using rule 50 (expression -> expression plus expression .)
    terminator      reduce using rule 50 (expression -> expression plus expression .)
    rparen          reduce using rule 50 (expression -> expression plus expression .)
    function        reduce using rule 50 (expression -> expression plus expression .)
    print           reduce using rule 50 (expression -> expression plus expression .)
    println         reduce using rule 50 (expression -> expression plus expression .)
    while           reduce using rule 50 (expression -> expression plus expression .)
    for             reduce using rule 50 (expression -> expression plus expression .)
    struct          reduce using rule 50 (expression -> expression plus expression .)
    mutable         reduce using rule 50 (expression -> expression plus expression .)
    nothing         reduce using rule 50 (expression -> expression plus expression .)
    global          reduce using rule 50 (expression -> expression plus expression .)
    local           reduce using rule 50 (expression -> expression plus expression .)
    no              reduce using rule 50 (expression -> expression plus expression .)
    identifier      reduce using rule 50 (expression -> expression plus expression .)
    lsqbrack        reduce using rule 50 (expression -> expression plus expression .)
    valor_cadena    reduce using rule 50 (expression -> expression plus expression .)
    break           reduce using rule 50 (expression -> expression plus expression .)
    continue        reduce using rule 50 (expression -> expression plus expression .)
    return          reduce using rule 50 (expression -> expression plus expression .)
    lparen          reduce using rule 50 (expression -> expression plus expression .)
    if              reduce using rule 50 (expression -> expression plus expression .)
    valor_entero    reduce using rule 50 (expression -> expression plus expression .)
    valor_decimal   reduce using rule 50 (expression -> expression plus expression .)
    valor_caracter  reduce using rule 50 (expression -> expression plus expression .)
    verdadero       reduce using rule 50 (expression -> expression plus expression .)
    falso           reduce using rule 50 (expression -> expression plus expression .)
    Int64           reduce using rule 50 (expression -> expression plus expression .)
    Float64         reduce using rule 50 (expression -> expression plus expression .)
    Bool            reduce using rule 50 (expression -> expression plus expression .)
    Char            reduce using rule 50 (expression -> expression plus expression .)
    String          reduce using rule 50 (expression -> expression plus expression .)
    sin             reduce using rule 50 (expression -> expression plus expression .)
    cos             reduce using rule 50 (expression -> expression plus expression .)
    tan             reduce using rule 50 (expression -> expression plus expression .)
    sqrt            reduce using rule 50 (expression -> expression plus expression .)
    log10           reduce using rule 50 (expression -> expression plus expression .)
    uppercase       reduce using rule 50 (expression -> expression plus expression .)
    lowercase       reduce using rule 50 (expression -> expression plus expression .)
    trunc           reduce using rule 50 (expression -> expression plus expression .)
    float           reduce using rule 50 (expression -> expression plus expression .)
    string          reduce using rule 50 (expression -> expression plus expression .)
    typeof          reduce using rule 50 (expression -> expression plus expression .)
    length          reduce using rule 50 (expression -> expression plus expression .)
    log             reduce using rule 50 (expression -> expression plus expression .)
    parse           reduce using rule 50 (expression -> expression plus expression .)
    push            reduce using rule 50 (expression -> expression plus expression .)
    pop             reduce using rule 50 (expression -> expression plus expression .)
    end             reduce using rule 50 (expression -> expression plus expression .)
    rsqbrack        reduce using rule 50 (expression -> expression plus expression .)
    comma           reduce using rule 50 (expression -> expression plus expression .)
    elseif          reduce using rule 50 (expression -> expression plus expression .)
    else            reduce using rule 50 (expression -> expression plus expression .)
    twopoint        reduce using rule 50 (expression -> expression plus expression .)
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    point           shift and go to state 77

  ! mul             [ reduce using rule 50 (expression -> expression plus expression .) ]
  ! div             [ reduce using rule 50 (expression -> expression plus expression .) ]
  ! mod             [ reduce using rule 50 (expression -> expression plus expression .) ]
  ! exp             [ reduce using rule 50 (expression -> expression plus expression .) ]
  ! point           [ reduce using rule 50 (expression -> expression plus expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! plus            [ shift and go to state 63 ]
  ! minus           [ shift and go to state 64 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 112

    (51) expression -> expression minus expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 51 (expression -> expression minus expression .)
    definir         reduce using rule 51 (expression -> expression minus expression .)
    plus            reduce using rule 51 (expression -> expression minus expression .)
    minus           reduce using rule 51 (expression -> expression minus expression .)
    gte             reduce using rule 51 (expression -> expression minus expression .)
    lte             reduce using rule 51 (expression -> expression minus expression .)
    gt              reduce using rule 51 (expression -> expression minus expression .)
    lt              reduce using rule 51 (expression -> expression minus expression .)
    eq              reduce using rule 51 (expression -> expression minus expression .)
    neq             reduce using rule 51 (expression -> expression minus expression .)
    and             reduce using rule 51 (expression -> expression minus expression .)
    or              reduce using rule 51 (expression -> expression minus expression .)
    terminator      reduce using rule 51 (expression -> expression minus expression .)
    rparen          reduce using rule 51 (expression -> expression minus expression .)
    function        reduce using rule 51 (expression -> expression minus expression .)
    print           reduce using rule 51 (expression -> expression minus expression .)
    println         reduce using rule 51 (expression -> expression minus expression .)
    while           reduce using rule 51 (expression -> expression minus expression .)
    for             reduce using rule 51 (expression -> expression minus expression .)
    struct          reduce using rule 51 (expression -> expression minus expression .)
    mutable         reduce using rule 51 (expression -> expression minus expression .)
    nothing         reduce using rule 51 (expression -> expression minus expression .)
    global          reduce using rule 51 (expression -> expression minus expression .)
    local           reduce using rule 51 (expression -> expression minus expression .)
    no              reduce using rule 51 (expression -> expression minus expression .)
    identifier      reduce using rule 51 (expression -> expression minus expression .)
    lsqbrack        reduce using rule 51 (expression -> expression minus expression .)
    valor_cadena    reduce using rule 51 (expression -> expression minus expression .)
    break           reduce using rule 51 (expression -> expression minus expression .)
    continue        reduce using rule 51 (expression -> expression minus expression .)
    return          reduce using rule 51 (expression -> expression minus expression .)
    lparen          reduce using rule 51 (expression -> expression minus expression .)
    if              reduce using rule 51 (expression -> expression minus expression .)
    valor_entero    reduce using rule 51 (expression -> expression minus expression .)
    valor_decimal   reduce using rule 51 (expression -> expression minus expression .)
    valor_caracter  reduce using rule 51 (expression -> expression minus expression .)
    verdadero       reduce using rule 51 (expression -> expression minus expression .)
    falso           reduce using rule 51 (expression -> expression minus expression .)
    Int64           reduce using rule 51 (expression -> expression minus expression .)
    Float64         reduce using rule 51 (expression -> expression minus expression .)
    Bool            reduce using rule 51 (expression -> expression minus expression .)
    Char            reduce using rule 51 (expression -> expression minus expression .)
    String          reduce using rule 51 (expression -> expression minus expression .)
    sin             reduce using rule 51 (expression -> expression minus expression .)
    cos             reduce using rule 51 (expression -> expression minus expression .)
    tan             reduce using rule 51 (expression -> expression minus expression .)
    sqrt            reduce using rule 51 (expression -> expression minus expression .)
    log10           reduce using rule 51 (expression -> expression minus expression .)
    uppercase       reduce using rule 51 (expression -> expression minus expression .)
    lowercase       reduce using rule 51 (expression -> expression minus expression .)
    trunc           reduce using rule 51 (expression -> expression minus expression .)
    float           reduce using rule 51 (expression -> expression minus expression .)
    string          reduce using rule 51 (expression -> expression minus expression .)
    typeof          reduce using rule 51 (expression -> expression minus expression .)
    length          reduce using rule 51 (expression -> expression minus expression .)
    log             reduce using rule 51 (expression -> expression minus expression .)
    parse           reduce using rule 51 (expression -> expression minus expression .)
    push            reduce using rule 51 (expression -> expression minus expression .)
    pop             reduce using rule 51 (expression -> expression minus expression .)
    end             reduce using rule 51 (expression -> expression minus expression .)
    rsqbrack        reduce using rule 51 (expression -> expression minus expression .)
    comma           reduce using rule 51 (expression -> expression minus expression .)
    elseif          reduce using rule 51 (expression -> expression minus expression .)
    else            reduce using rule 51 (expression -> expression minus expression .)
    twopoint        reduce using rule 51 (expression -> expression minus expression .)
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    point           shift and go to state 77

  ! mul             [ reduce using rule 51 (expression -> expression minus expression .) ]
  ! div             [ reduce using rule 51 (expression -> expression minus expression .) ]
  ! mod             [ reduce using rule 51 (expression -> expression minus expression .) ]
  ! exp             [ reduce using rule 51 (expression -> expression minus expression .) ]
  ! point           [ reduce using rule 51 (expression -> expression minus expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! plus            [ shift and go to state 63 ]
  ! minus           [ shift and go to state 64 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 113

    (52) expression -> expression mul expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 52 (expression -> expression mul expression .)
    definir         reduce using rule 52 (expression -> expression mul expression .)
    plus            reduce using rule 52 (expression -> expression mul expression .)
    minus           reduce using rule 52 (expression -> expression mul expression .)
    mul             reduce using rule 52 (expression -> expression mul expression .)
    div             reduce using rule 52 (expression -> expression mul expression .)
    mod             reduce using rule 52 (expression -> expression mul expression .)
    gte             reduce using rule 52 (expression -> expression mul expression .)
    lte             reduce using rule 52 (expression -> expression mul expression .)
    gt              reduce using rule 52 (expression -> expression mul expression .)
    lt              reduce using rule 52 (expression -> expression mul expression .)
    eq              reduce using rule 52 (expression -> expression mul expression .)
    neq             reduce using rule 52 (expression -> expression mul expression .)
    and             reduce using rule 52 (expression -> expression mul expression .)
    or              reduce using rule 52 (expression -> expression mul expression .)
    terminator      reduce using rule 52 (expression -> expression mul expression .)
    rparen          reduce using rule 52 (expression -> expression mul expression .)
    function        reduce using rule 52 (expression -> expression mul expression .)
    print           reduce using rule 52 (expression -> expression mul expression .)
    println         reduce using rule 52 (expression -> expression mul expression .)
    while           reduce using rule 52 (expression -> expression mul expression .)
    for             reduce using rule 52 (expression -> expression mul expression .)
    struct          reduce using rule 52 (expression -> expression mul expression .)
    mutable         reduce using rule 52 (expression -> expression mul expression .)
    nothing         reduce using rule 52 (expression -> expression mul expression .)
    global          reduce using rule 52 (expression -> expression mul expression .)
    local           reduce using rule 52 (expression -> expression mul expression .)
    no              reduce using rule 52 (expression -> expression mul expression .)
    identifier      reduce using rule 52 (expression -> expression mul expression .)
    lsqbrack        reduce using rule 52 (expression -> expression mul expression .)
    valor_cadena    reduce using rule 52 (expression -> expression mul expression .)
    break           reduce using rule 52 (expression -> expression mul expression .)
    continue        reduce using rule 52 (expression -> expression mul expression .)
    return          reduce using rule 52 (expression -> expression mul expression .)
    lparen          reduce using rule 52 (expression -> expression mul expression .)
    if              reduce using rule 52 (expression -> expression mul expression .)
    valor_entero    reduce using rule 52 (expression -> expression mul expression .)
    valor_decimal   reduce using rule 52 (expression -> expression mul expression .)
    valor_caracter  reduce using rule 52 (expression -> expression mul expression .)
    verdadero       reduce using rule 52 (expression -> expression mul expression .)
    falso           reduce using rule 52 (expression -> expression mul expression .)
    Int64           reduce using rule 52 (expression -> expression mul expression .)
    Float64         reduce using rule 52 (expression -> expression mul expression .)
    Bool            reduce using rule 52 (expression -> expression mul expression .)
    Char            reduce using rule 52 (expression -> expression mul expression .)
    String          reduce using rule 52 (expression -> expression mul expression .)
    sin             reduce using rule 52 (expression -> expression mul expression .)
    cos             reduce using rule 52 (expression -> expression mul expression .)
    tan             reduce using rule 52 (expression -> expression mul expression .)
    sqrt            reduce using rule 52 (expression -> expression mul expression .)
    log10           reduce using rule 52 (expression -> expression mul expression .)
    uppercase       reduce using rule 52 (expression -> expression mul expression .)
    lowercase       reduce using rule 52 (expression -> expression mul expression .)
    trunc           reduce using rule 52 (expression -> expression mul expression .)
    float           reduce using rule 52 (expression -> expression mul expression .)
    string          reduce using rule 52 (expression -> expression mul expression .)
    typeof          reduce using rule 52 (expression -> expression mul expression .)
    length          reduce using rule 52 (expression -> expression mul expression .)
    log             reduce using rule 52 (expression -> expression mul expression .)
    parse           reduce using rule 52 (expression -> expression mul expression .)
    push            reduce using rule 52 (expression -> expression mul expression .)
    pop             reduce using rule 52 (expression -> expression mul expression .)
    end             reduce using rule 52 (expression -> expression mul expression .)
    rsqbrack        reduce using rule 52 (expression -> expression mul expression .)
    comma           reduce using rule 52 (expression -> expression mul expression .)
    elseif          reduce using rule 52 (expression -> expression mul expression .)
    else            reduce using rule 52 (expression -> expression mul expression .)
    twopoint        reduce using rule 52 (expression -> expression mul expression .)
    exp             shift and go to state 68
    point           shift and go to state 77

  ! exp             [ reduce using rule 52 (expression -> expression mul expression .) ]
  ! point           [ reduce using rule 52 (expression -> expression mul expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! plus            [ shift and go to state 63 ]
  ! minus           [ shift and go to state 64 ]
  ! mul             [ shift and go to state 65 ]
  ! div             [ shift and go to state 66 ]
  ! mod             [ shift and go to state 67 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 114

    (53) expression -> expression div expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 53 (expression -> expression div expression .)
    definir         reduce using rule 53 (expression -> expression div expression .)
    plus            reduce using rule 53 (expression -> expression div expression .)
    minus           reduce using rule 53 (expression -> expression div expression .)
    mul             reduce using rule 53 (expression -> expression div expression .)
    div             reduce using rule 53 (expression -> expression div expression .)
    mod             reduce using rule 53 (expression -> expression div expression .)
    gte             reduce using rule 53 (expression -> expression div expression .)
    lte             reduce using rule 53 (expression -> expression div expression .)
    gt              reduce using rule 53 (expression -> expression div expression .)
    lt              reduce using rule 53 (expression -> expression div expression .)
    eq              reduce using rule 53 (expression -> expression div expression .)
    neq             reduce using rule 53 (expression -> expression div expression .)
    and             reduce using rule 53 (expression -> expression div expression .)
    or              reduce using rule 53 (expression -> expression div expression .)
    terminator      reduce using rule 53 (expression -> expression div expression .)
    rparen          reduce using rule 53 (expression -> expression div expression .)
    function        reduce using rule 53 (expression -> expression div expression .)
    print           reduce using rule 53 (expression -> expression div expression .)
    println         reduce using rule 53 (expression -> expression div expression .)
    while           reduce using rule 53 (expression -> expression div expression .)
    for             reduce using rule 53 (expression -> expression div expression .)
    struct          reduce using rule 53 (expression -> expression div expression .)
    mutable         reduce using rule 53 (expression -> expression div expression .)
    nothing         reduce using rule 53 (expression -> expression div expression .)
    global          reduce using rule 53 (expression -> expression div expression .)
    local           reduce using rule 53 (expression -> expression div expression .)
    no              reduce using rule 53 (expression -> expression div expression .)
    identifier      reduce using rule 53 (expression -> expression div expression .)
    lsqbrack        reduce using rule 53 (expression -> expression div expression .)
    valor_cadena    reduce using rule 53 (expression -> expression div expression .)
    break           reduce using rule 53 (expression -> expression div expression .)
    continue        reduce using rule 53 (expression -> expression div expression .)
    return          reduce using rule 53 (expression -> expression div expression .)
    lparen          reduce using rule 53 (expression -> expression div expression .)
    if              reduce using rule 53 (expression -> expression div expression .)
    valor_entero    reduce using rule 53 (expression -> expression div expression .)
    valor_decimal   reduce using rule 53 (expression -> expression div expression .)
    valor_caracter  reduce using rule 53 (expression -> expression div expression .)
    verdadero       reduce using rule 53 (expression -> expression div expression .)
    falso           reduce using rule 53 (expression -> expression div expression .)
    Int64           reduce using rule 53 (expression -> expression div expression .)
    Float64         reduce using rule 53 (expression -> expression div expression .)
    Bool            reduce using rule 53 (expression -> expression div expression .)
    Char            reduce using rule 53 (expression -> expression div expression .)
    String          reduce using rule 53 (expression -> expression div expression .)
    sin             reduce using rule 53 (expression -> expression div expression .)
    cos             reduce using rule 53 (expression -> expression div expression .)
    tan             reduce using rule 53 (expression -> expression div expression .)
    sqrt            reduce using rule 53 (expression -> expression div expression .)
    log10           reduce using rule 53 (expression -> expression div expression .)
    uppercase       reduce using rule 53 (expression -> expression div expression .)
    lowercase       reduce using rule 53 (expression -> expression div expression .)
    trunc           reduce using rule 53 (expression -> expression div expression .)
    float           reduce using rule 53 (expression -> expression div expression .)
    string          reduce using rule 53 (expression -> expression div expression .)
    typeof          reduce using rule 53 (expression -> expression div expression .)
    length          reduce using rule 53 (expression -> expression div expression .)
    log             reduce using rule 53 (expression -> expression div expression .)
    parse           reduce using rule 53 (expression -> expression div expression .)
    push            reduce using rule 53 (expression -> expression div expression .)
    pop             reduce using rule 53 (expression -> expression div expression .)
    end             reduce using rule 53 (expression -> expression div expression .)
    rsqbrack        reduce using rule 53 (expression -> expression div expression .)
    comma           reduce using rule 53 (expression -> expression div expression .)
    elseif          reduce using rule 53 (expression -> expression div expression .)
    else            reduce using rule 53 (expression -> expression div expression .)
    twopoint        reduce using rule 53 (expression -> expression div expression .)
    exp             shift and go to state 68
    point           shift and go to state 77

  ! exp             [ reduce using rule 53 (expression -> expression div expression .) ]
  ! point           [ reduce using rule 53 (expression -> expression div expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! plus            [ shift and go to state 63 ]
  ! minus           [ shift and go to state 64 ]
  ! mul             [ shift and go to state 65 ]
  ! div             [ shift and go to state 66 ]
  ! mod             [ shift and go to state 67 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 115

    (54) expression -> expression mod expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 54 (expression -> expression mod expression .)
    definir         reduce using rule 54 (expression -> expression mod expression .)
    plus            reduce using rule 54 (expression -> expression mod expression .)
    minus           reduce using rule 54 (expression -> expression mod expression .)
    mul             reduce using rule 54 (expression -> expression mod expression .)
    div             reduce using rule 54 (expression -> expression mod expression .)
    mod             reduce using rule 54 (expression -> expression mod expression .)
    gte             reduce using rule 54 (expression -> expression mod expression .)
    lte             reduce using rule 54 (expression -> expression mod expression .)
    gt              reduce using rule 54 (expression -> expression mod expression .)
    lt              reduce using rule 54 (expression -> expression mod expression .)
    eq              reduce using rule 54 (expression -> expression mod expression .)
    neq             reduce using rule 54 (expression -> expression mod expression .)
    and             reduce using rule 54 (expression -> expression mod expression .)
    or              reduce using rule 54 (expression -> expression mod expression .)
    terminator      reduce using rule 54 (expression -> expression mod expression .)
    rparen          reduce using rule 54 (expression -> expression mod expression .)
    function        reduce using rule 54 (expression -> expression mod expression .)
    print           reduce using rule 54 (expression -> expression mod expression .)
    println         reduce using rule 54 (expression -> expression mod expression .)
    while           reduce using rule 54 (expression -> expression mod expression .)
    for             reduce using rule 54 (expression -> expression mod expression .)
    struct          reduce using rule 54 (expression -> expression mod expression .)
    mutable         reduce using rule 54 (expression -> expression mod expression .)
    nothing         reduce using rule 54 (expression -> expression mod expression .)
    global          reduce using rule 54 (expression -> expression mod expression .)
    local           reduce using rule 54 (expression -> expression mod expression .)
    no              reduce using rule 54 (expression -> expression mod expression .)
    identifier      reduce using rule 54 (expression -> expression mod expression .)
    lsqbrack        reduce using rule 54 (expression -> expression mod expression .)
    valor_cadena    reduce using rule 54 (expression -> expression mod expression .)
    break           reduce using rule 54 (expression -> expression mod expression .)
    continue        reduce using rule 54 (expression -> expression mod expression .)
    return          reduce using rule 54 (expression -> expression mod expression .)
    lparen          reduce using rule 54 (expression -> expression mod expression .)
    if              reduce using rule 54 (expression -> expression mod expression .)
    valor_entero    reduce using rule 54 (expression -> expression mod expression .)
    valor_decimal   reduce using rule 54 (expression -> expression mod expression .)
    valor_caracter  reduce using rule 54 (expression -> expression mod expression .)
    verdadero       reduce using rule 54 (expression -> expression mod expression .)
    falso           reduce using rule 54 (expression -> expression mod expression .)
    Int64           reduce using rule 54 (expression -> expression mod expression .)
    Float64         reduce using rule 54 (expression -> expression mod expression .)
    Bool            reduce using rule 54 (expression -> expression mod expression .)
    Char            reduce using rule 54 (expression -> expression mod expression .)
    String          reduce using rule 54 (expression -> expression mod expression .)
    sin             reduce using rule 54 (expression -> expression mod expression .)
    cos             reduce using rule 54 (expression -> expression mod expression .)
    tan             reduce using rule 54 (expression -> expression mod expression .)
    sqrt            reduce using rule 54 (expression -> expression mod expression .)
    log10           reduce using rule 54 (expression -> expression mod expression .)
    uppercase       reduce using rule 54 (expression -> expression mod expression .)
    lowercase       reduce using rule 54 (expression -> expression mod expression .)
    trunc           reduce using rule 54 (expression -> expression mod expression .)
    float           reduce using rule 54 (expression -> expression mod expression .)
    string          reduce using rule 54 (expression -> expression mod expression .)
    typeof          reduce using rule 54 (expression -> expression mod expression .)
    length          reduce using rule 54 (expression -> expression mod expression .)
    log             reduce using rule 54 (expression -> expression mod expression .)
    parse           reduce using rule 54 (expression -> expression mod expression .)
    push            reduce using rule 54 (expression -> expression mod expression .)
    pop             reduce using rule 54 (expression -> expression mod expression .)
    end             reduce using rule 54 (expression -> expression mod expression .)
    rsqbrack        reduce using rule 54 (expression -> expression mod expression .)
    comma           reduce using rule 54 (expression -> expression mod expression .)
    elseif          reduce using rule 54 (expression -> expression mod expression .)
    else            reduce using rule 54 (expression -> expression mod expression .)
    twopoint        reduce using rule 54 (expression -> expression mod expression .)
    exp             shift and go to state 68
    point           shift and go to state 77

  ! exp             [ reduce using rule 54 (expression -> expression mod expression .) ]
  ! point           [ reduce using rule 54 (expression -> expression mod expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! plus            [ shift and go to state 63 ]
  ! minus           [ shift and go to state 64 ]
  ! mul             [ shift and go to state 65 ]
  ! div             [ shift and go to state 66 ]
  ! mod             [ shift and go to state 67 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 116

    (55) expression -> expression exp expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 55 (expression -> expression exp expression .)
    definir         reduce using rule 55 (expression -> expression exp expression .)
    plus            reduce using rule 55 (expression -> expression exp expression .)
    minus           reduce using rule 55 (expression -> expression exp expression .)
    mul             reduce using rule 55 (expression -> expression exp expression .)
    div             reduce using rule 55 (expression -> expression exp expression .)
    mod             reduce using rule 55 (expression -> expression exp expression .)
    gte             reduce using rule 55 (expression -> expression exp expression .)
    lte             reduce using rule 55 (expression -> expression exp expression .)
    gt              reduce using rule 55 (expression -> expression exp expression .)
    lt              reduce using rule 55 (expression -> expression exp expression .)
    eq              reduce using rule 55 (expression -> expression exp expression .)
    neq             reduce using rule 55 (expression -> expression exp expression .)
    and             reduce using rule 55 (expression -> expression exp expression .)
    or              reduce using rule 55 (expression -> expression exp expression .)
    terminator      reduce using rule 55 (expression -> expression exp expression .)
    rparen          reduce using rule 55 (expression -> expression exp expression .)
    function        reduce using rule 55 (expression -> expression exp expression .)
    print           reduce using rule 55 (expression -> expression exp expression .)
    println         reduce using rule 55 (expression -> expression exp expression .)
    while           reduce using rule 55 (expression -> expression exp expression .)
    for             reduce using rule 55 (expression -> expression exp expression .)
    struct          reduce using rule 55 (expression -> expression exp expression .)
    mutable         reduce using rule 55 (expression -> expression exp expression .)
    nothing         reduce using rule 55 (expression -> expression exp expression .)
    global          reduce using rule 55 (expression -> expression exp expression .)
    local           reduce using rule 55 (expression -> expression exp expression .)
    no              reduce using rule 55 (expression -> expression exp expression .)
    identifier      reduce using rule 55 (expression -> expression exp expression .)
    lsqbrack        reduce using rule 55 (expression -> expression exp expression .)
    valor_cadena    reduce using rule 55 (expression -> expression exp expression .)
    break           reduce using rule 55 (expression -> expression exp expression .)
    continue        reduce using rule 55 (expression -> expression exp expression .)
    return          reduce using rule 55 (expression -> expression exp expression .)
    lparen          reduce using rule 55 (expression -> expression exp expression .)
    if              reduce using rule 55 (expression -> expression exp expression .)
    valor_entero    reduce using rule 55 (expression -> expression exp expression .)
    valor_decimal   reduce using rule 55 (expression -> expression exp expression .)
    valor_caracter  reduce using rule 55 (expression -> expression exp expression .)
    verdadero       reduce using rule 55 (expression -> expression exp expression .)
    falso           reduce using rule 55 (expression -> expression exp expression .)
    Int64           reduce using rule 55 (expression -> expression exp expression .)
    Float64         reduce using rule 55 (expression -> expression exp expression .)
    Bool            reduce using rule 55 (expression -> expression exp expression .)
    Char            reduce using rule 55 (expression -> expression exp expression .)
    String          reduce using rule 55 (expression -> expression exp expression .)
    sin             reduce using rule 55 (expression -> expression exp expression .)
    cos             reduce using rule 55 (expression -> expression exp expression .)
    tan             reduce using rule 55 (expression -> expression exp expression .)
    sqrt            reduce using rule 55 (expression -> expression exp expression .)
    log10           reduce using rule 55 (expression -> expression exp expression .)
    uppercase       reduce using rule 55 (expression -> expression exp expression .)
    lowercase       reduce using rule 55 (expression -> expression exp expression .)
    trunc           reduce using rule 55 (expression -> expression exp expression .)
    float           reduce using rule 55 (expression -> expression exp expression .)
    string          reduce using rule 55 (expression -> expression exp expression .)
    typeof          reduce using rule 55 (expression -> expression exp expression .)
    length          reduce using rule 55 (expression -> expression exp expression .)
    log             reduce using rule 55 (expression -> expression exp expression .)
    parse           reduce using rule 55 (expression -> expression exp expression .)
    push            reduce using rule 55 (expression -> expression exp expression .)
    pop             reduce using rule 55 (expression -> expression exp expression .)
    end             reduce using rule 55 (expression -> expression exp expression .)
    rsqbrack        reduce using rule 55 (expression -> expression exp expression .)
    comma           reduce using rule 55 (expression -> expression exp expression .)
    elseif          reduce using rule 55 (expression -> expression exp expression .)
    else            reduce using rule 55 (expression -> expression exp expression .)
    twopoint        reduce using rule 55 (expression -> expression exp expression .)
    exp             shift and go to state 68
    point           shift and go to state 77

  ! exp             [ reduce using rule 55 (expression -> expression exp expression .) ]
  ! point           [ reduce using rule 55 (expression -> expression exp expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! plus            [ shift and go to state 63 ]
  ! minus           [ shift and go to state 64 ]
  ! mul             [ shift and go to state 65 ]
  ! div             [ shift and go to state 66 ]
  ! mod             [ shift and go to state 67 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 117

    (58) expression -> expression gte expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 58 (expression -> expression gte expression .)
    definir         reduce using rule 58 (expression -> expression gte expression .)
    gte             reduce using rule 58 (expression -> expression gte expression .)
    lte             reduce using rule 58 (expression -> expression gte expression .)
    gt              reduce using rule 58 (expression -> expression gte expression .)
    lt              reduce using rule 58 (expression -> expression gte expression .)
    eq              reduce using rule 58 (expression -> expression gte expression .)
    neq             reduce using rule 58 (expression -> expression gte expression .)
    and             reduce using rule 58 (expression -> expression gte expression .)
    or              reduce using rule 58 (expression -> expression gte expression .)
    terminator      reduce using rule 58 (expression -> expression gte expression .)
    rparen          reduce using rule 58 (expression -> expression gte expression .)
    function        reduce using rule 58 (expression -> expression gte expression .)
    print           reduce using rule 58 (expression -> expression gte expression .)
    println         reduce using rule 58 (expression -> expression gte expression .)
    while           reduce using rule 58 (expression -> expression gte expression .)
    for             reduce using rule 58 (expression -> expression gte expression .)
    struct          reduce using rule 58 (expression -> expression gte expression .)
    mutable         reduce using rule 58 (expression -> expression gte expression .)
    nothing         reduce using rule 58 (expression -> expression gte expression .)
    global          reduce using rule 58 (expression -> expression gte expression .)
    local           reduce using rule 58 (expression -> expression gte expression .)
    no              reduce using rule 58 (expression -> expression gte expression .)
    identifier      reduce using rule 58 (expression -> expression gte expression .)
    lsqbrack        reduce using rule 58 (expression -> expression gte expression .)
    valor_cadena    reduce using rule 58 (expression -> expression gte expression .)
    break           reduce using rule 58 (expression -> expression gte expression .)
    continue        reduce using rule 58 (expression -> expression gte expression .)
    return          reduce using rule 58 (expression -> expression gte expression .)
    lparen          reduce using rule 58 (expression -> expression gte expression .)
    if              reduce using rule 58 (expression -> expression gte expression .)
    valor_entero    reduce using rule 58 (expression -> expression gte expression .)
    valor_decimal   reduce using rule 58 (expression -> expression gte expression .)
    valor_caracter  reduce using rule 58 (expression -> expression gte expression .)
    verdadero       reduce using rule 58 (expression -> expression gte expression .)
    falso           reduce using rule 58 (expression -> expression gte expression .)
    Int64           reduce using rule 58 (expression -> expression gte expression .)
    Float64         reduce using rule 58 (expression -> expression gte expression .)
    Bool            reduce using rule 58 (expression -> expression gte expression .)
    Char            reduce using rule 58 (expression -> expression gte expression .)
    String          reduce using rule 58 (expression -> expression gte expression .)
    sin             reduce using rule 58 (expression -> expression gte expression .)
    cos             reduce using rule 58 (expression -> expression gte expression .)
    tan             reduce using rule 58 (expression -> expression gte expression .)
    sqrt            reduce using rule 58 (expression -> expression gte expression .)
    log10           reduce using rule 58 (expression -> expression gte expression .)
    uppercase       reduce using rule 58 (expression -> expression gte expression .)
    lowercase       reduce using rule 58 (expression -> expression gte expression .)
    trunc           reduce using rule 58 (expression -> expression gte expression .)
    float           reduce using rule 58 (expression -> expression gte expression .)
    string          reduce using rule 58 (expression -> expression gte expression .)
    typeof          reduce using rule 58 (expression -> expression gte expression .)
    length          reduce using rule 58 (expression -> expression gte expression .)
    log             reduce using rule 58 (expression -> expression gte expression .)
    parse           reduce using rule 58 (expression -> expression gte expression .)
    push            reduce using rule 58 (expression -> expression gte expression .)
    pop             reduce using rule 58 (expression -> expression gte expression .)
    end             reduce using rule 58 (expression -> expression gte expression .)
    rsqbrack        reduce using rule 58 (expression -> expression gte expression .)
    comma           reduce using rule 58 (expression -> expression gte expression .)
    elseif          reduce using rule 58 (expression -> expression gte expression .)
    else            reduce using rule 58 (expression -> expression gte expression .)
    twopoint        reduce using rule 58 (expression -> expression gte expression .)
    plus            shift and go to state 63
    minus           shift and go to state 64
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    point           shift and go to state 77

  ! plus            [ reduce using rule 58 (expression -> expression gte expression .) ]
  ! minus           [ reduce using rule 58 (expression -> expression gte expression .) ]
  ! mul             [ reduce using rule 58 (expression -> expression gte expression .) ]
  ! div             [ reduce using rule 58 (expression -> expression gte expression .) ]
  ! mod             [ reduce using rule 58 (expression -> expression gte expression .) ]
  ! exp             [ reduce using rule 58 (expression -> expression gte expression .) ]
  ! point           [ reduce using rule 58 (expression -> expression gte expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 118

    (59) expression -> expression lte expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 59 (expression -> expression lte expression .)
    definir         reduce using rule 59 (expression -> expression lte expression .)
    gte             reduce using rule 59 (expression -> expression lte expression .)
    lte             reduce using rule 59 (expression -> expression lte expression .)
    gt              reduce using rule 59 (expression -> expression lte expression .)
    lt              reduce using rule 59 (expression -> expression lte expression .)
    eq              reduce using rule 59 (expression -> expression lte expression .)
    neq             reduce using rule 59 (expression -> expression lte expression .)
    and             reduce using rule 59 (expression -> expression lte expression .)
    or              reduce using rule 59 (expression -> expression lte expression .)
    terminator      reduce using rule 59 (expression -> expression lte expression .)
    rparen          reduce using rule 59 (expression -> expression lte expression .)
    function        reduce using rule 59 (expression -> expression lte expression .)
    print           reduce using rule 59 (expression -> expression lte expression .)
    println         reduce using rule 59 (expression -> expression lte expression .)
    while           reduce using rule 59 (expression -> expression lte expression .)
    for             reduce using rule 59 (expression -> expression lte expression .)
    struct          reduce using rule 59 (expression -> expression lte expression .)
    mutable         reduce using rule 59 (expression -> expression lte expression .)
    nothing         reduce using rule 59 (expression -> expression lte expression .)
    global          reduce using rule 59 (expression -> expression lte expression .)
    local           reduce using rule 59 (expression -> expression lte expression .)
    no              reduce using rule 59 (expression -> expression lte expression .)
    identifier      reduce using rule 59 (expression -> expression lte expression .)
    lsqbrack        reduce using rule 59 (expression -> expression lte expression .)
    valor_cadena    reduce using rule 59 (expression -> expression lte expression .)
    break           reduce using rule 59 (expression -> expression lte expression .)
    continue        reduce using rule 59 (expression -> expression lte expression .)
    return          reduce using rule 59 (expression -> expression lte expression .)
    lparen          reduce using rule 59 (expression -> expression lte expression .)
    if              reduce using rule 59 (expression -> expression lte expression .)
    valor_entero    reduce using rule 59 (expression -> expression lte expression .)
    valor_decimal   reduce using rule 59 (expression -> expression lte expression .)
    valor_caracter  reduce using rule 59 (expression -> expression lte expression .)
    verdadero       reduce using rule 59 (expression -> expression lte expression .)
    falso           reduce using rule 59 (expression -> expression lte expression .)
    Int64           reduce using rule 59 (expression -> expression lte expression .)
    Float64         reduce using rule 59 (expression -> expression lte expression .)
    Bool            reduce using rule 59 (expression -> expression lte expression .)
    Char            reduce using rule 59 (expression -> expression lte expression .)
    String          reduce using rule 59 (expression -> expression lte expression .)
    sin             reduce using rule 59 (expression -> expression lte expression .)
    cos             reduce using rule 59 (expression -> expression lte expression .)
    tan             reduce using rule 59 (expression -> expression lte expression .)
    sqrt            reduce using rule 59 (expression -> expression lte expression .)
    log10           reduce using rule 59 (expression -> expression lte expression .)
    uppercase       reduce using rule 59 (expression -> expression lte expression .)
    lowercase       reduce using rule 59 (expression -> expression lte expression .)
    trunc           reduce using rule 59 (expression -> expression lte expression .)
    float           reduce using rule 59 (expression -> expression lte expression .)
    string          reduce using rule 59 (expression -> expression lte expression .)
    typeof          reduce using rule 59 (expression -> expression lte expression .)
    length          reduce using rule 59 (expression -> expression lte expression .)
    log             reduce using rule 59 (expression -> expression lte expression .)
    parse           reduce using rule 59 (expression -> expression lte expression .)
    push            reduce using rule 59 (expression -> expression lte expression .)
    pop             reduce using rule 59 (expression -> expression lte expression .)
    end             reduce using rule 59 (expression -> expression lte expression .)
    rsqbrack        reduce using rule 59 (expression -> expression lte expression .)
    comma           reduce using rule 59 (expression -> expression lte expression .)
    elseif          reduce using rule 59 (expression -> expression lte expression .)
    else            reduce using rule 59 (expression -> expression lte expression .)
    twopoint        reduce using rule 59 (expression -> expression lte expression .)
    plus            shift and go to state 63
    minus           shift and go to state 64
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    point           shift and go to state 77

  ! plus            [ reduce using rule 59 (expression -> expression lte expression .) ]
  ! minus           [ reduce using rule 59 (expression -> expression lte expression .) ]
  ! mul             [ reduce using rule 59 (expression -> expression lte expression .) ]
  ! div             [ reduce using rule 59 (expression -> expression lte expression .) ]
  ! mod             [ reduce using rule 59 (expression -> expression lte expression .) ]
  ! exp             [ reduce using rule 59 (expression -> expression lte expression .) ]
  ! point           [ reduce using rule 59 (expression -> expression lte expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 119

    (60) expression -> expression gt expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 60 (expression -> expression gt expression .)
    definir         reduce using rule 60 (expression -> expression gt expression .)
    gte             reduce using rule 60 (expression -> expression gt expression .)
    lte             reduce using rule 60 (expression -> expression gt expression .)
    gt              reduce using rule 60 (expression -> expression gt expression .)
    lt              reduce using rule 60 (expression -> expression gt expression .)
    eq              reduce using rule 60 (expression -> expression gt expression .)
    neq             reduce using rule 60 (expression -> expression gt expression .)
    and             reduce using rule 60 (expression -> expression gt expression .)
    or              reduce using rule 60 (expression -> expression gt expression .)
    terminator      reduce using rule 60 (expression -> expression gt expression .)
    rparen          reduce using rule 60 (expression -> expression gt expression .)
    function        reduce using rule 60 (expression -> expression gt expression .)
    print           reduce using rule 60 (expression -> expression gt expression .)
    println         reduce using rule 60 (expression -> expression gt expression .)
    while           reduce using rule 60 (expression -> expression gt expression .)
    for             reduce using rule 60 (expression -> expression gt expression .)
    struct          reduce using rule 60 (expression -> expression gt expression .)
    mutable         reduce using rule 60 (expression -> expression gt expression .)
    nothing         reduce using rule 60 (expression -> expression gt expression .)
    global          reduce using rule 60 (expression -> expression gt expression .)
    local           reduce using rule 60 (expression -> expression gt expression .)
    no              reduce using rule 60 (expression -> expression gt expression .)
    identifier      reduce using rule 60 (expression -> expression gt expression .)
    lsqbrack        reduce using rule 60 (expression -> expression gt expression .)
    valor_cadena    reduce using rule 60 (expression -> expression gt expression .)
    break           reduce using rule 60 (expression -> expression gt expression .)
    continue        reduce using rule 60 (expression -> expression gt expression .)
    return          reduce using rule 60 (expression -> expression gt expression .)
    lparen          reduce using rule 60 (expression -> expression gt expression .)
    if              reduce using rule 60 (expression -> expression gt expression .)
    valor_entero    reduce using rule 60 (expression -> expression gt expression .)
    valor_decimal   reduce using rule 60 (expression -> expression gt expression .)
    valor_caracter  reduce using rule 60 (expression -> expression gt expression .)
    verdadero       reduce using rule 60 (expression -> expression gt expression .)
    falso           reduce using rule 60 (expression -> expression gt expression .)
    Int64           reduce using rule 60 (expression -> expression gt expression .)
    Float64         reduce using rule 60 (expression -> expression gt expression .)
    Bool            reduce using rule 60 (expression -> expression gt expression .)
    Char            reduce using rule 60 (expression -> expression gt expression .)
    String          reduce using rule 60 (expression -> expression gt expression .)
    sin             reduce using rule 60 (expression -> expression gt expression .)
    cos             reduce using rule 60 (expression -> expression gt expression .)
    tan             reduce using rule 60 (expression -> expression gt expression .)
    sqrt            reduce using rule 60 (expression -> expression gt expression .)
    log10           reduce using rule 60 (expression -> expression gt expression .)
    uppercase       reduce using rule 60 (expression -> expression gt expression .)
    lowercase       reduce using rule 60 (expression -> expression gt expression .)
    trunc           reduce using rule 60 (expression -> expression gt expression .)
    float           reduce using rule 60 (expression -> expression gt expression .)
    string          reduce using rule 60 (expression -> expression gt expression .)
    typeof          reduce using rule 60 (expression -> expression gt expression .)
    length          reduce using rule 60 (expression -> expression gt expression .)
    log             reduce using rule 60 (expression -> expression gt expression .)
    parse           reduce using rule 60 (expression -> expression gt expression .)
    push            reduce using rule 60 (expression -> expression gt expression .)
    pop             reduce using rule 60 (expression -> expression gt expression .)
    end             reduce using rule 60 (expression -> expression gt expression .)
    rsqbrack        reduce using rule 60 (expression -> expression gt expression .)
    comma           reduce using rule 60 (expression -> expression gt expression .)
    elseif          reduce using rule 60 (expression -> expression gt expression .)
    else            reduce using rule 60 (expression -> expression gt expression .)
    twopoint        reduce using rule 60 (expression -> expression gt expression .)
    plus            shift and go to state 63
    minus           shift and go to state 64
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    point           shift and go to state 77

  ! plus            [ reduce using rule 60 (expression -> expression gt expression .) ]
  ! minus           [ reduce using rule 60 (expression -> expression gt expression .) ]
  ! mul             [ reduce using rule 60 (expression -> expression gt expression .) ]
  ! div             [ reduce using rule 60 (expression -> expression gt expression .) ]
  ! mod             [ reduce using rule 60 (expression -> expression gt expression .) ]
  ! exp             [ reduce using rule 60 (expression -> expression gt expression .) ]
  ! point           [ reduce using rule 60 (expression -> expression gt expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 120

    (61) expression -> expression lt expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 61 (expression -> expression lt expression .)
    definir         reduce using rule 61 (expression -> expression lt expression .)
    gte             reduce using rule 61 (expression -> expression lt expression .)
    lte             reduce using rule 61 (expression -> expression lt expression .)
    gt              reduce using rule 61 (expression -> expression lt expression .)
    lt              reduce using rule 61 (expression -> expression lt expression .)
    eq              reduce using rule 61 (expression -> expression lt expression .)
    neq             reduce using rule 61 (expression -> expression lt expression .)
    and             reduce using rule 61 (expression -> expression lt expression .)
    or              reduce using rule 61 (expression -> expression lt expression .)
    terminator      reduce using rule 61 (expression -> expression lt expression .)
    rparen          reduce using rule 61 (expression -> expression lt expression .)
    function        reduce using rule 61 (expression -> expression lt expression .)
    print           reduce using rule 61 (expression -> expression lt expression .)
    println         reduce using rule 61 (expression -> expression lt expression .)
    while           reduce using rule 61 (expression -> expression lt expression .)
    for             reduce using rule 61 (expression -> expression lt expression .)
    struct          reduce using rule 61 (expression -> expression lt expression .)
    mutable         reduce using rule 61 (expression -> expression lt expression .)
    nothing         reduce using rule 61 (expression -> expression lt expression .)
    global          reduce using rule 61 (expression -> expression lt expression .)
    local           reduce using rule 61 (expression -> expression lt expression .)
    no              reduce using rule 61 (expression -> expression lt expression .)
    identifier      reduce using rule 61 (expression -> expression lt expression .)
    lsqbrack        reduce using rule 61 (expression -> expression lt expression .)
    valor_cadena    reduce using rule 61 (expression -> expression lt expression .)
    break           reduce using rule 61 (expression -> expression lt expression .)
    continue        reduce using rule 61 (expression -> expression lt expression .)
    return          reduce using rule 61 (expression -> expression lt expression .)
    lparen          reduce using rule 61 (expression -> expression lt expression .)
    if              reduce using rule 61 (expression -> expression lt expression .)
    valor_entero    reduce using rule 61 (expression -> expression lt expression .)
    valor_decimal   reduce using rule 61 (expression -> expression lt expression .)
    valor_caracter  reduce using rule 61 (expression -> expression lt expression .)
    verdadero       reduce using rule 61 (expression -> expression lt expression .)
    falso           reduce using rule 61 (expression -> expression lt expression .)
    Int64           reduce using rule 61 (expression -> expression lt expression .)
    Float64         reduce using rule 61 (expression -> expression lt expression .)
    Bool            reduce using rule 61 (expression -> expression lt expression .)
    Char            reduce using rule 61 (expression -> expression lt expression .)
    String          reduce using rule 61 (expression -> expression lt expression .)
    sin             reduce using rule 61 (expression -> expression lt expression .)
    cos             reduce using rule 61 (expression -> expression lt expression .)
    tan             reduce using rule 61 (expression -> expression lt expression .)
    sqrt            reduce using rule 61 (expression -> expression lt expression .)
    log10           reduce using rule 61 (expression -> expression lt expression .)
    uppercase       reduce using rule 61 (expression -> expression lt expression .)
    lowercase       reduce using rule 61 (expression -> expression lt expression .)
    trunc           reduce using rule 61 (expression -> expression lt expression .)
    float           reduce using rule 61 (expression -> expression lt expression .)
    string          reduce using rule 61 (expression -> expression lt expression .)
    typeof          reduce using rule 61 (expression -> expression lt expression .)
    length          reduce using rule 61 (expression -> expression lt expression .)
    log             reduce using rule 61 (expression -> expression lt expression .)
    parse           reduce using rule 61 (expression -> expression lt expression .)
    push            reduce using rule 61 (expression -> expression lt expression .)
    pop             reduce using rule 61 (expression -> expression lt expression .)
    end             reduce using rule 61 (expression -> expression lt expression .)
    rsqbrack        reduce using rule 61 (expression -> expression lt expression .)
    comma           reduce using rule 61 (expression -> expression lt expression .)
    elseif          reduce using rule 61 (expression -> expression lt expression .)
    else            reduce using rule 61 (expression -> expression lt expression .)
    twopoint        reduce using rule 61 (expression -> expression lt expression .)
    plus            shift and go to state 63
    minus           shift and go to state 64
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    point           shift and go to state 77

  ! plus            [ reduce using rule 61 (expression -> expression lt expression .) ]
  ! minus           [ reduce using rule 61 (expression -> expression lt expression .) ]
  ! mul             [ reduce using rule 61 (expression -> expression lt expression .) ]
  ! div             [ reduce using rule 61 (expression -> expression lt expression .) ]
  ! mod             [ reduce using rule 61 (expression -> expression lt expression .) ]
  ! exp             [ reduce using rule 61 (expression -> expression lt expression .) ]
  ! point           [ reduce using rule 61 (expression -> expression lt expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 121

    (62) expression -> expression eq expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 62 (expression -> expression eq expression .)
    definir         reduce using rule 62 (expression -> expression eq expression .)
    eq              reduce using rule 62 (expression -> expression eq expression .)
    neq             reduce using rule 62 (expression -> expression eq expression .)
    and             reduce using rule 62 (expression -> expression eq expression .)
    or              reduce using rule 62 (expression -> expression eq expression .)
    terminator      reduce using rule 62 (expression -> expression eq expression .)
    rparen          reduce using rule 62 (expression -> expression eq expression .)
    function        reduce using rule 62 (expression -> expression eq expression .)
    print           reduce using rule 62 (expression -> expression eq expression .)
    println         reduce using rule 62 (expression -> expression eq expression .)
    while           reduce using rule 62 (expression -> expression eq expression .)
    for             reduce using rule 62 (expression -> expression eq expression .)
    struct          reduce using rule 62 (expression -> expression eq expression .)
    mutable         reduce using rule 62 (expression -> expression eq expression .)
    nothing         reduce using rule 62 (expression -> expression eq expression .)
    global          reduce using rule 62 (expression -> expression eq expression .)
    local           reduce using rule 62 (expression -> expression eq expression .)
    no              reduce using rule 62 (expression -> expression eq expression .)
    identifier      reduce using rule 62 (expression -> expression eq expression .)
    lsqbrack        reduce using rule 62 (expression -> expression eq expression .)
    valor_cadena    reduce using rule 62 (expression -> expression eq expression .)
    break           reduce using rule 62 (expression -> expression eq expression .)
    continue        reduce using rule 62 (expression -> expression eq expression .)
    return          reduce using rule 62 (expression -> expression eq expression .)
    lparen          reduce using rule 62 (expression -> expression eq expression .)
    if              reduce using rule 62 (expression -> expression eq expression .)
    valor_entero    reduce using rule 62 (expression -> expression eq expression .)
    valor_decimal   reduce using rule 62 (expression -> expression eq expression .)
    valor_caracter  reduce using rule 62 (expression -> expression eq expression .)
    verdadero       reduce using rule 62 (expression -> expression eq expression .)
    falso           reduce using rule 62 (expression -> expression eq expression .)
    Int64           reduce using rule 62 (expression -> expression eq expression .)
    Float64         reduce using rule 62 (expression -> expression eq expression .)
    Bool            reduce using rule 62 (expression -> expression eq expression .)
    Char            reduce using rule 62 (expression -> expression eq expression .)
    String          reduce using rule 62 (expression -> expression eq expression .)
    sin             reduce using rule 62 (expression -> expression eq expression .)
    cos             reduce using rule 62 (expression -> expression eq expression .)
    tan             reduce using rule 62 (expression -> expression eq expression .)
    sqrt            reduce using rule 62 (expression -> expression eq expression .)
    log10           reduce using rule 62 (expression -> expression eq expression .)
    uppercase       reduce using rule 62 (expression -> expression eq expression .)
    lowercase       reduce using rule 62 (expression -> expression eq expression .)
    trunc           reduce using rule 62 (expression -> expression eq expression .)
    float           reduce using rule 62 (expression -> expression eq expression .)
    string          reduce using rule 62 (expression -> expression eq expression .)
    typeof          reduce using rule 62 (expression -> expression eq expression .)
    length          reduce using rule 62 (expression -> expression eq expression .)
    log             reduce using rule 62 (expression -> expression eq expression .)
    parse           reduce using rule 62 (expression -> expression eq expression .)
    push            reduce using rule 62 (expression -> expression eq expression .)
    pop             reduce using rule 62 (expression -> expression eq expression .)
    end             reduce using rule 62 (expression -> expression eq expression .)
    rsqbrack        reduce using rule 62 (expression -> expression eq expression .)
    comma           reduce using rule 62 (expression -> expression eq expression .)
    elseif          reduce using rule 62 (expression -> expression eq expression .)
    else            reduce using rule 62 (expression -> expression eq expression .)
    twopoint        reduce using rule 62 (expression -> expression eq expression .)
    plus            shift and go to state 63
    minus           shift and go to state 64
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    point           shift and go to state 77

  ! plus            [ reduce using rule 62 (expression -> expression eq expression .) ]
  ! minus           [ reduce using rule 62 (expression -> expression eq expression .) ]
  ! mul             [ reduce using rule 62 (expression -> expression eq expression .) ]
  ! div             [ reduce using rule 62 (expression -> expression eq expression .) ]
  ! mod             [ reduce using rule 62 (expression -> expression eq expression .) ]
  ! exp             [ reduce using rule 62 (expression -> expression eq expression .) ]
  ! gte             [ reduce using rule 62 (expression -> expression eq expression .) ]
  ! lte             [ reduce using rule 62 (expression -> expression eq expression .) ]
  ! gt              [ reduce using rule 62 (expression -> expression eq expression .) ]
  ! lt              [ reduce using rule 62 (expression -> expression eq expression .) ]
  ! point           [ reduce using rule 62 (expression -> expression eq expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 122

    (63) expression -> expression neq expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 63 (expression -> expression neq expression .)
    definir         reduce using rule 63 (expression -> expression neq expression .)
    eq              reduce using rule 63 (expression -> expression neq expression .)
    neq             reduce using rule 63 (expression -> expression neq expression .)
    and             reduce using rule 63 (expression -> expression neq expression .)
    or              reduce using rule 63 (expression -> expression neq expression .)
    terminator      reduce using rule 63 (expression -> expression neq expression .)
    rparen          reduce using rule 63 (expression -> expression neq expression .)
    function        reduce using rule 63 (expression -> expression neq expression .)
    print           reduce using rule 63 (expression -> expression neq expression .)
    println         reduce using rule 63 (expression -> expression neq expression .)
    while           reduce using rule 63 (expression -> expression neq expression .)
    for             reduce using rule 63 (expression -> expression neq expression .)
    struct          reduce using rule 63 (expression -> expression neq expression .)
    mutable         reduce using rule 63 (expression -> expression neq expression .)
    nothing         reduce using rule 63 (expression -> expression neq expression .)
    global          reduce using rule 63 (expression -> expression neq expression .)
    local           reduce using rule 63 (expression -> expression neq expression .)
    no              reduce using rule 63 (expression -> expression neq expression .)
    identifier      reduce using rule 63 (expression -> expression neq expression .)
    lsqbrack        reduce using rule 63 (expression -> expression neq expression .)
    valor_cadena    reduce using rule 63 (expression -> expression neq expression .)
    break           reduce using rule 63 (expression -> expression neq expression .)
    continue        reduce using rule 63 (expression -> expression neq expression .)
    return          reduce using rule 63 (expression -> expression neq expression .)
    lparen          reduce using rule 63 (expression -> expression neq expression .)
    if              reduce using rule 63 (expression -> expression neq expression .)
    valor_entero    reduce using rule 63 (expression -> expression neq expression .)
    valor_decimal   reduce using rule 63 (expression -> expression neq expression .)
    valor_caracter  reduce using rule 63 (expression -> expression neq expression .)
    verdadero       reduce using rule 63 (expression -> expression neq expression .)
    falso           reduce using rule 63 (expression -> expression neq expression .)
    Int64           reduce using rule 63 (expression -> expression neq expression .)
    Float64         reduce using rule 63 (expression -> expression neq expression .)
    Bool            reduce using rule 63 (expression -> expression neq expression .)
    Char            reduce using rule 63 (expression -> expression neq expression .)
    String          reduce using rule 63 (expression -> expression neq expression .)
    sin             reduce using rule 63 (expression -> expression neq expression .)
    cos             reduce using rule 63 (expression -> expression neq expression .)
    tan             reduce using rule 63 (expression -> expression neq expression .)
    sqrt            reduce using rule 63 (expression -> expression neq expression .)
    log10           reduce using rule 63 (expression -> expression neq expression .)
    uppercase       reduce using rule 63 (expression -> expression neq expression .)
    lowercase       reduce using rule 63 (expression -> expression neq expression .)
    trunc           reduce using rule 63 (expression -> expression neq expression .)
    float           reduce using rule 63 (expression -> expression neq expression .)
    string          reduce using rule 63 (expression -> expression neq expression .)
    typeof          reduce using rule 63 (expression -> expression neq expression .)
    length          reduce using rule 63 (expression -> expression neq expression .)
    log             reduce using rule 63 (expression -> expression neq expression .)
    parse           reduce using rule 63 (expression -> expression neq expression .)
    push            reduce using rule 63 (expression -> expression neq expression .)
    pop             reduce using rule 63 (expression -> expression neq expression .)
    end             reduce using rule 63 (expression -> expression neq expression .)
    rsqbrack        reduce using rule 63 (expression -> expression neq expression .)
    comma           reduce using rule 63 (expression -> expression neq expression .)
    elseif          reduce using rule 63 (expression -> expression neq expression .)
    else            reduce using rule 63 (expression -> expression neq expression .)
    twopoint        reduce using rule 63 (expression -> expression neq expression .)
    plus            shift and go to state 63
    minus           shift and go to state 64
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    point           shift and go to state 77

  ! plus            [ reduce using rule 63 (expression -> expression neq expression .) ]
  ! minus           [ reduce using rule 63 (expression -> expression neq expression .) ]
  ! mul             [ reduce using rule 63 (expression -> expression neq expression .) ]
  ! div             [ reduce using rule 63 (expression -> expression neq expression .) ]
  ! mod             [ reduce using rule 63 (expression -> expression neq expression .) ]
  ! exp             [ reduce using rule 63 (expression -> expression neq expression .) ]
  ! gte             [ reduce using rule 63 (expression -> expression neq expression .) ]
  ! lte             [ reduce using rule 63 (expression -> expression neq expression .) ]
  ! gt              [ reduce using rule 63 (expression -> expression neq expression .) ]
  ! lt              [ reduce using rule 63 (expression -> expression neq expression .) ]
  ! point           [ reduce using rule 63 (expression -> expression neq expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 123

    (64) expression -> expression and expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 64 (expression -> expression and expression .)
    definir         reduce using rule 64 (expression -> expression and expression .)
    and             reduce using rule 64 (expression -> expression and expression .)
    or              reduce using rule 64 (expression -> expression and expression .)
    terminator      reduce using rule 64 (expression -> expression and expression .)
    rparen          reduce using rule 64 (expression -> expression and expression .)
    function        reduce using rule 64 (expression -> expression and expression .)
    print           reduce using rule 64 (expression -> expression and expression .)
    println         reduce using rule 64 (expression -> expression and expression .)
    while           reduce using rule 64 (expression -> expression and expression .)
    for             reduce using rule 64 (expression -> expression and expression .)
    struct          reduce using rule 64 (expression -> expression and expression .)
    mutable         reduce using rule 64 (expression -> expression and expression .)
    nothing         reduce using rule 64 (expression -> expression and expression .)
    global          reduce using rule 64 (expression -> expression and expression .)
    local           reduce using rule 64 (expression -> expression and expression .)
    no              reduce using rule 64 (expression -> expression and expression .)
    identifier      reduce using rule 64 (expression -> expression and expression .)
    lsqbrack        reduce using rule 64 (expression -> expression and expression .)
    valor_cadena    reduce using rule 64 (expression -> expression and expression .)
    break           reduce using rule 64 (expression -> expression and expression .)
    continue        reduce using rule 64 (expression -> expression and expression .)
    return          reduce using rule 64 (expression -> expression and expression .)
    lparen          reduce using rule 64 (expression -> expression and expression .)
    if              reduce using rule 64 (expression -> expression and expression .)
    valor_entero    reduce using rule 64 (expression -> expression and expression .)
    valor_decimal   reduce using rule 64 (expression -> expression and expression .)
    valor_caracter  reduce using rule 64 (expression -> expression and expression .)
    verdadero       reduce using rule 64 (expression -> expression and expression .)
    falso           reduce using rule 64 (expression -> expression and expression .)
    Int64           reduce using rule 64 (expression -> expression and expression .)
    Float64         reduce using rule 64 (expression -> expression and expression .)
    Bool            reduce using rule 64 (expression -> expression and expression .)
    Char            reduce using rule 64 (expression -> expression and expression .)
    String          reduce using rule 64 (expression -> expression and expression .)
    sin             reduce using rule 64 (expression -> expression and expression .)
    cos             reduce using rule 64 (expression -> expression and expression .)
    tan             reduce using rule 64 (expression -> expression and expression .)
    sqrt            reduce using rule 64 (expression -> expression and expression .)
    log10           reduce using rule 64 (expression -> expression and expression .)
    uppercase       reduce using rule 64 (expression -> expression and expression .)
    lowercase       reduce using rule 64 (expression -> expression and expression .)
    trunc           reduce using rule 64 (expression -> expression and expression .)
    float           reduce using rule 64 (expression -> expression and expression .)
    string          reduce using rule 64 (expression -> expression and expression .)
    typeof          reduce using rule 64 (expression -> expression and expression .)
    length          reduce using rule 64 (expression -> expression and expression .)
    log             reduce using rule 64 (expression -> expression and expression .)
    parse           reduce using rule 64 (expression -> expression and expression .)
    push            reduce using rule 64 (expression -> expression and expression .)
    pop             reduce using rule 64 (expression -> expression and expression .)
    end             reduce using rule 64 (expression -> expression and expression .)
    rsqbrack        reduce using rule 64 (expression -> expression and expression .)
    comma           reduce using rule 64 (expression -> expression and expression .)
    elseif          reduce using rule 64 (expression -> expression and expression .)
    else            reduce using rule 64 (expression -> expression and expression .)
    twopoint        reduce using rule 64 (expression -> expression and expression .)
    plus            shift and go to state 63
    minus           shift and go to state 64
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    eq              shift and go to state 73
    neq             shift and go to state 74
    point           shift and go to state 77

  ! plus            [ reduce using rule 64 (expression -> expression and expression .) ]
  ! minus           [ reduce using rule 64 (expression -> expression and expression .) ]
  ! mul             [ reduce using rule 64 (expression -> expression and expression .) ]
  ! div             [ reduce using rule 64 (expression -> expression and expression .) ]
  ! mod             [ reduce using rule 64 (expression -> expression and expression .) ]
  ! exp             [ reduce using rule 64 (expression -> expression and expression .) ]
  ! gte             [ reduce using rule 64 (expression -> expression and expression .) ]
  ! lte             [ reduce using rule 64 (expression -> expression and expression .) ]
  ! gt              [ reduce using rule 64 (expression -> expression and expression .) ]
  ! lt              [ reduce using rule 64 (expression -> expression and expression .) ]
  ! eq              [ reduce using rule 64 (expression -> expression and expression .) ]
  ! neq             [ reduce using rule 64 (expression -> expression and expression .) ]
  ! point           [ reduce using rule 64 (expression -> expression and expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 124

    (65) expression -> expression or expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 65 (expression -> expression or expression .)
    definir         reduce using rule 65 (expression -> expression or expression .)
    or              reduce using rule 65 (expression -> expression or expression .)
    terminator      reduce using rule 65 (expression -> expression or expression .)
    rparen          reduce using rule 65 (expression -> expression or expression .)
    function        reduce using rule 65 (expression -> expression or expression .)
    print           reduce using rule 65 (expression -> expression or expression .)
    println         reduce using rule 65 (expression -> expression or expression .)
    while           reduce using rule 65 (expression -> expression or expression .)
    for             reduce using rule 65 (expression -> expression or expression .)
    struct          reduce using rule 65 (expression -> expression or expression .)
    mutable         reduce using rule 65 (expression -> expression or expression .)
    nothing         reduce using rule 65 (expression -> expression or expression .)
    global          reduce using rule 65 (expression -> expression or expression .)
    local           reduce using rule 65 (expression -> expression or expression .)
    no              reduce using rule 65 (expression -> expression or expression .)
    identifier      reduce using rule 65 (expression -> expression or expression .)
    lsqbrack        reduce using rule 65 (expression -> expression or expression .)
    valor_cadena    reduce using rule 65 (expression -> expression or expression .)
    break           reduce using rule 65 (expression -> expression or expression .)
    continue        reduce using rule 65 (expression -> expression or expression .)
    return          reduce using rule 65 (expression -> expression or expression .)
    lparen          reduce using rule 65 (expression -> expression or expression .)
    if              reduce using rule 65 (expression -> expression or expression .)
    valor_entero    reduce using rule 65 (expression -> expression or expression .)
    valor_decimal   reduce using rule 65 (expression -> expression or expression .)
    valor_caracter  reduce using rule 65 (expression -> expression or expression .)
    verdadero       reduce using rule 65 (expression -> expression or expression .)
    falso           reduce using rule 65 (expression -> expression or expression .)
    Int64           reduce using rule 65 (expression -> expression or expression .)
    Float64         reduce using rule 65 (expression -> expression or expression .)
    Bool            reduce using rule 65 (expression -> expression or expression .)
    Char            reduce using rule 65 (expression -> expression or expression .)
    String          reduce using rule 65 (expression -> expression or expression .)
    sin             reduce using rule 65 (expression -> expression or expression .)
    cos             reduce using rule 65 (expression -> expression or expression .)
    tan             reduce using rule 65 (expression -> expression or expression .)
    sqrt            reduce using rule 65 (expression -> expression or expression .)
    log10           reduce using rule 65 (expression -> expression or expression .)
    uppercase       reduce using rule 65 (expression -> expression or expression .)
    lowercase       reduce using rule 65 (expression -> expression or expression .)
    trunc           reduce using rule 65 (expression -> expression or expression .)
    float           reduce using rule 65 (expression -> expression or expression .)
    string          reduce using rule 65 (expression -> expression or expression .)
    typeof          reduce using rule 65 (expression -> expression or expression .)
    length          reduce using rule 65 (expression -> expression or expression .)
    log             reduce using rule 65 (expression -> expression or expression .)
    parse           reduce using rule 65 (expression -> expression or expression .)
    push            reduce using rule 65 (expression -> expression or expression .)
    pop             reduce using rule 65 (expression -> expression or expression .)
    end             reduce using rule 65 (expression -> expression or expression .)
    rsqbrack        reduce using rule 65 (expression -> expression or expression .)
    comma           reduce using rule 65 (expression -> expression or expression .)
    elseif          reduce using rule 65 (expression -> expression or expression .)
    else            reduce using rule 65 (expression -> expression or expression .)
    twopoint        reduce using rule 65 (expression -> expression or expression .)
    plus            shift and go to state 63
    minus           shift and go to state 64
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    eq              shift and go to state 73
    neq             shift and go to state 74
    and             shift and go to state 75
    point           shift and go to state 77

  ! plus            [ reduce using rule 65 (expression -> expression or expression .) ]
  ! minus           [ reduce using rule 65 (expression -> expression or expression .) ]
  ! mul             [ reduce using rule 65 (expression -> expression or expression .) ]
  ! div             [ reduce using rule 65 (expression -> expression or expression .) ]
  ! mod             [ reduce using rule 65 (expression -> expression or expression .) ]
  ! exp             [ reduce using rule 65 (expression -> expression or expression .) ]
  ! gte             [ reduce using rule 65 (expression -> expression or expression .) ]
  ! lte             [ reduce using rule 65 (expression -> expression or expression .) ]
  ! gt              [ reduce using rule 65 (expression -> expression or expression .) ]
  ! lt              [ reduce using rule 65 (expression -> expression or expression .) ]
  ! eq              [ reduce using rule 65 (expression -> expression or expression .) ]
  ! neq             [ reduce using rule 65 (expression -> expression or expression .) ]
  ! and             [ reduce using rule 65 (expression -> expression or expression .) ]
  ! point           [ reduce using rule 65 (expression -> expression or expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! or              [ shift and go to state 76 ]


state 125

    (39) array_operator -> expression point oparray .

    equal           reduce using rule 39 (array_operator -> expression point oparray .)
    definir         reduce using rule 39 (array_operator -> expression point oparray .)
    plus            reduce using rule 39 (array_operator -> expression point oparray .)
    minus           reduce using rule 39 (array_operator -> expression point oparray .)
    mul             reduce using rule 39 (array_operator -> expression point oparray .)
    div             reduce using rule 39 (array_operator -> expression point oparray .)
    mod             reduce using rule 39 (array_operator -> expression point oparray .)
    exp             reduce using rule 39 (array_operator -> expression point oparray .)
    gte             reduce using rule 39 (array_operator -> expression point oparray .)
    lte             reduce using rule 39 (array_operator -> expression point oparray .)
    gt              reduce using rule 39 (array_operator -> expression point oparray .)
    lt              reduce using rule 39 (array_operator -> expression point oparray .)
    eq              reduce using rule 39 (array_operator -> expression point oparray .)
    neq             reduce using rule 39 (array_operator -> expression point oparray .)
    and             reduce using rule 39 (array_operator -> expression point oparray .)
    or              reduce using rule 39 (array_operator -> expression point oparray .)
    point           reduce using rule 39 (array_operator -> expression point oparray .)
    terminator      reduce using rule 39 (array_operator -> expression point oparray .)
    rparen          reduce using rule 39 (array_operator -> expression point oparray .)
    function        reduce using rule 39 (array_operator -> expression point oparray .)
    print           reduce using rule 39 (array_operator -> expression point oparray .)
    println         reduce using rule 39 (array_operator -> expression point oparray .)
    while           reduce using rule 39 (array_operator -> expression point oparray .)
    for             reduce using rule 39 (array_operator -> expression point oparray .)
    struct          reduce using rule 39 (array_operator -> expression point oparray .)
    mutable         reduce using rule 39 (array_operator -> expression point oparray .)
    nothing         reduce using rule 39 (array_operator -> expression point oparray .)
    global          reduce using rule 39 (array_operator -> expression point oparray .)
    local           reduce using rule 39 (array_operator -> expression point oparray .)
    no              reduce using rule 39 (array_operator -> expression point oparray .)
    identifier      reduce using rule 39 (array_operator -> expression point oparray .)
    lsqbrack        reduce using rule 39 (array_operator -> expression point oparray .)
    valor_cadena    reduce using rule 39 (array_operator -> expression point oparray .)
    break           reduce using rule 39 (array_operator -> expression point oparray .)
    continue        reduce using rule 39 (array_operator -> expression point oparray .)
    return          reduce using rule 39 (array_operator -> expression point oparray .)
    lparen          reduce using rule 39 (array_operator -> expression point oparray .)
    if              reduce using rule 39 (array_operator -> expression point oparray .)
    valor_entero    reduce using rule 39 (array_operator -> expression point oparray .)
    valor_decimal   reduce using rule 39 (array_operator -> expression point oparray .)
    valor_caracter  reduce using rule 39 (array_operator -> expression point oparray .)
    verdadero       reduce using rule 39 (array_operator -> expression point oparray .)
    falso           reduce using rule 39 (array_operator -> expression point oparray .)
    Int64           reduce using rule 39 (array_operator -> expression point oparray .)
    Float64         reduce using rule 39 (array_operator -> expression point oparray .)
    Bool            reduce using rule 39 (array_operator -> expression point oparray .)
    Char            reduce using rule 39 (array_operator -> expression point oparray .)
    String          reduce using rule 39 (array_operator -> expression point oparray .)
    sin             reduce using rule 39 (array_operator -> expression point oparray .)
    cos             reduce using rule 39 (array_operator -> expression point oparray .)
    tan             reduce using rule 39 (array_operator -> expression point oparray .)
    sqrt            reduce using rule 39 (array_operator -> expression point oparray .)
    log10           reduce using rule 39 (array_operator -> expression point oparray .)
    uppercase       reduce using rule 39 (array_operator -> expression point oparray .)
    lowercase       reduce using rule 39 (array_operator -> expression point oparray .)
    trunc           reduce using rule 39 (array_operator -> expression point oparray .)
    float           reduce using rule 39 (array_operator -> expression point oparray .)
    string          reduce using rule 39 (array_operator -> expression point oparray .)
    typeof          reduce using rule 39 (array_operator -> expression point oparray .)
    length          reduce using rule 39 (array_operator -> expression point oparray .)
    log             reduce using rule 39 (array_operator -> expression point oparray .)
    parse           reduce using rule 39 (array_operator -> expression point oparray .)
    push            reduce using rule 39 (array_operator -> expression point oparray .)
    pop             reduce using rule 39 (array_operator -> expression point oparray .)
    end             reduce using rule 39 (array_operator -> expression point oparray .)
    rsqbrack        reduce using rule 39 (array_operator -> expression point oparray .)
    comma           reduce using rule 39 (array_operator -> expression point oparray .)
    elseif          reduce using rule 39 (array_operator -> expression point oparray .)
    else            reduce using rule 39 (array_operator -> expression point oparray .)
    twopoint        reduce using rule 39 (array_operator -> expression point oparray .)


state 126

    (40) oparray -> plus . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 162
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 127

    (41) oparray -> minus . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 163
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 128

    (42) oparray -> mul . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 164
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 129

    (43) oparray -> div . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 165
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 130

    (44) oparray -> mod . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 166
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 131

    (45) oparray -> exp . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 167
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 132

    (14) statement -> function identifier lparen . arguments rparen statement_list end
    (112) arguments -> . expression
    (113) arguments -> . arguments comma expression
    (114) arguments -> .
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    rparen          reduce using rule 114 (arguments -> .)
    comma           reduce using rule 114 (arguments -> .)
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    arguments                      shift and go to state 168
    expression                     shift and go to state 96
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 133

    (67) expression -> identifier lparen arguments . rparen
    (113) arguments -> arguments . comma expression

    rparen          shift and go to state 169
    comma           shift and go to state 155


state 134

    (73) list_index -> list_index lsqbrack . argsarray rsqbrack
    (74) argsarray -> . expslice
    (75) expslice -> . slice_copy
    (76) expslice -> . slice_left
    (77) expslice -> . slice_right
    (78) expslice -> . slice_all
    (79) expslice -> . expression
    (80) slice_copy -> . twopoint
    (81) slice_left -> . expression twopoint
    (82) slice_right -> . twopoint expression
    (83) slice_all -> . expression twopoint expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    twopoint        shift and go to state 142
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    argsarray                      shift and go to state 170
    expslice                       shift and go to state 136
    slice_copy                     shift and go to state 137
    slice_left                     shift and go to state 138
    slice_right                    shift and go to state 139
    slice_all                      shift and go to state 140
    expression                     shift and go to state 141
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 135

    (72) list_index -> lsqbrack argsarray . rsqbrack

    rsqbrack        shift and go to state 171


state 136

    (74) argsarray -> expslice .

    rsqbrack        reduce using rule 74 (argsarray -> expslice .)


state 137

    (75) expslice -> slice_copy .

    rsqbrack        reduce using rule 75 (expslice -> slice_copy .)


state 138

    (76) expslice -> slice_left .

    rsqbrack        reduce using rule 76 (expslice -> slice_left .)


state 139

    (77) expslice -> slice_right .

    rsqbrack        reduce using rule 77 (expslice -> slice_right .)


state 140

    (78) expslice -> slice_all .

    rsqbrack        reduce using rule 78 (expslice -> slice_all .)


state 141

    (79) expslice -> expression .
    (81) slice_left -> expression . twopoint
    (83) slice_all -> expression . twopoint expression
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    rsqbrack        reduce using rule 79 (expslice -> expression .)
    twopoint        shift and go to state 172
    equal           shift and go to state 61
    definir         shift and go to state 62
    plus            shift and go to state 63
    minus           shift and go to state 64
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    eq              shift and go to state 73
    neq             shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    point           shift and go to state 77


state 142

    (80) slice_copy -> twopoint .
    (82) slice_right -> twopoint . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    rsqbrack        reduce using rule 80 (slice_copy -> twopoint .)
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 173
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 143

    (90) expression -> lparen expression rparen .

    equal           reduce using rule 90 (expression -> lparen expression rparen .)
    definir         reduce using rule 90 (expression -> lparen expression rparen .)
    plus            reduce using rule 90 (expression -> lparen expression rparen .)
    minus           reduce using rule 90 (expression -> lparen expression rparen .)
    mul             reduce using rule 90 (expression -> lparen expression rparen .)
    div             reduce using rule 90 (expression -> lparen expression rparen .)
    mod             reduce using rule 90 (expression -> lparen expression rparen .)
    exp             reduce using rule 90 (expression -> lparen expression rparen .)
    gte             reduce using rule 90 (expression -> lparen expression rparen .)
    lte             reduce using rule 90 (expression -> lparen expression rparen .)
    gt              reduce using rule 90 (expression -> lparen expression rparen .)
    lt              reduce using rule 90 (expression -> lparen expression rparen .)
    eq              reduce using rule 90 (expression -> lparen expression rparen .)
    neq             reduce using rule 90 (expression -> lparen expression rparen .)
    and             reduce using rule 90 (expression -> lparen expression rparen .)
    or              reduce using rule 90 (expression -> lparen expression rparen .)
    point           reduce using rule 90 (expression -> lparen expression rparen .)
    terminator      reduce using rule 90 (expression -> lparen expression rparen .)
    rparen          reduce using rule 90 (expression -> lparen expression rparen .)
    function        reduce using rule 90 (expression -> lparen expression rparen .)
    print           reduce using rule 90 (expression -> lparen expression rparen .)
    println         reduce using rule 90 (expression -> lparen expression rparen .)
    while           reduce using rule 90 (expression -> lparen expression rparen .)
    for             reduce using rule 90 (expression -> lparen expression rparen .)
    struct          reduce using rule 90 (expression -> lparen expression rparen .)
    mutable         reduce using rule 90 (expression -> lparen expression rparen .)
    nothing         reduce using rule 90 (expression -> lparen expression rparen .)
    global          reduce using rule 90 (expression -> lparen expression rparen .)
    local           reduce using rule 90 (expression -> lparen expression rparen .)
    no              reduce using rule 90 (expression -> lparen expression rparen .)
    identifier      reduce using rule 90 (expression -> lparen expression rparen .)
    lsqbrack        reduce using rule 90 (expression -> lparen expression rparen .)
    valor_cadena    reduce using rule 90 (expression -> lparen expression rparen .)
    break           reduce using rule 90 (expression -> lparen expression rparen .)
    continue        reduce using rule 90 (expression -> lparen expression rparen .)
    return          reduce using rule 90 (expression -> lparen expression rparen .)
    lparen          reduce using rule 90 (expression -> lparen expression rparen .)
    if              reduce using rule 90 (expression -> lparen expression rparen .)
    valor_entero    reduce using rule 90 (expression -> lparen expression rparen .)
    valor_decimal   reduce using rule 90 (expression -> lparen expression rparen .)
    valor_caracter  reduce using rule 90 (expression -> lparen expression rparen .)
    verdadero       reduce using rule 90 (expression -> lparen expression rparen .)
    falso           reduce using rule 90 (expression -> lparen expression rparen .)
    Int64           reduce using rule 90 (expression -> lparen expression rparen .)
    Float64         reduce using rule 90 (expression -> lparen expression rparen .)
    Bool            reduce using rule 90 (expression -> lparen expression rparen .)
    Char            reduce using rule 90 (expression -> lparen expression rparen .)
    String          reduce using rule 90 (expression -> lparen expression rparen .)
    sin             reduce using rule 90 (expression -> lparen expression rparen .)
    cos             reduce using rule 90 (expression -> lparen expression rparen .)
    tan             reduce using rule 90 (expression -> lparen expression rparen .)
    sqrt            reduce using rule 90 (expression -> lparen expression rparen .)
    log10           reduce using rule 90 (expression -> lparen expression rparen .)
    uppercase       reduce using rule 90 (expression -> lparen expression rparen .)
    lowercase       reduce using rule 90 (expression -> lparen expression rparen .)
    trunc           reduce using rule 90 (expression -> lparen expression rparen .)
    float           reduce using rule 90 (expression -> lparen expression rparen .)
    string          reduce using rule 90 (expression -> lparen expression rparen .)
    typeof          reduce using rule 90 (expression -> lparen expression rparen .)
    length          reduce using rule 90 (expression -> lparen expression rparen .)
    log             reduce using rule 90 (expression -> lparen expression rparen .)
    parse           reduce using rule 90 (expression -> lparen expression rparen .)
    push            reduce using rule 90 (expression -> lparen expression rparen .)
    pop             reduce using rule 90 (expression -> lparen expression rparen .)
    end             reduce using rule 90 (expression -> lparen expression rparen .)
    rsqbrack        reduce using rule 90 (expression -> lparen expression rparen .)
    comma           reduce using rule 90 (expression -> lparen expression rparen .)
    elseif          reduce using rule 90 (expression -> lparen expression rparen .)
    else            reduce using rule 90 (expression -> lparen expression rparen .)
    twopoint        reduce using rule 90 (expression -> lparen expression rparen .)


state 144

    (15) statement -> print lparen arguments . rparen
    (113) arguments -> arguments . comma expression

    rparen          shift and go to state 174
    comma           shift and go to state 155


state 145

    (16) statement -> println lparen arguments . rparen
    (113) arguments -> arguments . comma expression

    rparen          shift and go to state 175
    comma           shift and go to state 155


state 146

    (17) statement -> while expression statement_list . end
    (3) statement_list -> statement_list . statement terminator
    (5) statement -> . expression
    (6) statement -> . if_statement
    (14) statement -> . function identifier lparen arguments rparen statement_list end
    (15) statement -> . print lparen arguments rparen
    (16) statement -> . println lparen arguments rparen
    (17) statement -> . while expression statement_list end
    (18) statement -> . for container statement_list end
    (19) statement -> . struct identifier struct_parameters end
    (20) statement -> . mutable struct identifier struct_parameters end
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (7) if_statement -> . if expression statement_list elseif_clause end
    (8) if_statement -> . if expression statement_list elseif_clause else_clause end
    (9) if_statement -> . if expression statement_list end
    (10) if_statement -> . if expression statement_list else_clause end
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    end             shift and go to state 176
    function        shift and go to state 6
    print           shift and go to state 9
    println         shift and go to state 10
    while           shift and go to state 11
    for             shift and go to state 12
    struct          shift and go to state 13
    mutable         shift and go to state 14
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    if              shift and go to state 32
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 4
    statement                      shift and go to state 59
    if_statement                   shift and go to state 5
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 147

    (50) expression -> expression plus . expression
    (56) expression -> plus . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 177
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 148

    (51) expression -> expression minus . expression
    (57) expression -> minus . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 178
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 149

    (18) statement -> for container statement_list . end
    (3) statement_list -> statement_list . statement terminator
    (5) statement -> . expression
    (6) statement -> . if_statement
    (14) statement -> . function identifier lparen arguments rparen statement_list end
    (15) statement -> . print lparen arguments rparen
    (16) statement -> . println lparen arguments rparen
    (17) statement -> . while expression statement_list end
    (18) statement -> . for container statement_list end
    (19) statement -> . struct identifier struct_parameters end
    (20) statement -> . mutable struct identifier struct_parameters end
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (7) if_statement -> . if expression statement_list elseif_clause end
    (8) if_statement -> . if expression statement_list elseif_clause else_clause end
    (9) if_statement -> . if expression statement_list end
    (10) if_statement -> . if expression statement_list else_clause end
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    end             shift and go to state 179
    function        shift and go to state 6
    print           shift and go to state 9
    println         shift and go to state 10
    while           shift and go to state 11
    for             shift and go to state 12
    struct          shift and go to state 13
    mutable         shift and go to state 14
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    if              shift and go to state 32
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    statement                      shift and go to state 59
    expression                     shift and go to state 4
    if_statement                   shift and go to state 5
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 150

    (84) container -> identifier in . argscontainer
    (85) argscontainer -> . slice_all
    (86) argscontainer -> . expression
    (83) slice_all -> . expression twopoint expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    argscontainer                  shift and go to state 180
    slice_all                      shift and go to state 181
    expression                     shift and go to state 182
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 151

    (19) statement -> struct identifier struct_parameters . end
    (116) struct_parameters -> struct_parameters . expression terminator
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    end             shift and go to state 183
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 184
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 152

    (115) struct_parameters -> expression . terminator
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    terminator      shift and go to state 185
    equal           shift and go to state 61
    definir         shift and go to state 62
    plus            shift and go to state 63
    minus           shift and go to state 64
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    eq              shift and go to state 73
    neq             shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    point           shift and go to state 77


state 153

    (20) statement -> mutable struct identifier . struct_parameters end
    (115) struct_parameters -> . expression terminator
    (116) struct_parameters -> . struct_parameters expression terminator
    (117) struct_parameters -> .
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

  ! shift/reduce conflict for nothing resolved as shift
  ! shift/reduce conflict for global resolved as shift
  ! shift/reduce conflict for local resolved as shift
  ! shift/reduce conflict for plus resolved as shift
  ! shift/reduce conflict for minus resolved as shift
  ! shift/reduce conflict for no resolved as shift
  ! shift/reduce conflict for identifier resolved as shift
  ! shift/reduce conflict for lsqbrack resolved as shift
  ! shift/reduce conflict for valor_cadena resolved as shift
  ! shift/reduce conflict for break resolved as shift
  ! shift/reduce conflict for continue resolved as shift
  ! shift/reduce conflict for return resolved as shift
  ! shift/reduce conflict for lparen resolved as shift
  ! shift/reduce conflict for valor_entero resolved as shift
  ! shift/reduce conflict for valor_decimal resolved as shift
  ! shift/reduce conflict for valor_caracter resolved as shift
  ! shift/reduce conflict for verdadero resolved as shift
  ! shift/reduce conflict for falso resolved as shift
  ! shift/reduce conflict for Int64 resolved as shift
  ! shift/reduce conflict for Float64 resolved as shift
  ! shift/reduce conflict for Bool resolved as shift
  ! shift/reduce conflict for Char resolved as shift
  ! shift/reduce conflict for String resolved as shift
  ! shift/reduce conflict for sin resolved as shift
  ! shift/reduce conflict for cos resolved as shift
  ! shift/reduce conflict for tan resolved as shift
  ! shift/reduce conflict for sqrt resolved as shift
  ! shift/reduce conflict for log10 resolved as shift
  ! shift/reduce conflict for uppercase resolved as shift
  ! shift/reduce conflict for lowercase resolved as shift
  ! shift/reduce conflict for trunc resolved as shift
  ! shift/reduce conflict for float resolved as shift
  ! shift/reduce conflict for string resolved as shift
  ! shift/reduce conflict for typeof resolved as shift
  ! shift/reduce conflict for length resolved as shift
  ! shift/reduce conflict for log resolved as shift
  ! shift/reduce conflict for parse resolved as shift
  ! shift/reduce conflict for push resolved as shift
  ! shift/reduce conflict for pop resolved as shift
    end             reduce using rule 117 (struct_parameters -> .)
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

  ! nothing         [ reduce using rule 117 (struct_parameters -> .) ]
  ! global          [ reduce using rule 117 (struct_parameters -> .) ]
  ! local           [ reduce using rule 117 (struct_parameters -> .) ]
  ! plus            [ reduce using rule 117 (struct_parameters -> .) ]
  ! minus           [ reduce using rule 117 (struct_parameters -> .) ]
  ! no              [ reduce using rule 117 (struct_parameters -> .) ]
  ! identifier      [ reduce using rule 117 (struct_parameters -> .) ]
  ! lsqbrack        [ reduce using rule 117 (struct_parameters -> .) ]
  ! valor_cadena    [ reduce using rule 117 (struct_parameters -> .) ]
  ! break           [ reduce using rule 117 (struct_parameters -> .) ]
  ! continue        [ reduce using rule 117 (struct_parameters -> .) ]
  ! return          [ reduce using rule 117 (struct_parameters -> .) ]
  ! lparen          [ reduce using rule 117 (struct_parameters -> .) ]
  ! valor_entero    [ reduce using rule 117 (struct_parameters -> .) ]
  ! valor_decimal   [ reduce using rule 117 (struct_parameters -> .) ]
  ! valor_caracter  [ reduce using rule 117 (struct_parameters -> .) ]
  ! verdadero       [ reduce using rule 117 (struct_parameters -> .) ]
  ! falso           [ reduce using rule 117 (struct_parameters -> .) ]
  ! Int64           [ reduce using rule 117 (struct_parameters -> .) ]
  ! Float64         [ reduce using rule 117 (struct_parameters -> .) ]
  ! Bool            [ reduce using rule 117 (struct_parameters -> .) ]
  ! Char            [ reduce using rule 117 (struct_parameters -> .) ]
  ! String          [ reduce using rule 117 (struct_parameters -> .) ]
  ! sin             [ reduce using rule 117 (struct_parameters -> .) ]
  ! cos             [ reduce using rule 117 (struct_parameters -> .) ]
  ! tan             [ reduce using rule 117 (struct_parameters -> .) ]
  ! sqrt            [ reduce using rule 117 (struct_parameters -> .) ]
  ! log10           [ reduce using rule 117 (struct_parameters -> .) ]
  ! uppercase       [ reduce using rule 117 (struct_parameters -> .) ]
  ! lowercase       [ reduce using rule 117 (struct_parameters -> .) ]
  ! trunc           [ reduce using rule 117 (struct_parameters -> .) ]
  ! float           [ reduce using rule 117 (struct_parameters -> .) ]
  ! string          [ reduce using rule 117 (struct_parameters -> .) ]
  ! typeof          [ reduce using rule 117 (struct_parameters -> .) ]
  ! length          [ reduce using rule 117 (struct_parameters -> .) ]
  ! log             [ reduce using rule 117 (struct_parameters -> .) ]
  ! parse           [ reduce using rule 117 (struct_parameters -> .) ]
  ! push            [ reduce using rule 117 (struct_parameters -> .) ]
  ! pop             [ reduce using rule 117 (struct_parameters -> .) ]

    struct_parameters              shift and go to state 186
    expression                     shift and go to state 152
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 154

    (68) expression -> lsqbrack arguments rsqbrack .
    (69) expression -> lsqbrack arguments rsqbrack . definir Array lkey type_data rkey

  ! shift/reduce conflict for definir resolved as shift
    equal           reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    plus            reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    minus           reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    mul             reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    div             reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    mod             reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    exp             reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    gte             reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    lte             reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    gt              reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    lt              reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    eq              reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    neq             reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    and             reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    or              reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    point           reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    terminator      reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    rparen          reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    function        reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    print           reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    println         reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    while           reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    for             reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    struct          reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    mutable         reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    nothing         reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    global          reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    local           reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    no              reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    identifier      reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    lsqbrack        reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    valor_cadena    reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    break           reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    continue        reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    return          reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    lparen          reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    if              reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    valor_entero    reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    valor_decimal   reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    valor_caracter  reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    verdadero       reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    falso           reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    Int64           reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    Float64         reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    Bool            reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    Char            reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    String          reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    sin             reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    cos             reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    tan             reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    sqrt            reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    log10           reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    uppercase       reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    lowercase       reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    trunc           reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    float           reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    string          reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    typeof          reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    length          reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    log             reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    parse           reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    push            reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    pop             reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    end             reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    rsqbrack        reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    comma           reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    elseif          reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    else            reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    twopoint        reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .)
    definir         shift and go to state 187

  ! definir         [ reduce using rule 68 (expression -> lsqbrack arguments rsqbrack .) ]


state 155

    (113) arguments -> arguments comma . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 188
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 156

    (70) expression -> valor_cadena lsqbrack expslice . rsqbrack

    rsqbrack        shift and go to state 189


state 157

    (93) listpoint -> listpoint point . identifier

    identifier      shift and go to state 190


state 158

    (92) listpoint -> point identifier .

    point           reduce using rule 92 (listpoint -> point identifier .)
    equal           reduce using rule 92 (listpoint -> point identifier .)
    definir         reduce using rule 92 (listpoint -> point identifier .)
    plus            reduce using rule 92 (listpoint -> point identifier .)
    minus           reduce using rule 92 (listpoint -> point identifier .)
    mul             reduce using rule 92 (listpoint -> point identifier .)
    div             reduce using rule 92 (listpoint -> point identifier .)
    mod             reduce using rule 92 (listpoint -> point identifier .)
    exp             reduce using rule 92 (listpoint -> point identifier .)
    gte             reduce using rule 92 (listpoint -> point identifier .)
    lte             reduce using rule 92 (listpoint -> point identifier .)
    gt              reduce using rule 92 (listpoint -> point identifier .)
    lt              reduce using rule 92 (listpoint -> point identifier .)
    eq              reduce using rule 92 (listpoint -> point identifier .)
    neq             reduce using rule 92 (listpoint -> point identifier .)
    and             reduce using rule 92 (listpoint -> point identifier .)
    or              reduce using rule 92 (listpoint -> point identifier .)
    terminator      reduce using rule 92 (listpoint -> point identifier .)
    rparen          reduce using rule 92 (listpoint -> point identifier .)
    function        reduce using rule 92 (listpoint -> point identifier .)
    print           reduce using rule 92 (listpoint -> point identifier .)
    println         reduce using rule 92 (listpoint -> point identifier .)
    while           reduce using rule 92 (listpoint -> point identifier .)
    for             reduce using rule 92 (listpoint -> point identifier .)
    struct          reduce using rule 92 (listpoint -> point identifier .)
    mutable         reduce using rule 92 (listpoint -> point identifier .)
    nothing         reduce using rule 92 (listpoint -> point identifier .)
    global          reduce using rule 92 (listpoint -> point identifier .)
    local           reduce using rule 92 (listpoint -> point identifier .)
    no              reduce using rule 92 (listpoint -> point identifier .)
    identifier      reduce using rule 92 (listpoint -> point identifier .)
    lsqbrack        reduce using rule 92 (listpoint -> point identifier .)
    valor_cadena    reduce using rule 92 (listpoint -> point identifier .)
    break           reduce using rule 92 (listpoint -> point identifier .)
    continue        reduce using rule 92 (listpoint -> point identifier .)
    return          reduce using rule 92 (listpoint -> point identifier .)
    lparen          reduce using rule 92 (listpoint -> point identifier .)
    if              reduce using rule 92 (listpoint -> point identifier .)
    valor_entero    reduce using rule 92 (listpoint -> point identifier .)
    valor_decimal   reduce using rule 92 (listpoint -> point identifier .)
    valor_caracter  reduce using rule 92 (listpoint -> point identifier .)
    verdadero       reduce using rule 92 (listpoint -> point identifier .)
    falso           reduce using rule 92 (listpoint -> point identifier .)
    Int64           reduce using rule 92 (listpoint -> point identifier .)
    Float64         reduce using rule 92 (listpoint -> point identifier .)
    Bool            reduce using rule 92 (listpoint -> point identifier .)
    Char            reduce using rule 92 (listpoint -> point identifier .)
    String          reduce using rule 92 (listpoint -> point identifier .)
    sin             reduce using rule 92 (listpoint -> point identifier .)
    cos             reduce using rule 92 (listpoint -> point identifier .)
    tan             reduce using rule 92 (listpoint -> point identifier .)
    sqrt            reduce using rule 92 (listpoint -> point identifier .)
    log10           reduce using rule 92 (listpoint -> point identifier .)
    uppercase       reduce using rule 92 (listpoint -> point identifier .)
    lowercase       reduce using rule 92 (listpoint -> point identifier .)
    trunc           reduce using rule 92 (listpoint -> point identifier .)
    float           reduce using rule 92 (listpoint -> point identifier .)
    string          reduce using rule 92 (listpoint -> point identifier .)
    typeof          reduce using rule 92 (listpoint -> point identifier .)
    length          reduce using rule 92 (listpoint -> point identifier .)
    log             reduce using rule 92 (listpoint -> point identifier .)
    parse           reduce using rule 92 (listpoint -> point identifier .)
    push            reduce using rule 92 (listpoint -> point identifier .)
    pop             reduce using rule 92 (listpoint -> point identifier .)
    end             reduce using rule 92 (listpoint -> point identifier .)
    rsqbrack        reduce using rule 92 (listpoint -> point identifier .)
    comma           reduce using rule 92 (listpoint -> point identifier .)
    elseif          reduce using rule 92 (listpoint -> point identifier .)
    else            reduce using rule 92 (listpoint -> point identifier .)
    twopoint        reduce using rule 92 (listpoint -> point identifier .)


state 159

    (94) expression -> native lparen arguments . rparen
    (113) arguments -> arguments . comma expression

    rparen          shift and go to state 191
    comma           shift and go to state 155


state 160

    (38) array_operator -> native point expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 38 (array_operator -> native point expression .)
    definir         reduce using rule 38 (array_operator -> native point expression .)
    plus            reduce using rule 38 (array_operator -> native point expression .)
    minus           reduce using rule 38 (array_operator -> native point expression .)
    mul             reduce using rule 38 (array_operator -> native point expression .)
    div             reduce using rule 38 (array_operator -> native point expression .)
    mod             reduce using rule 38 (array_operator -> native point expression .)
    exp             reduce using rule 38 (array_operator -> native point expression .)
    gte             reduce using rule 38 (array_operator -> native point expression .)
    lte             reduce using rule 38 (array_operator -> native point expression .)
    gt              reduce using rule 38 (array_operator -> native point expression .)
    lt              reduce using rule 38 (array_operator -> native point expression .)
    eq              reduce using rule 38 (array_operator -> native point expression .)
    neq             reduce using rule 38 (array_operator -> native point expression .)
    and             reduce using rule 38 (array_operator -> native point expression .)
    or              reduce using rule 38 (array_operator -> native point expression .)
    point           reduce using rule 38 (array_operator -> native point expression .)
    terminator      reduce using rule 38 (array_operator -> native point expression .)
    rparen          reduce using rule 38 (array_operator -> native point expression .)
    function        reduce using rule 38 (array_operator -> native point expression .)
    print           reduce using rule 38 (array_operator -> native point expression .)
    println         reduce using rule 38 (array_operator -> native point expression .)
    while           reduce using rule 38 (array_operator -> native point expression .)
    for             reduce using rule 38 (array_operator -> native point expression .)
    struct          reduce using rule 38 (array_operator -> native point expression .)
    mutable         reduce using rule 38 (array_operator -> native point expression .)
    nothing         reduce using rule 38 (array_operator -> native point expression .)
    global          reduce using rule 38 (array_operator -> native point expression .)
    local           reduce using rule 38 (array_operator -> native point expression .)
    no              reduce using rule 38 (array_operator -> native point expression .)
    identifier      reduce using rule 38 (array_operator -> native point expression .)
    lsqbrack        reduce using rule 38 (array_operator -> native point expression .)
    valor_cadena    reduce using rule 38 (array_operator -> native point expression .)
    break           reduce using rule 38 (array_operator -> native point expression .)
    continue        reduce using rule 38 (array_operator -> native point expression .)
    return          reduce using rule 38 (array_operator -> native point expression .)
    lparen          reduce using rule 38 (array_operator -> native point expression .)
    if              reduce using rule 38 (array_operator -> native point expression .)
    valor_entero    reduce using rule 38 (array_operator -> native point expression .)
    valor_decimal   reduce using rule 38 (array_operator -> native point expression .)
    valor_caracter  reduce using rule 38 (array_operator -> native point expression .)
    verdadero       reduce using rule 38 (array_operator -> native point expression .)
    falso           reduce using rule 38 (array_operator -> native point expression .)
    Int64           reduce using rule 38 (array_operator -> native point expression .)
    Float64         reduce using rule 38 (array_operator -> native point expression .)
    Bool            reduce using rule 38 (array_operator -> native point expression .)
    Char            reduce using rule 38 (array_operator -> native point expression .)
    String          reduce using rule 38 (array_operator -> native point expression .)
    sin             reduce using rule 38 (array_operator -> native point expression .)
    cos             reduce using rule 38 (array_operator -> native point expression .)
    tan             reduce using rule 38 (array_operator -> native point expression .)
    sqrt            reduce using rule 38 (array_operator -> native point expression .)
    log10           reduce using rule 38 (array_operator -> native point expression .)
    uppercase       reduce using rule 38 (array_operator -> native point expression .)
    lowercase       reduce using rule 38 (array_operator -> native point expression .)
    trunc           reduce using rule 38 (array_operator -> native point expression .)
    float           reduce using rule 38 (array_operator -> native point expression .)
    string          reduce using rule 38 (array_operator -> native point expression .)
    typeof          reduce using rule 38 (array_operator -> native point expression .)
    length          reduce using rule 38 (array_operator -> native point expression .)
    log             reduce using rule 38 (array_operator -> native point expression .)
    parse           reduce using rule 38 (array_operator -> native point expression .)
    push            reduce using rule 38 (array_operator -> native point expression .)
    pop             reduce using rule 38 (array_operator -> native point expression .)
    end             reduce using rule 38 (array_operator -> native point expression .)
    rsqbrack        reduce using rule 38 (array_operator -> native point expression .)
    comma           reduce using rule 38 (array_operator -> native point expression .)
    elseif          reduce using rule 38 (array_operator -> native point expression .)
    else            reduce using rule 38 (array_operator -> native point expression .)
    twopoint        reduce using rule 38 (array_operator -> native point expression .)

  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! plus            [ shift and go to state 63 ]
  ! minus           [ shift and go to state 64 ]
  ! mul             [ shift and go to state 65 ]
  ! div             [ shift and go to state 66 ]
  ! mod             [ shift and go to state 67 ]
  ! exp             [ shift and go to state 68 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]
  ! point           [ shift and go to state 77 ]


state 161

    (7) if_statement -> if expression statement_list . elseif_clause end
    (8) if_statement -> if expression statement_list . elseif_clause else_clause end
    (9) if_statement -> if expression statement_list . end
    (10) if_statement -> if expression statement_list . else_clause end
    (3) statement_list -> statement_list . statement terminator
    (11) elseif_clause -> . elseif expression statement_list
    (12) elseif_clause -> . elseif_clause elseif expression statement_list
    (13) else_clause -> . else statement_list
    (5) statement -> . expression
    (6) statement -> . if_statement
    (14) statement -> . function identifier lparen arguments rparen statement_list end
    (15) statement -> . print lparen arguments rparen
    (16) statement -> . println lparen arguments rparen
    (17) statement -> . while expression statement_list end
    (18) statement -> . for container statement_list end
    (19) statement -> . struct identifier struct_parameters end
    (20) statement -> . mutable struct identifier struct_parameters end
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (7) if_statement -> . if expression statement_list elseif_clause end
    (8) if_statement -> . if expression statement_list elseif_clause else_clause end
    (9) if_statement -> . if expression statement_list end
    (10) if_statement -> . if expression statement_list else_clause end
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    end             shift and go to state 193
    elseif          shift and go to state 195
    else            shift and go to state 196
    function        shift and go to state 6
    print           shift and go to state 9
    println         shift and go to state 10
    while           shift and go to state 11
    for             shift and go to state 12
    struct          shift and go to state 13
    mutable         shift and go to state 14
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    if              shift and go to state 32
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 4
    elseif_clause                  shift and go to state 192
    else_clause                    shift and go to state 194
    statement                      shift and go to state 59
    if_statement                   shift and go to state 5
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 162

    (40) oparray -> plus expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 40 (oparray -> plus expression .)
    definir         reduce using rule 40 (oparray -> plus expression .)
    plus            reduce using rule 40 (oparray -> plus expression .)
    minus           reduce using rule 40 (oparray -> plus expression .)
    gte             reduce using rule 40 (oparray -> plus expression .)
    lte             reduce using rule 40 (oparray -> plus expression .)
    gt              reduce using rule 40 (oparray -> plus expression .)
    lt              reduce using rule 40 (oparray -> plus expression .)
    eq              reduce using rule 40 (oparray -> plus expression .)
    neq             reduce using rule 40 (oparray -> plus expression .)
    and             reduce using rule 40 (oparray -> plus expression .)
    or              reduce using rule 40 (oparray -> plus expression .)
    terminator      reduce using rule 40 (oparray -> plus expression .)
    rparen          reduce using rule 40 (oparray -> plus expression .)
    function        reduce using rule 40 (oparray -> plus expression .)
    print           reduce using rule 40 (oparray -> plus expression .)
    println         reduce using rule 40 (oparray -> plus expression .)
    while           reduce using rule 40 (oparray -> plus expression .)
    for             reduce using rule 40 (oparray -> plus expression .)
    struct          reduce using rule 40 (oparray -> plus expression .)
    mutable         reduce using rule 40 (oparray -> plus expression .)
    nothing         reduce using rule 40 (oparray -> plus expression .)
    global          reduce using rule 40 (oparray -> plus expression .)
    local           reduce using rule 40 (oparray -> plus expression .)
    no              reduce using rule 40 (oparray -> plus expression .)
    identifier      reduce using rule 40 (oparray -> plus expression .)
    lsqbrack        reduce using rule 40 (oparray -> plus expression .)
    valor_cadena    reduce using rule 40 (oparray -> plus expression .)
    break           reduce using rule 40 (oparray -> plus expression .)
    continue        reduce using rule 40 (oparray -> plus expression .)
    return          reduce using rule 40 (oparray -> plus expression .)
    lparen          reduce using rule 40 (oparray -> plus expression .)
    if              reduce using rule 40 (oparray -> plus expression .)
    valor_entero    reduce using rule 40 (oparray -> plus expression .)
    valor_decimal   reduce using rule 40 (oparray -> plus expression .)
    valor_caracter  reduce using rule 40 (oparray -> plus expression .)
    verdadero       reduce using rule 40 (oparray -> plus expression .)
    falso           reduce using rule 40 (oparray -> plus expression .)
    Int64           reduce using rule 40 (oparray -> plus expression .)
    Float64         reduce using rule 40 (oparray -> plus expression .)
    Bool            reduce using rule 40 (oparray -> plus expression .)
    Char            reduce using rule 40 (oparray -> plus expression .)
    String          reduce using rule 40 (oparray -> plus expression .)
    sin             reduce using rule 40 (oparray -> plus expression .)
    cos             reduce using rule 40 (oparray -> plus expression .)
    tan             reduce using rule 40 (oparray -> plus expression .)
    sqrt            reduce using rule 40 (oparray -> plus expression .)
    log10           reduce using rule 40 (oparray -> plus expression .)
    uppercase       reduce using rule 40 (oparray -> plus expression .)
    lowercase       reduce using rule 40 (oparray -> plus expression .)
    trunc           reduce using rule 40 (oparray -> plus expression .)
    float           reduce using rule 40 (oparray -> plus expression .)
    string          reduce using rule 40 (oparray -> plus expression .)
    typeof          reduce using rule 40 (oparray -> plus expression .)
    length          reduce using rule 40 (oparray -> plus expression .)
    log             reduce using rule 40 (oparray -> plus expression .)
    parse           reduce using rule 40 (oparray -> plus expression .)
    push            reduce using rule 40 (oparray -> plus expression .)
    pop             reduce using rule 40 (oparray -> plus expression .)
    end             reduce using rule 40 (oparray -> plus expression .)
    rsqbrack        reduce using rule 40 (oparray -> plus expression .)
    comma           reduce using rule 40 (oparray -> plus expression .)
    elseif          reduce using rule 40 (oparray -> plus expression .)
    else            reduce using rule 40 (oparray -> plus expression .)
    twopoint        reduce using rule 40 (oparray -> plus expression .)
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    point           shift and go to state 77

  ! mul             [ reduce using rule 40 (oparray -> plus expression .) ]
  ! div             [ reduce using rule 40 (oparray -> plus expression .) ]
  ! mod             [ reduce using rule 40 (oparray -> plus expression .) ]
  ! exp             [ reduce using rule 40 (oparray -> plus expression .) ]
  ! point           [ reduce using rule 40 (oparray -> plus expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! plus            [ shift and go to state 63 ]
  ! minus           [ shift and go to state 64 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 163

    (41) oparray -> minus expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 41 (oparray -> minus expression .)
    definir         reduce using rule 41 (oparray -> minus expression .)
    plus            reduce using rule 41 (oparray -> minus expression .)
    minus           reduce using rule 41 (oparray -> minus expression .)
    gte             reduce using rule 41 (oparray -> minus expression .)
    lte             reduce using rule 41 (oparray -> minus expression .)
    gt              reduce using rule 41 (oparray -> minus expression .)
    lt              reduce using rule 41 (oparray -> minus expression .)
    eq              reduce using rule 41 (oparray -> minus expression .)
    neq             reduce using rule 41 (oparray -> minus expression .)
    and             reduce using rule 41 (oparray -> minus expression .)
    or              reduce using rule 41 (oparray -> minus expression .)
    terminator      reduce using rule 41 (oparray -> minus expression .)
    rparen          reduce using rule 41 (oparray -> minus expression .)
    function        reduce using rule 41 (oparray -> minus expression .)
    print           reduce using rule 41 (oparray -> minus expression .)
    println         reduce using rule 41 (oparray -> minus expression .)
    while           reduce using rule 41 (oparray -> minus expression .)
    for             reduce using rule 41 (oparray -> minus expression .)
    struct          reduce using rule 41 (oparray -> minus expression .)
    mutable         reduce using rule 41 (oparray -> minus expression .)
    nothing         reduce using rule 41 (oparray -> minus expression .)
    global          reduce using rule 41 (oparray -> minus expression .)
    local           reduce using rule 41 (oparray -> minus expression .)
    no              reduce using rule 41 (oparray -> minus expression .)
    identifier      reduce using rule 41 (oparray -> minus expression .)
    lsqbrack        reduce using rule 41 (oparray -> minus expression .)
    valor_cadena    reduce using rule 41 (oparray -> minus expression .)
    break           reduce using rule 41 (oparray -> minus expression .)
    continue        reduce using rule 41 (oparray -> minus expression .)
    return          reduce using rule 41 (oparray -> minus expression .)
    lparen          reduce using rule 41 (oparray -> minus expression .)
    if              reduce using rule 41 (oparray -> minus expression .)
    valor_entero    reduce using rule 41 (oparray -> minus expression .)
    valor_decimal   reduce using rule 41 (oparray -> minus expression .)
    valor_caracter  reduce using rule 41 (oparray -> minus expression .)
    verdadero       reduce using rule 41 (oparray -> minus expression .)
    falso           reduce using rule 41 (oparray -> minus expression .)
    Int64           reduce using rule 41 (oparray -> minus expression .)
    Float64         reduce using rule 41 (oparray -> minus expression .)
    Bool            reduce using rule 41 (oparray -> minus expression .)
    Char            reduce using rule 41 (oparray -> minus expression .)
    String          reduce using rule 41 (oparray -> minus expression .)
    sin             reduce using rule 41 (oparray -> minus expression .)
    cos             reduce using rule 41 (oparray -> minus expression .)
    tan             reduce using rule 41 (oparray -> minus expression .)
    sqrt            reduce using rule 41 (oparray -> minus expression .)
    log10           reduce using rule 41 (oparray -> minus expression .)
    uppercase       reduce using rule 41 (oparray -> minus expression .)
    lowercase       reduce using rule 41 (oparray -> minus expression .)
    trunc           reduce using rule 41 (oparray -> minus expression .)
    float           reduce using rule 41 (oparray -> minus expression .)
    string          reduce using rule 41 (oparray -> minus expression .)
    typeof          reduce using rule 41 (oparray -> minus expression .)
    length          reduce using rule 41 (oparray -> minus expression .)
    log             reduce using rule 41 (oparray -> minus expression .)
    parse           reduce using rule 41 (oparray -> minus expression .)
    push            reduce using rule 41 (oparray -> minus expression .)
    pop             reduce using rule 41 (oparray -> minus expression .)
    end             reduce using rule 41 (oparray -> minus expression .)
    rsqbrack        reduce using rule 41 (oparray -> minus expression .)
    comma           reduce using rule 41 (oparray -> minus expression .)
    elseif          reduce using rule 41 (oparray -> minus expression .)
    else            reduce using rule 41 (oparray -> minus expression .)
    twopoint        reduce using rule 41 (oparray -> minus expression .)
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    point           shift and go to state 77

  ! mul             [ reduce using rule 41 (oparray -> minus expression .) ]
  ! div             [ reduce using rule 41 (oparray -> minus expression .) ]
  ! mod             [ reduce using rule 41 (oparray -> minus expression .) ]
  ! exp             [ reduce using rule 41 (oparray -> minus expression .) ]
  ! point           [ reduce using rule 41 (oparray -> minus expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! plus            [ shift and go to state 63 ]
  ! minus           [ shift and go to state 64 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 164

    (42) oparray -> mul expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 42 (oparray -> mul expression .)
    definir         reduce using rule 42 (oparray -> mul expression .)
    plus            reduce using rule 42 (oparray -> mul expression .)
    minus           reduce using rule 42 (oparray -> mul expression .)
    mul             reduce using rule 42 (oparray -> mul expression .)
    div             reduce using rule 42 (oparray -> mul expression .)
    mod             reduce using rule 42 (oparray -> mul expression .)
    gte             reduce using rule 42 (oparray -> mul expression .)
    lte             reduce using rule 42 (oparray -> mul expression .)
    gt              reduce using rule 42 (oparray -> mul expression .)
    lt              reduce using rule 42 (oparray -> mul expression .)
    eq              reduce using rule 42 (oparray -> mul expression .)
    neq             reduce using rule 42 (oparray -> mul expression .)
    and             reduce using rule 42 (oparray -> mul expression .)
    or              reduce using rule 42 (oparray -> mul expression .)
    terminator      reduce using rule 42 (oparray -> mul expression .)
    rparen          reduce using rule 42 (oparray -> mul expression .)
    function        reduce using rule 42 (oparray -> mul expression .)
    print           reduce using rule 42 (oparray -> mul expression .)
    println         reduce using rule 42 (oparray -> mul expression .)
    while           reduce using rule 42 (oparray -> mul expression .)
    for             reduce using rule 42 (oparray -> mul expression .)
    struct          reduce using rule 42 (oparray -> mul expression .)
    mutable         reduce using rule 42 (oparray -> mul expression .)
    nothing         reduce using rule 42 (oparray -> mul expression .)
    global          reduce using rule 42 (oparray -> mul expression .)
    local           reduce using rule 42 (oparray -> mul expression .)
    no              reduce using rule 42 (oparray -> mul expression .)
    identifier      reduce using rule 42 (oparray -> mul expression .)
    lsqbrack        reduce using rule 42 (oparray -> mul expression .)
    valor_cadena    reduce using rule 42 (oparray -> mul expression .)
    break           reduce using rule 42 (oparray -> mul expression .)
    continue        reduce using rule 42 (oparray -> mul expression .)
    return          reduce using rule 42 (oparray -> mul expression .)
    lparen          reduce using rule 42 (oparray -> mul expression .)
    if              reduce using rule 42 (oparray -> mul expression .)
    valor_entero    reduce using rule 42 (oparray -> mul expression .)
    valor_decimal   reduce using rule 42 (oparray -> mul expression .)
    valor_caracter  reduce using rule 42 (oparray -> mul expression .)
    verdadero       reduce using rule 42 (oparray -> mul expression .)
    falso           reduce using rule 42 (oparray -> mul expression .)
    Int64           reduce using rule 42 (oparray -> mul expression .)
    Float64         reduce using rule 42 (oparray -> mul expression .)
    Bool            reduce using rule 42 (oparray -> mul expression .)
    Char            reduce using rule 42 (oparray -> mul expression .)
    String          reduce using rule 42 (oparray -> mul expression .)
    sin             reduce using rule 42 (oparray -> mul expression .)
    cos             reduce using rule 42 (oparray -> mul expression .)
    tan             reduce using rule 42 (oparray -> mul expression .)
    sqrt            reduce using rule 42 (oparray -> mul expression .)
    log10           reduce using rule 42 (oparray -> mul expression .)
    uppercase       reduce using rule 42 (oparray -> mul expression .)
    lowercase       reduce using rule 42 (oparray -> mul expression .)
    trunc           reduce using rule 42 (oparray -> mul expression .)
    float           reduce using rule 42 (oparray -> mul expression .)
    string          reduce using rule 42 (oparray -> mul expression .)
    typeof          reduce using rule 42 (oparray -> mul expression .)
    length          reduce using rule 42 (oparray -> mul expression .)
    log             reduce using rule 42 (oparray -> mul expression .)
    parse           reduce using rule 42 (oparray -> mul expression .)
    push            reduce using rule 42 (oparray -> mul expression .)
    pop             reduce using rule 42 (oparray -> mul expression .)
    end             reduce using rule 42 (oparray -> mul expression .)
    rsqbrack        reduce using rule 42 (oparray -> mul expression .)
    comma           reduce using rule 42 (oparray -> mul expression .)
    elseif          reduce using rule 42 (oparray -> mul expression .)
    else            reduce using rule 42 (oparray -> mul expression .)
    twopoint        reduce using rule 42 (oparray -> mul expression .)
    exp             shift and go to state 68
    point           shift and go to state 77

  ! exp             [ reduce using rule 42 (oparray -> mul expression .) ]
  ! point           [ reduce using rule 42 (oparray -> mul expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! plus            [ shift and go to state 63 ]
  ! minus           [ shift and go to state 64 ]
  ! mul             [ shift and go to state 65 ]
  ! div             [ shift and go to state 66 ]
  ! mod             [ shift and go to state 67 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 165

    (43) oparray -> div expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 43 (oparray -> div expression .)
    definir         reduce using rule 43 (oparray -> div expression .)
    plus            reduce using rule 43 (oparray -> div expression .)
    minus           reduce using rule 43 (oparray -> div expression .)
    mul             reduce using rule 43 (oparray -> div expression .)
    div             reduce using rule 43 (oparray -> div expression .)
    mod             reduce using rule 43 (oparray -> div expression .)
    gte             reduce using rule 43 (oparray -> div expression .)
    lte             reduce using rule 43 (oparray -> div expression .)
    gt              reduce using rule 43 (oparray -> div expression .)
    lt              reduce using rule 43 (oparray -> div expression .)
    eq              reduce using rule 43 (oparray -> div expression .)
    neq             reduce using rule 43 (oparray -> div expression .)
    and             reduce using rule 43 (oparray -> div expression .)
    or              reduce using rule 43 (oparray -> div expression .)
    terminator      reduce using rule 43 (oparray -> div expression .)
    rparen          reduce using rule 43 (oparray -> div expression .)
    function        reduce using rule 43 (oparray -> div expression .)
    print           reduce using rule 43 (oparray -> div expression .)
    println         reduce using rule 43 (oparray -> div expression .)
    while           reduce using rule 43 (oparray -> div expression .)
    for             reduce using rule 43 (oparray -> div expression .)
    struct          reduce using rule 43 (oparray -> div expression .)
    mutable         reduce using rule 43 (oparray -> div expression .)
    nothing         reduce using rule 43 (oparray -> div expression .)
    global          reduce using rule 43 (oparray -> div expression .)
    local           reduce using rule 43 (oparray -> div expression .)
    no              reduce using rule 43 (oparray -> div expression .)
    identifier      reduce using rule 43 (oparray -> div expression .)
    lsqbrack        reduce using rule 43 (oparray -> div expression .)
    valor_cadena    reduce using rule 43 (oparray -> div expression .)
    break           reduce using rule 43 (oparray -> div expression .)
    continue        reduce using rule 43 (oparray -> div expression .)
    return          reduce using rule 43 (oparray -> div expression .)
    lparen          reduce using rule 43 (oparray -> div expression .)
    if              reduce using rule 43 (oparray -> div expression .)
    valor_entero    reduce using rule 43 (oparray -> div expression .)
    valor_decimal   reduce using rule 43 (oparray -> div expression .)
    valor_caracter  reduce using rule 43 (oparray -> div expression .)
    verdadero       reduce using rule 43 (oparray -> div expression .)
    falso           reduce using rule 43 (oparray -> div expression .)
    Int64           reduce using rule 43 (oparray -> div expression .)
    Float64         reduce using rule 43 (oparray -> div expression .)
    Bool            reduce using rule 43 (oparray -> div expression .)
    Char            reduce using rule 43 (oparray -> div expression .)
    String          reduce using rule 43 (oparray -> div expression .)
    sin             reduce using rule 43 (oparray -> div expression .)
    cos             reduce using rule 43 (oparray -> div expression .)
    tan             reduce using rule 43 (oparray -> div expression .)
    sqrt            reduce using rule 43 (oparray -> div expression .)
    log10           reduce using rule 43 (oparray -> div expression .)
    uppercase       reduce using rule 43 (oparray -> div expression .)
    lowercase       reduce using rule 43 (oparray -> div expression .)
    trunc           reduce using rule 43 (oparray -> div expression .)
    float           reduce using rule 43 (oparray -> div expression .)
    string          reduce using rule 43 (oparray -> div expression .)
    typeof          reduce using rule 43 (oparray -> div expression .)
    length          reduce using rule 43 (oparray -> div expression .)
    log             reduce using rule 43 (oparray -> div expression .)
    parse           reduce using rule 43 (oparray -> div expression .)
    push            reduce using rule 43 (oparray -> div expression .)
    pop             reduce using rule 43 (oparray -> div expression .)
    end             reduce using rule 43 (oparray -> div expression .)
    rsqbrack        reduce using rule 43 (oparray -> div expression .)
    comma           reduce using rule 43 (oparray -> div expression .)
    elseif          reduce using rule 43 (oparray -> div expression .)
    else            reduce using rule 43 (oparray -> div expression .)
    twopoint        reduce using rule 43 (oparray -> div expression .)
    exp             shift and go to state 68
    point           shift and go to state 77

  ! exp             [ reduce using rule 43 (oparray -> div expression .) ]
  ! point           [ reduce using rule 43 (oparray -> div expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! plus            [ shift and go to state 63 ]
  ! minus           [ shift and go to state 64 ]
  ! mul             [ shift and go to state 65 ]
  ! div             [ shift and go to state 66 ]
  ! mod             [ shift and go to state 67 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 166

    (44) oparray -> mod expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 44 (oparray -> mod expression .)
    definir         reduce using rule 44 (oparray -> mod expression .)
    plus            reduce using rule 44 (oparray -> mod expression .)
    minus           reduce using rule 44 (oparray -> mod expression .)
    mul             reduce using rule 44 (oparray -> mod expression .)
    div             reduce using rule 44 (oparray -> mod expression .)
    mod             reduce using rule 44 (oparray -> mod expression .)
    gte             reduce using rule 44 (oparray -> mod expression .)
    lte             reduce using rule 44 (oparray -> mod expression .)
    gt              reduce using rule 44 (oparray -> mod expression .)
    lt              reduce using rule 44 (oparray -> mod expression .)
    eq              reduce using rule 44 (oparray -> mod expression .)
    neq             reduce using rule 44 (oparray -> mod expression .)
    and             reduce using rule 44 (oparray -> mod expression .)
    or              reduce using rule 44 (oparray -> mod expression .)
    terminator      reduce using rule 44 (oparray -> mod expression .)
    rparen          reduce using rule 44 (oparray -> mod expression .)
    function        reduce using rule 44 (oparray -> mod expression .)
    print           reduce using rule 44 (oparray -> mod expression .)
    println         reduce using rule 44 (oparray -> mod expression .)
    while           reduce using rule 44 (oparray -> mod expression .)
    for             reduce using rule 44 (oparray -> mod expression .)
    struct          reduce using rule 44 (oparray -> mod expression .)
    mutable         reduce using rule 44 (oparray -> mod expression .)
    nothing         reduce using rule 44 (oparray -> mod expression .)
    global          reduce using rule 44 (oparray -> mod expression .)
    local           reduce using rule 44 (oparray -> mod expression .)
    no              reduce using rule 44 (oparray -> mod expression .)
    identifier      reduce using rule 44 (oparray -> mod expression .)
    lsqbrack        reduce using rule 44 (oparray -> mod expression .)
    valor_cadena    reduce using rule 44 (oparray -> mod expression .)
    break           reduce using rule 44 (oparray -> mod expression .)
    continue        reduce using rule 44 (oparray -> mod expression .)
    return          reduce using rule 44 (oparray -> mod expression .)
    lparen          reduce using rule 44 (oparray -> mod expression .)
    if              reduce using rule 44 (oparray -> mod expression .)
    valor_entero    reduce using rule 44 (oparray -> mod expression .)
    valor_decimal   reduce using rule 44 (oparray -> mod expression .)
    valor_caracter  reduce using rule 44 (oparray -> mod expression .)
    verdadero       reduce using rule 44 (oparray -> mod expression .)
    falso           reduce using rule 44 (oparray -> mod expression .)
    Int64           reduce using rule 44 (oparray -> mod expression .)
    Float64         reduce using rule 44 (oparray -> mod expression .)
    Bool            reduce using rule 44 (oparray -> mod expression .)
    Char            reduce using rule 44 (oparray -> mod expression .)
    String          reduce using rule 44 (oparray -> mod expression .)
    sin             reduce using rule 44 (oparray -> mod expression .)
    cos             reduce using rule 44 (oparray -> mod expression .)
    tan             reduce using rule 44 (oparray -> mod expression .)
    sqrt            reduce using rule 44 (oparray -> mod expression .)
    log10           reduce using rule 44 (oparray -> mod expression .)
    uppercase       reduce using rule 44 (oparray -> mod expression .)
    lowercase       reduce using rule 44 (oparray -> mod expression .)
    trunc           reduce using rule 44 (oparray -> mod expression .)
    float           reduce using rule 44 (oparray -> mod expression .)
    string          reduce using rule 44 (oparray -> mod expression .)
    typeof          reduce using rule 44 (oparray -> mod expression .)
    length          reduce using rule 44 (oparray -> mod expression .)
    log             reduce using rule 44 (oparray -> mod expression .)
    parse           reduce using rule 44 (oparray -> mod expression .)
    push            reduce using rule 44 (oparray -> mod expression .)
    pop             reduce using rule 44 (oparray -> mod expression .)
    end             reduce using rule 44 (oparray -> mod expression .)
    rsqbrack        reduce using rule 44 (oparray -> mod expression .)
    comma           reduce using rule 44 (oparray -> mod expression .)
    elseif          reduce using rule 44 (oparray -> mod expression .)
    else            reduce using rule 44 (oparray -> mod expression .)
    twopoint        reduce using rule 44 (oparray -> mod expression .)
    exp             shift and go to state 68
    point           shift and go to state 77

  ! exp             [ reduce using rule 44 (oparray -> mod expression .) ]
  ! point           [ reduce using rule 44 (oparray -> mod expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! plus            [ shift and go to state 63 ]
  ! minus           [ shift and go to state 64 ]
  ! mul             [ shift and go to state 65 ]
  ! div             [ shift and go to state 66 ]
  ! mod             [ shift and go to state 67 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 167

    (45) oparray -> exp expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    equal           reduce using rule 45 (oparray -> exp expression .)
    definir         reduce using rule 45 (oparray -> exp expression .)
    plus            reduce using rule 45 (oparray -> exp expression .)
    minus           reduce using rule 45 (oparray -> exp expression .)
    mul             reduce using rule 45 (oparray -> exp expression .)
    div             reduce using rule 45 (oparray -> exp expression .)
    mod             reduce using rule 45 (oparray -> exp expression .)
    gte             reduce using rule 45 (oparray -> exp expression .)
    lte             reduce using rule 45 (oparray -> exp expression .)
    gt              reduce using rule 45 (oparray -> exp expression .)
    lt              reduce using rule 45 (oparray -> exp expression .)
    eq              reduce using rule 45 (oparray -> exp expression .)
    neq             reduce using rule 45 (oparray -> exp expression .)
    and             reduce using rule 45 (oparray -> exp expression .)
    or              reduce using rule 45 (oparray -> exp expression .)
    terminator      reduce using rule 45 (oparray -> exp expression .)
    rparen          reduce using rule 45 (oparray -> exp expression .)
    function        reduce using rule 45 (oparray -> exp expression .)
    print           reduce using rule 45 (oparray -> exp expression .)
    println         reduce using rule 45 (oparray -> exp expression .)
    while           reduce using rule 45 (oparray -> exp expression .)
    for             reduce using rule 45 (oparray -> exp expression .)
    struct          reduce using rule 45 (oparray -> exp expression .)
    mutable         reduce using rule 45 (oparray -> exp expression .)
    nothing         reduce using rule 45 (oparray -> exp expression .)
    global          reduce using rule 45 (oparray -> exp expression .)
    local           reduce using rule 45 (oparray -> exp expression .)
    no              reduce using rule 45 (oparray -> exp expression .)
    identifier      reduce using rule 45 (oparray -> exp expression .)
    lsqbrack        reduce using rule 45 (oparray -> exp expression .)
    valor_cadena    reduce using rule 45 (oparray -> exp expression .)
    break           reduce using rule 45 (oparray -> exp expression .)
    continue        reduce using rule 45 (oparray -> exp expression .)
    return          reduce using rule 45 (oparray -> exp expression .)
    lparen          reduce using rule 45 (oparray -> exp expression .)
    if              reduce using rule 45 (oparray -> exp expression .)
    valor_entero    reduce using rule 45 (oparray -> exp expression .)
    valor_decimal   reduce using rule 45 (oparray -> exp expression .)
    valor_caracter  reduce using rule 45 (oparray -> exp expression .)
    verdadero       reduce using rule 45 (oparray -> exp expression .)
    falso           reduce using rule 45 (oparray -> exp expression .)
    Int64           reduce using rule 45 (oparray -> exp expression .)
    Float64         reduce using rule 45 (oparray -> exp expression .)
    Bool            reduce using rule 45 (oparray -> exp expression .)
    Char            reduce using rule 45 (oparray -> exp expression .)
    String          reduce using rule 45 (oparray -> exp expression .)
    sin             reduce using rule 45 (oparray -> exp expression .)
    cos             reduce using rule 45 (oparray -> exp expression .)
    tan             reduce using rule 45 (oparray -> exp expression .)
    sqrt            reduce using rule 45 (oparray -> exp expression .)
    log10           reduce using rule 45 (oparray -> exp expression .)
    uppercase       reduce using rule 45 (oparray -> exp expression .)
    lowercase       reduce using rule 45 (oparray -> exp expression .)
    trunc           reduce using rule 45 (oparray -> exp expression .)
    float           reduce using rule 45 (oparray -> exp expression .)
    string          reduce using rule 45 (oparray -> exp expression .)
    typeof          reduce using rule 45 (oparray -> exp expression .)
    length          reduce using rule 45 (oparray -> exp expression .)
    log             reduce using rule 45 (oparray -> exp expression .)
    parse           reduce using rule 45 (oparray -> exp expression .)
    push            reduce using rule 45 (oparray -> exp expression .)
    pop             reduce using rule 45 (oparray -> exp expression .)
    end             reduce using rule 45 (oparray -> exp expression .)
    rsqbrack        reduce using rule 45 (oparray -> exp expression .)
    comma           reduce using rule 45 (oparray -> exp expression .)
    elseif          reduce using rule 45 (oparray -> exp expression .)
    else            reduce using rule 45 (oparray -> exp expression .)
    twopoint        reduce using rule 45 (oparray -> exp expression .)
    exp             shift and go to state 68
    point           shift and go to state 77

  ! exp             [ reduce using rule 45 (oparray -> exp expression .) ]
  ! point           [ reduce using rule 45 (oparray -> exp expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! plus            [ shift and go to state 63 ]
  ! minus           [ shift and go to state 64 ]
  ! mul             [ shift and go to state 65 ]
  ! div             [ shift and go to state 66 ]
  ! mod             [ shift and go to state 67 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 168

    (14) statement -> function identifier lparen arguments . rparen statement_list end
    (113) arguments -> arguments . comma expression

    rparen          shift and go to state 197
    comma           shift and go to state 155


state 169

    (67) expression -> identifier lparen arguments rparen .

    equal           reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    definir         reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    plus            reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    minus           reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    mul             reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    div             reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    mod             reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    exp             reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    gte             reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    lte             reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    gt              reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    lt              reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    eq              reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    neq             reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    and             reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    or              reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    point           reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    terminator      reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    rparen          reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    function        reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    print           reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    println         reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    while           reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    for             reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    struct          reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    mutable         reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    nothing         reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    global          reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    local           reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    no              reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    identifier      reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    lsqbrack        reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    valor_cadena    reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    break           reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    continue        reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    return          reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    lparen          reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    if              reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    valor_entero    reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    valor_decimal   reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    valor_caracter  reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    verdadero       reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    falso           reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    Int64           reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    Float64         reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    Bool            reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    Char            reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    String          reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    sin             reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    cos             reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    tan             reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    sqrt            reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    log10           reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    uppercase       reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    lowercase       reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    trunc           reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    float           reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    string          reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    typeof          reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    length          reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    log             reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    parse           reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    push            reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    pop             reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    end             reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    rsqbrack        reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    comma           reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    elseif          reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    else            reduce using rule 67 (expression -> identifier lparen arguments rparen .)
    twopoint        reduce using rule 67 (expression -> identifier lparen arguments rparen .)


state 170

    (73) list_index -> list_index lsqbrack argsarray . rsqbrack

    rsqbrack        shift and go to state 198


state 171

    (72) list_index -> lsqbrack argsarray rsqbrack .

    lsqbrack        reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    equal           reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    definir         reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    plus            reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    minus           reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    mul             reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    div             reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    mod             reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    exp             reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    gte             reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    lte             reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    gt              reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    lt              reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    eq              reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    neq             reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    and             reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    or              reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    point           reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    terminator      reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    rparen          reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    function        reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    print           reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    println         reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    while           reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    for             reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    struct          reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    mutable         reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    nothing         reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    global          reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    local           reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    no              reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    identifier      reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    valor_cadena    reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    break           reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    continue        reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    return          reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    lparen          reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    if              reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    valor_entero    reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    valor_decimal   reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    valor_caracter  reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    verdadero       reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    falso           reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    Int64           reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    Float64         reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    Bool            reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    Char            reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    String          reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    sin             reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    cos             reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    tan             reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    sqrt            reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    log10           reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    uppercase       reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    lowercase       reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    trunc           reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    float           reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    string          reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    typeof          reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    length          reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    log             reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    parse           reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    push            reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    pop             reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    end             reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    rsqbrack        reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    comma           reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    elseif          reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    else            reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)
    twopoint        reduce using rule 72 (list_index -> lsqbrack argsarray rsqbrack .)


state 172

    (81) slice_left -> expression twopoint .
    (83) slice_all -> expression twopoint . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    rsqbrack        reduce using rule 81 (slice_left -> expression twopoint .)
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 199
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 173

    (82) slice_right -> twopoint expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    rsqbrack        reduce using rule 82 (slice_right -> twopoint expression .)
    equal           shift and go to state 61
    definir         shift and go to state 62
    plus            shift and go to state 63
    minus           shift and go to state 64
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    eq              shift and go to state 73
    neq             shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    point           shift and go to state 77


state 174

    (15) statement -> print lparen arguments rparen .

    terminator      reduce using rule 15 (statement -> print lparen arguments rparen .)


state 175

    (16) statement -> println lparen arguments rparen .

    terminator      reduce using rule 16 (statement -> println lparen arguments rparen .)


state 176

    (17) statement -> while expression statement_list end .

    terminator      reduce using rule 17 (statement -> while expression statement_list end .)


state 177

    (50) expression -> expression plus expression .
    (56) expression -> plus expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

  ! reduce/reduce conflict for equal resolved using rule 50 (expression -> expression plus expression .)
  ! reduce/reduce conflict for definir resolved using rule 50 (expression -> expression plus expression .)
  ! reduce/reduce conflict for plus resolved using rule 50 (expression -> expression plus expression .)
  ! reduce/reduce conflict for minus resolved using rule 50 (expression -> expression plus expression .)
  ! reduce/reduce conflict for mul resolved using rule 50 (expression -> expression plus expression .)
  ! reduce/reduce conflict for div resolved using rule 50 (expression -> expression plus expression .)
  ! reduce/reduce conflict for mod resolved using rule 50 (expression -> expression plus expression .)
  ! reduce/reduce conflict for exp resolved using rule 50 (expression -> expression plus expression .)
  ! reduce/reduce conflict for gte resolved using rule 50 (expression -> expression plus expression .)
  ! reduce/reduce conflict for lte resolved using rule 50 (expression -> expression plus expression .)
  ! reduce/reduce conflict for gt resolved using rule 50 (expression -> expression plus expression .)
  ! reduce/reduce conflict for lt resolved using rule 50 (expression -> expression plus expression .)
  ! reduce/reduce conflict for eq resolved using rule 50 (expression -> expression plus expression .)
  ! reduce/reduce conflict for neq resolved using rule 50 (expression -> expression plus expression .)
  ! reduce/reduce conflict for and resolved using rule 50 (expression -> expression plus expression .)
  ! reduce/reduce conflict for or resolved using rule 50 (expression -> expression plus expression .)
  ! reduce/reduce conflict for point resolved using rule 50 (expression -> expression plus expression .)
    equal           reduce using rule 50 (expression -> expression plus expression .)
    definir         reduce using rule 50 (expression -> expression plus expression .)
    plus            reduce using rule 50 (expression -> expression plus expression .)
    minus           reduce using rule 50 (expression -> expression plus expression .)
    gte             reduce using rule 50 (expression -> expression plus expression .)
    lte             reduce using rule 50 (expression -> expression plus expression .)
    gt              reduce using rule 50 (expression -> expression plus expression .)
    lt              reduce using rule 50 (expression -> expression plus expression .)
    eq              reduce using rule 50 (expression -> expression plus expression .)
    neq             reduce using rule 50 (expression -> expression plus expression .)
    and             reduce using rule 50 (expression -> expression plus expression .)
    or              reduce using rule 50 (expression -> expression plus expression .)
    function        reduce using rule 50 (expression -> expression plus expression .)
    print           reduce using rule 50 (expression -> expression plus expression .)
    println         reduce using rule 50 (expression -> expression plus expression .)
    while           reduce using rule 50 (expression -> expression plus expression .)
    for             reduce using rule 50 (expression -> expression plus expression .)
    struct          reduce using rule 50 (expression -> expression plus expression .)
    mutable         reduce using rule 50 (expression -> expression plus expression .)
    nothing         reduce using rule 50 (expression -> expression plus expression .)
    global          reduce using rule 50 (expression -> expression plus expression .)
    local           reduce using rule 50 (expression -> expression plus expression .)
    no              reduce using rule 50 (expression -> expression plus expression .)
    identifier      reduce using rule 50 (expression -> expression plus expression .)
    lsqbrack        reduce using rule 50 (expression -> expression plus expression .)
    valor_cadena    reduce using rule 50 (expression -> expression plus expression .)
    break           reduce using rule 50 (expression -> expression plus expression .)
    continue        reduce using rule 50 (expression -> expression plus expression .)
    return          reduce using rule 50 (expression -> expression plus expression .)
    lparen          reduce using rule 50 (expression -> expression plus expression .)
    if              reduce using rule 50 (expression -> expression plus expression .)
    valor_entero    reduce using rule 50 (expression -> expression plus expression .)
    valor_decimal   reduce using rule 50 (expression -> expression plus expression .)
    valor_caracter  reduce using rule 50 (expression -> expression plus expression .)
    verdadero       reduce using rule 50 (expression -> expression plus expression .)
    falso           reduce using rule 50 (expression -> expression plus expression .)
    Int64           reduce using rule 50 (expression -> expression plus expression .)
    Float64         reduce using rule 50 (expression -> expression plus expression .)
    Bool            reduce using rule 50 (expression -> expression plus expression .)
    Char            reduce using rule 50 (expression -> expression plus expression .)
    String          reduce using rule 50 (expression -> expression plus expression .)
    sin             reduce using rule 50 (expression -> expression plus expression .)
    cos             reduce using rule 50 (expression -> expression plus expression .)
    tan             reduce using rule 50 (expression -> expression plus expression .)
    sqrt            reduce using rule 50 (expression -> expression plus expression .)
    log10           reduce using rule 50 (expression -> expression plus expression .)
    uppercase       reduce using rule 50 (expression -> expression plus expression .)
    lowercase       reduce using rule 50 (expression -> expression plus expression .)
    trunc           reduce using rule 50 (expression -> expression plus expression .)
    float           reduce using rule 50 (expression -> expression plus expression .)
    string          reduce using rule 50 (expression -> expression plus expression .)
    typeof          reduce using rule 50 (expression -> expression plus expression .)
    length          reduce using rule 50 (expression -> expression plus expression .)
    log             reduce using rule 50 (expression -> expression plus expression .)
    parse           reduce using rule 50 (expression -> expression plus expression .)
    push            reduce using rule 50 (expression -> expression plus expression .)
    pop             reduce using rule 50 (expression -> expression plus expression .)
    end             reduce using rule 50 (expression -> expression plus expression .)
    elseif          reduce using rule 50 (expression -> expression plus expression .)
    else            reduce using rule 50 (expression -> expression plus expression .)
    terminator      reduce using rule 56 (expression -> plus expression .)
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    point           shift and go to state 77

  ! mul             [ reduce using rule 50 (expression -> expression plus expression .) ]
  ! div             [ reduce using rule 50 (expression -> expression plus expression .) ]
  ! mod             [ reduce using rule 50 (expression -> expression plus expression .) ]
  ! exp             [ reduce using rule 50 (expression -> expression plus expression .) ]
  ! point           [ reduce using rule 50 (expression -> expression plus expression .) ]
  ! equal           [ reduce using rule 56 (expression -> plus expression .) ]
  ! definir         [ reduce using rule 56 (expression -> plus expression .) ]
  ! plus            [ reduce using rule 56 (expression -> plus expression .) ]
  ! minus           [ reduce using rule 56 (expression -> plus expression .) ]
  ! mul             [ reduce using rule 56 (expression -> plus expression .) ]
  ! div             [ reduce using rule 56 (expression -> plus expression .) ]
  ! mod             [ reduce using rule 56 (expression -> plus expression .) ]
  ! exp             [ reduce using rule 56 (expression -> plus expression .) ]
  ! gte             [ reduce using rule 56 (expression -> plus expression .) ]
  ! lte             [ reduce using rule 56 (expression -> plus expression .) ]
  ! gt              [ reduce using rule 56 (expression -> plus expression .) ]
  ! lt              [ reduce using rule 56 (expression -> plus expression .) ]
  ! eq              [ reduce using rule 56 (expression -> plus expression .) ]
  ! neq             [ reduce using rule 56 (expression -> plus expression .) ]
  ! and             [ reduce using rule 56 (expression -> plus expression .) ]
  ! or              [ reduce using rule 56 (expression -> plus expression .) ]
  ! point           [ reduce using rule 56 (expression -> plus expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! plus            [ shift and go to state 63 ]
  ! minus           [ shift and go to state 64 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 178

    (51) expression -> expression minus expression .
    (57) expression -> minus expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

  ! reduce/reduce conflict for equal resolved using rule 51 (expression -> expression minus expression .)
  ! reduce/reduce conflict for definir resolved using rule 51 (expression -> expression minus expression .)
  ! reduce/reduce conflict for plus resolved using rule 51 (expression -> expression minus expression .)
  ! reduce/reduce conflict for minus resolved using rule 51 (expression -> expression minus expression .)
  ! reduce/reduce conflict for mul resolved using rule 51 (expression -> expression minus expression .)
  ! reduce/reduce conflict for div resolved using rule 51 (expression -> expression minus expression .)
  ! reduce/reduce conflict for mod resolved using rule 51 (expression -> expression minus expression .)
  ! reduce/reduce conflict for exp resolved using rule 51 (expression -> expression minus expression .)
  ! reduce/reduce conflict for gte resolved using rule 51 (expression -> expression minus expression .)
  ! reduce/reduce conflict for lte resolved using rule 51 (expression -> expression minus expression .)
  ! reduce/reduce conflict for gt resolved using rule 51 (expression -> expression minus expression .)
  ! reduce/reduce conflict for lt resolved using rule 51 (expression -> expression minus expression .)
  ! reduce/reduce conflict for eq resolved using rule 51 (expression -> expression minus expression .)
  ! reduce/reduce conflict for neq resolved using rule 51 (expression -> expression minus expression .)
  ! reduce/reduce conflict for and resolved using rule 51 (expression -> expression minus expression .)
  ! reduce/reduce conflict for or resolved using rule 51 (expression -> expression minus expression .)
  ! reduce/reduce conflict for point resolved using rule 51 (expression -> expression minus expression .)
    equal           reduce using rule 51 (expression -> expression minus expression .)
    definir         reduce using rule 51 (expression -> expression minus expression .)
    plus            reduce using rule 51 (expression -> expression minus expression .)
    minus           reduce using rule 51 (expression -> expression minus expression .)
    gte             reduce using rule 51 (expression -> expression minus expression .)
    lte             reduce using rule 51 (expression -> expression minus expression .)
    gt              reduce using rule 51 (expression -> expression minus expression .)
    lt              reduce using rule 51 (expression -> expression minus expression .)
    eq              reduce using rule 51 (expression -> expression minus expression .)
    neq             reduce using rule 51 (expression -> expression minus expression .)
    and             reduce using rule 51 (expression -> expression minus expression .)
    or              reduce using rule 51 (expression -> expression minus expression .)
    function        reduce using rule 51 (expression -> expression minus expression .)
    print           reduce using rule 51 (expression -> expression minus expression .)
    println         reduce using rule 51 (expression -> expression minus expression .)
    while           reduce using rule 51 (expression -> expression minus expression .)
    for             reduce using rule 51 (expression -> expression minus expression .)
    struct          reduce using rule 51 (expression -> expression minus expression .)
    mutable         reduce using rule 51 (expression -> expression minus expression .)
    nothing         reduce using rule 51 (expression -> expression minus expression .)
    global          reduce using rule 51 (expression -> expression minus expression .)
    local           reduce using rule 51 (expression -> expression minus expression .)
    no              reduce using rule 51 (expression -> expression minus expression .)
    identifier      reduce using rule 51 (expression -> expression minus expression .)
    lsqbrack        reduce using rule 51 (expression -> expression minus expression .)
    valor_cadena    reduce using rule 51 (expression -> expression minus expression .)
    break           reduce using rule 51 (expression -> expression minus expression .)
    continue        reduce using rule 51 (expression -> expression minus expression .)
    return          reduce using rule 51 (expression -> expression minus expression .)
    lparen          reduce using rule 51 (expression -> expression minus expression .)
    if              reduce using rule 51 (expression -> expression minus expression .)
    valor_entero    reduce using rule 51 (expression -> expression minus expression .)
    valor_decimal   reduce using rule 51 (expression -> expression minus expression .)
    valor_caracter  reduce using rule 51 (expression -> expression minus expression .)
    verdadero       reduce using rule 51 (expression -> expression minus expression .)
    falso           reduce using rule 51 (expression -> expression minus expression .)
    Int64           reduce using rule 51 (expression -> expression minus expression .)
    Float64         reduce using rule 51 (expression -> expression minus expression .)
    Bool            reduce using rule 51 (expression -> expression minus expression .)
    Char            reduce using rule 51 (expression -> expression minus expression .)
    String          reduce using rule 51 (expression -> expression minus expression .)
    sin             reduce using rule 51 (expression -> expression minus expression .)
    cos             reduce using rule 51 (expression -> expression minus expression .)
    tan             reduce using rule 51 (expression -> expression minus expression .)
    sqrt            reduce using rule 51 (expression -> expression minus expression .)
    log10           reduce using rule 51 (expression -> expression minus expression .)
    uppercase       reduce using rule 51 (expression -> expression minus expression .)
    lowercase       reduce using rule 51 (expression -> expression minus expression .)
    trunc           reduce using rule 51 (expression -> expression minus expression .)
    float           reduce using rule 51 (expression -> expression minus expression .)
    string          reduce using rule 51 (expression -> expression minus expression .)
    typeof          reduce using rule 51 (expression -> expression minus expression .)
    length          reduce using rule 51 (expression -> expression minus expression .)
    log             reduce using rule 51 (expression -> expression minus expression .)
    parse           reduce using rule 51 (expression -> expression minus expression .)
    push            reduce using rule 51 (expression -> expression minus expression .)
    pop             reduce using rule 51 (expression -> expression minus expression .)
    end             reduce using rule 51 (expression -> expression minus expression .)
    elseif          reduce using rule 51 (expression -> expression minus expression .)
    else            reduce using rule 51 (expression -> expression minus expression .)
    terminator      reduce using rule 57 (expression -> minus expression .)
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    point           shift and go to state 77

  ! mul             [ reduce using rule 51 (expression -> expression minus expression .) ]
  ! div             [ reduce using rule 51 (expression -> expression minus expression .) ]
  ! mod             [ reduce using rule 51 (expression -> expression minus expression .) ]
  ! exp             [ reduce using rule 51 (expression -> expression minus expression .) ]
  ! point           [ reduce using rule 51 (expression -> expression minus expression .) ]
  ! equal           [ reduce using rule 57 (expression -> minus expression .) ]
  ! definir         [ reduce using rule 57 (expression -> minus expression .) ]
  ! plus            [ reduce using rule 57 (expression -> minus expression .) ]
  ! minus           [ reduce using rule 57 (expression -> minus expression .) ]
  ! mul             [ reduce using rule 57 (expression -> minus expression .) ]
  ! div             [ reduce using rule 57 (expression -> minus expression .) ]
  ! mod             [ reduce using rule 57 (expression -> minus expression .) ]
  ! exp             [ reduce using rule 57 (expression -> minus expression .) ]
  ! gte             [ reduce using rule 57 (expression -> minus expression .) ]
  ! lte             [ reduce using rule 57 (expression -> minus expression .) ]
  ! gt              [ reduce using rule 57 (expression -> minus expression .) ]
  ! lt              [ reduce using rule 57 (expression -> minus expression .) ]
  ! eq              [ reduce using rule 57 (expression -> minus expression .) ]
  ! neq             [ reduce using rule 57 (expression -> minus expression .) ]
  ! and             [ reduce using rule 57 (expression -> minus expression .) ]
  ! or              [ reduce using rule 57 (expression -> minus expression .) ]
  ! point           [ reduce using rule 57 (expression -> minus expression .) ]
  ! equal           [ shift and go to state 61 ]
  ! definir         [ shift and go to state 62 ]
  ! plus            [ shift and go to state 63 ]
  ! minus           [ shift and go to state 64 ]
  ! gte             [ shift and go to state 69 ]
  ! lte             [ shift and go to state 70 ]
  ! gt              [ shift and go to state 71 ]
  ! lt              [ shift and go to state 72 ]
  ! eq              [ shift and go to state 73 ]
  ! neq             [ shift and go to state 74 ]
  ! and             [ shift and go to state 75 ]
  ! or              [ shift and go to state 76 ]


state 179

    (18) statement -> for container statement_list end .

    terminator      reduce using rule 18 (statement -> for container statement_list end .)


state 180

    (84) container -> identifier in argscontainer .

    function        reduce using rule 84 (container -> identifier in argscontainer .)
    print           reduce using rule 84 (container -> identifier in argscontainer .)
    println         reduce using rule 84 (container -> identifier in argscontainer .)
    while           reduce using rule 84 (container -> identifier in argscontainer .)
    for             reduce using rule 84 (container -> identifier in argscontainer .)
    struct          reduce using rule 84 (container -> identifier in argscontainer .)
    mutable         reduce using rule 84 (container -> identifier in argscontainer .)
    nothing         reduce using rule 84 (container -> identifier in argscontainer .)
    global          reduce using rule 84 (container -> identifier in argscontainer .)
    local           reduce using rule 84 (container -> identifier in argscontainer .)
    plus            reduce using rule 84 (container -> identifier in argscontainer .)
    minus           reduce using rule 84 (container -> identifier in argscontainer .)
    no              reduce using rule 84 (container -> identifier in argscontainer .)
    identifier      reduce using rule 84 (container -> identifier in argscontainer .)
    lsqbrack        reduce using rule 84 (container -> identifier in argscontainer .)
    valor_cadena    reduce using rule 84 (container -> identifier in argscontainer .)
    break           reduce using rule 84 (container -> identifier in argscontainer .)
    continue        reduce using rule 84 (container -> identifier in argscontainer .)
    return          reduce using rule 84 (container -> identifier in argscontainer .)
    lparen          reduce using rule 84 (container -> identifier in argscontainer .)
    if              reduce using rule 84 (container -> identifier in argscontainer .)
    valor_entero    reduce using rule 84 (container -> identifier in argscontainer .)
    valor_decimal   reduce using rule 84 (container -> identifier in argscontainer .)
    valor_caracter  reduce using rule 84 (container -> identifier in argscontainer .)
    verdadero       reduce using rule 84 (container -> identifier in argscontainer .)
    falso           reduce using rule 84 (container -> identifier in argscontainer .)
    Int64           reduce using rule 84 (container -> identifier in argscontainer .)
    Float64         reduce using rule 84 (container -> identifier in argscontainer .)
    Bool            reduce using rule 84 (container -> identifier in argscontainer .)
    Char            reduce using rule 84 (container -> identifier in argscontainer .)
    String          reduce using rule 84 (container -> identifier in argscontainer .)
    sin             reduce using rule 84 (container -> identifier in argscontainer .)
    cos             reduce using rule 84 (container -> identifier in argscontainer .)
    tan             reduce using rule 84 (container -> identifier in argscontainer .)
    sqrt            reduce using rule 84 (container -> identifier in argscontainer .)
    log10           reduce using rule 84 (container -> identifier in argscontainer .)
    uppercase       reduce using rule 84 (container -> identifier in argscontainer .)
    lowercase       reduce using rule 84 (container -> identifier in argscontainer .)
    trunc           reduce using rule 84 (container -> identifier in argscontainer .)
    float           reduce using rule 84 (container -> identifier in argscontainer .)
    string          reduce using rule 84 (container -> identifier in argscontainer .)
    typeof          reduce using rule 84 (container -> identifier in argscontainer .)
    length          reduce using rule 84 (container -> identifier in argscontainer .)
    log             reduce using rule 84 (container -> identifier in argscontainer .)
    parse           reduce using rule 84 (container -> identifier in argscontainer .)
    push            reduce using rule 84 (container -> identifier in argscontainer .)
    pop             reduce using rule 84 (container -> identifier in argscontainer .)
    end             reduce using rule 84 (container -> identifier in argscontainer .)


state 181

    (85) argscontainer -> slice_all .

    function        reduce using rule 85 (argscontainer -> slice_all .)
    print           reduce using rule 85 (argscontainer -> slice_all .)
    println         reduce using rule 85 (argscontainer -> slice_all .)
    while           reduce using rule 85 (argscontainer -> slice_all .)
    for             reduce using rule 85 (argscontainer -> slice_all .)
    struct          reduce using rule 85 (argscontainer -> slice_all .)
    mutable         reduce using rule 85 (argscontainer -> slice_all .)
    nothing         reduce using rule 85 (argscontainer -> slice_all .)
    global          reduce using rule 85 (argscontainer -> slice_all .)
    local           reduce using rule 85 (argscontainer -> slice_all .)
    plus            reduce using rule 85 (argscontainer -> slice_all .)
    minus           reduce using rule 85 (argscontainer -> slice_all .)
    no              reduce using rule 85 (argscontainer -> slice_all .)
    identifier      reduce using rule 85 (argscontainer -> slice_all .)
    lsqbrack        reduce using rule 85 (argscontainer -> slice_all .)
    valor_cadena    reduce using rule 85 (argscontainer -> slice_all .)
    break           reduce using rule 85 (argscontainer -> slice_all .)
    continue        reduce using rule 85 (argscontainer -> slice_all .)
    return          reduce using rule 85 (argscontainer -> slice_all .)
    lparen          reduce using rule 85 (argscontainer -> slice_all .)
    if              reduce using rule 85 (argscontainer -> slice_all .)
    valor_entero    reduce using rule 85 (argscontainer -> slice_all .)
    valor_decimal   reduce using rule 85 (argscontainer -> slice_all .)
    valor_caracter  reduce using rule 85 (argscontainer -> slice_all .)
    verdadero       reduce using rule 85 (argscontainer -> slice_all .)
    falso           reduce using rule 85 (argscontainer -> slice_all .)
    Int64           reduce using rule 85 (argscontainer -> slice_all .)
    Float64         reduce using rule 85 (argscontainer -> slice_all .)
    Bool            reduce using rule 85 (argscontainer -> slice_all .)
    Char            reduce using rule 85 (argscontainer -> slice_all .)
    String          reduce using rule 85 (argscontainer -> slice_all .)
    sin             reduce using rule 85 (argscontainer -> slice_all .)
    cos             reduce using rule 85 (argscontainer -> slice_all .)
    tan             reduce using rule 85 (argscontainer -> slice_all .)
    sqrt            reduce using rule 85 (argscontainer -> slice_all .)
    log10           reduce using rule 85 (argscontainer -> slice_all .)
    uppercase       reduce using rule 85 (argscontainer -> slice_all .)
    lowercase       reduce using rule 85 (argscontainer -> slice_all .)
    trunc           reduce using rule 85 (argscontainer -> slice_all .)
    float           reduce using rule 85 (argscontainer -> slice_all .)
    string          reduce using rule 85 (argscontainer -> slice_all .)
    typeof          reduce using rule 85 (argscontainer -> slice_all .)
    length          reduce using rule 85 (argscontainer -> slice_all .)
    log             reduce using rule 85 (argscontainer -> slice_all .)
    parse           reduce using rule 85 (argscontainer -> slice_all .)
    push            reduce using rule 85 (argscontainer -> slice_all .)
    pop             reduce using rule 85 (argscontainer -> slice_all .)
    end             reduce using rule 85 (argscontainer -> slice_all .)


state 182

    (86) argscontainer -> expression .
    (83) slice_all -> expression . twopoint expression
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

  ! shift/reduce conflict for plus resolved as shift
  ! shift/reduce conflict for minus resolved as shift
    function        reduce using rule 86 (argscontainer -> expression .)
    print           reduce using rule 86 (argscontainer -> expression .)
    println         reduce using rule 86 (argscontainer -> expression .)
    while           reduce using rule 86 (argscontainer -> expression .)
    for             reduce using rule 86 (argscontainer -> expression .)
    struct          reduce using rule 86 (argscontainer -> expression .)
    mutable         reduce using rule 86 (argscontainer -> expression .)
    nothing         reduce using rule 86 (argscontainer -> expression .)
    global          reduce using rule 86 (argscontainer -> expression .)
    local           reduce using rule 86 (argscontainer -> expression .)
    no              reduce using rule 86 (argscontainer -> expression .)
    identifier      reduce using rule 86 (argscontainer -> expression .)
    lsqbrack        reduce using rule 86 (argscontainer -> expression .)
    valor_cadena    reduce using rule 86 (argscontainer -> expression .)
    break           reduce using rule 86 (argscontainer -> expression .)
    continue        reduce using rule 86 (argscontainer -> expression .)
    return          reduce using rule 86 (argscontainer -> expression .)
    lparen          reduce using rule 86 (argscontainer -> expression .)
    if              reduce using rule 86 (argscontainer -> expression .)
    valor_entero    reduce using rule 86 (argscontainer -> expression .)
    valor_decimal   reduce using rule 86 (argscontainer -> expression .)
    valor_caracter  reduce using rule 86 (argscontainer -> expression .)
    verdadero       reduce using rule 86 (argscontainer -> expression .)
    falso           reduce using rule 86 (argscontainer -> expression .)
    Int64           reduce using rule 86 (argscontainer -> expression .)
    Float64         reduce using rule 86 (argscontainer -> expression .)
    Bool            reduce using rule 86 (argscontainer -> expression .)
    Char            reduce using rule 86 (argscontainer -> expression .)
    String          reduce using rule 86 (argscontainer -> expression .)
    sin             reduce using rule 86 (argscontainer -> expression .)
    cos             reduce using rule 86 (argscontainer -> expression .)
    tan             reduce using rule 86 (argscontainer -> expression .)
    sqrt            reduce using rule 86 (argscontainer -> expression .)
    log10           reduce using rule 86 (argscontainer -> expression .)
    uppercase       reduce using rule 86 (argscontainer -> expression .)
    lowercase       reduce using rule 86 (argscontainer -> expression .)
    trunc           reduce using rule 86 (argscontainer -> expression .)
    float           reduce using rule 86 (argscontainer -> expression .)
    string          reduce using rule 86 (argscontainer -> expression .)
    typeof          reduce using rule 86 (argscontainer -> expression .)
    length          reduce using rule 86 (argscontainer -> expression .)
    log             reduce using rule 86 (argscontainer -> expression .)
    parse           reduce using rule 86 (argscontainer -> expression .)
    push            reduce using rule 86 (argscontainer -> expression .)
    pop             reduce using rule 86 (argscontainer -> expression .)
    end             reduce using rule 86 (argscontainer -> expression .)
    twopoint        shift and go to state 200
    equal           shift and go to state 61
    definir         shift and go to state 62
    plus            shift and go to state 63
    minus           shift and go to state 64
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    eq              shift and go to state 73
    neq             shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    point           shift and go to state 77

  ! plus            [ reduce using rule 86 (argscontainer -> expression .) ]
  ! minus           [ reduce using rule 86 (argscontainer -> expression .) ]


state 183

    (19) statement -> struct identifier struct_parameters end .

    terminator      reduce using rule 19 (statement -> struct identifier struct_parameters end .)


state 184

    (116) struct_parameters -> struct_parameters expression . terminator
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    terminator      shift and go to state 201
    equal           shift and go to state 61
    definir         shift and go to state 62
    plus            shift and go to state 63
    minus           shift and go to state 64
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    eq              shift and go to state 73
    neq             shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    point           shift and go to state 77


state 185

    (115) struct_parameters -> expression terminator .

    end             reduce using rule 115 (struct_parameters -> expression terminator .)
    nothing         reduce using rule 115 (struct_parameters -> expression terminator .)
    global          reduce using rule 115 (struct_parameters -> expression terminator .)
    local           reduce using rule 115 (struct_parameters -> expression terminator .)
    plus            reduce using rule 115 (struct_parameters -> expression terminator .)
    minus           reduce using rule 115 (struct_parameters -> expression terminator .)
    no              reduce using rule 115 (struct_parameters -> expression terminator .)
    identifier      reduce using rule 115 (struct_parameters -> expression terminator .)
    lsqbrack        reduce using rule 115 (struct_parameters -> expression terminator .)
    valor_cadena    reduce using rule 115 (struct_parameters -> expression terminator .)
    break           reduce using rule 115 (struct_parameters -> expression terminator .)
    continue        reduce using rule 115 (struct_parameters -> expression terminator .)
    return          reduce using rule 115 (struct_parameters -> expression terminator .)
    lparen          reduce using rule 115 (struct_parameters -> expression terminator .)
    valor_entero    reduce using rule 115 (struct_parameters -> expression terminator .)
    valor_decimal   reduce using rule 115 (struct_parameters -> expression terminator .)
    valor_caracter  reduce using rule 115 (struct_parameters -> expression terminator .)
    verdadero       reduce using rule 115 (struct_parameters -> expression terminator .)
    falso           reduce using rule 115 (struct_parameters -> expression terminator .)
    Int64           reduce using rule 115 (struct_parameters -> expression terminator .)
    Float64         reduce using rule 115 (struct_parameters -> expression terminator .)
    Bool            reduce using rule 115 (struct_parameters -> expression terminator .)
    Char            reduce using rule 115 (struct_parameters -> expression terminator .)
    String          reduce using rule 115 (struct_parameters -> expression terminator .)
    sin             reduce using rule 115 (struct_parameters -> expression terminator .)
    cos             reduce using rule 115 (struct_parameters -> expression terminator .)
    tan             reduce using rule 115 (struct_parameters -> expression terminator .)
    sqrt            reduce using rule 115 (struct_parameters -> expression terminator .)
    log10           reduce using rule 115 (struct_parameters -> expression terminator .)
    uppercase       reduce using rule 115 (struct_parameters -> expression terminator .)
    lowercase       reduce using rule 115 (struct_parameters -> expression terminator .)
    trunc           reduce using rule 115 (struct_parameters -> expression terminator .)
    float           reduce using rule 115 (struct_parameters -> expression terminator .)
    string          reduce using rule 115 (struct_parameters -> expression terminator .)
    typeof          reduce using rule 115 (struct_parameters -> expression terminator .)
    length          reduce using rule 115 (struct_parameters -> expression terminator .)
    log             reduce using rule 115 (struct_parameters -> expression terminator .)
    parse           reduce using rule 115 (struct_parameters -> expression terminator .)
    push            reduce using rule 115 (struct_parameters -> expression terminator .)
    pop             reduce using rule 115 (struct_parameters -> expression terminator .)


state 186

    (20) statement -> mutable struct identifier struct_parameters . end
    (116) struct_parameters -> struct_parameters . expression terminator
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    end             shift and go to state 202
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 184
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 187

    (69) expression -> lsqbrack arguments rsqbrack definir . Array lkey type_data rkey

    Array           shift and go to state 203


state 188

    (113) arguments -> arguments comma expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    rsqbrack        reduce using rule 113 (arguments -> arguments comma expression .)
    comma           reduce using rule 113 (arguments -> arguments comma expression .)
    rparen          reduce using rule 113 (arguments -> arguments comma expression .)
    equal           shift and go to state 61
    definir         shift and go to state 62
    plus            shift and go to state 63
    minus           shift and go to state 64
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    eq              shift and go to state 73
    neq             shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    point           shift and go to state 77


state 189

    (70) expression -> valor_cadena lsqbrack expslice rsqbrack .

    equal           reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    definir         reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    plus            reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    minus           reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    mul             reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    div             reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    mod             reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    exp             reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    gte             reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    lte             reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    gt              reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    lt              reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    eq              reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    neq             reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    and             reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    or              reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    point           reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    terminator      reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    rparen          reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    function        reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    print           reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    println         reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    while           reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    for             reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    struct          reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    mutable         reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    nothing         reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    global          reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    local           reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    no              reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    identifier      reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    lsqbrack        reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    valor_cadena    reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    break           reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    continue        reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    return          reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    lparen          reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    if              reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    valor_entero    reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    valor_decimal   reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    valor_caracter  reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    verdadero       reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    falso           reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    Int64           reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    Float64         reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    Bool            reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    Char            reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    String          reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    sin             reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    cos             reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    tan             reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    sqrt            reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    log10           reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    uppercase       reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    lowercase       reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    trunc           reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    float           reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    string          reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    typeof          reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    length          reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    log             reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    parse           reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    push            reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    pop             reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    end             reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    rsqbrack        reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    comma           reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    elseif          reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    else            reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)
    twopoint        reduce using rule 70 (expression -> valor_cadena lsqbrack expslice rsqbrack .)


state 190

    (93) listpoint -> listpoint point identifier .

    point           reduce using rule 93 (listpoint -> listpoint point identifier .)
    equal           reduce using rule 93 (listpoint -> listpoint point identifier .)
    definir         reduce using rule 93 (listpoint -> listpoint point identifier .)
    plus            reduce using rule 93 (listpoint -> listpoint point identifier .)
    minus           reduce using rule 93 (listpoint -> listpoint point identifier .)
    mul             reduce using rule 93 (listpoint -> listpoint point identifier .)
    div             reduce using rule 93 (listpoint -> listpoint point identifier .)
    mod             reduce using rule 93 (listpoint -> listpoint point identifier .)
    exp             reduce using rule 93 (listpoint -> listpoint point identifier .)
    gte             reduce using rule 93 (listpoint -> listpoint point identifier .)
    lte             reduce using rule 93 (listpoint -> listpoint point identifier .)
    gt              reduce using rule 93 (listpoint -> listpoint point identifier .)
    lt              reduce using rule 93 (listpoint -> listpoint point identifier .)
    eq              reduce using rule 93 (listpoint -> listpoint point identifier .)
    neq             reduce using rule 93 (listpoint -> listpoint point identifier .)
    and             reduce using rule 93 (listpoint -> listpoint point identifier .)
    or              reduce using rule 93 (listpoint -> listpoint point identifier .)
    terminator      reduce using rule 93 (listpoint -> listpoint point identifier .)
    rparen          reduce using rule 93 (listpoint -> listpoint point identifier .)
    function        reduce using rule 93 (listpoint -> listpoint point identifier .)
    print           reduce using rule 93 (listpoint -> listpoint point identifier .)
    println         reduce using rule 93 (listpoint -> listpoint point identifier .)
    while           reduce using rule 93 (listpoint -> listpoint point identifier .)
    for             reduce using rule 93 (listpoint -> listpoint point identifier .)
    struct          reduce using rule 93 (listpoint -> listpoint point identifier .)
    mutable         reduce using rule 93 (listpoint -> listpoint point identifier .)
    nothing         reduce using rule 93 (listpoint -> listpoint point identifier .)
    global          reduce using rule 93 (listpoint -> listpoint point identifier .)
    local           reduce using rule 93 (listpoint -> listpoint point identifier .)
    no              reduce using rule 93 (listpoint -> listpoint point identifier .)
    identifier      reduce using rule 93 (listpoint -> listpoint point identifier .)
    lsqbrack        reduce using rule 93 (listpoint -> listpoint point identifier .)
    valor_cadena    reduce using rule 93 (listpoint -> listpoint point identifier .)
    break           reduce using rule 93 (listpoint -> listpoint point identifier .)
    continue        reduce using rule 93 (listpoint -> listpoint point identifier .)
    return          reduce using rule 93 (listpoint -> listpoint point identifier .)
    lparen          reduce using rule 93 (listpoint -> listpoint point identifier .)
    if              reduce using rule 93 (listpoint -> listpoint point identifier .)
    valor_entero    reduce using rule 93 (listpoint -> listpoint point identifier .)
    valor_decimal   reduce using rule 93 (listpoint -> listpoint point identifier .)
    valor_caracter  reduce using rule 93 (listpoint -> listpoint point identifier .)
    verdadero       reduce using rule 93 (listpoint -> listpoint point identifier .)
    falso           reduce using rule 93 (listpoint -> listpoint point identifier .)
    Int64           reduce using rule 93 (listpoint -> listpoint point identifier .)
    Float64         reduce using rule 93 (listpoint -> listpoint point identifier .)
    Bool            reduce using rule 93 (listpoint -> listpoint point identifier .)
    Char            reduce using rule 93 (listpoint -> listpoint point identifier .)
    String          reduce using rule 93 (listpoint -> listpoint point identifier .)
    sin             reduce using rule 93 (listpoint -> listpoint point identifier .)
    cos             reduce using rule 93 (listpoint -> listpoint point identifier .)
    tan             reduce using rule 93 (listpoint -> listpoint point identifier .)
    sqrt            reduce using rule 93 (listpoint -> listpoint point identifier .)
    log10           reduce using rule 93 (listpoint -> listpoint point identifier .)
    uppercase       reduce using rule 93 (listpoint -> listpoint point identifier .)
    lowercase       reduce using rule 93 (listpoint -> listpoint point identifier .)
    trunc           reduce using rule 93 (listpoint -> listpoint point identifier .)
    float           reduce using rule 93 (listpoint -> listpoint point identifier .)
    string          reduce using rule 93 (listpoint -> listpoint point identifier .)
    typeof          reduce using rule 93 (listpoint -> listpoint point identifier .)
    length          reduce using rule 93 (listpoint -> listpoint point identifier .)
    log             reduce using rule 93 (listpoint -> listpoint point identifier .)
    parse           reduce using rule 93 (listpoint -> listpoint point identifier .)
    push            reduce using rule 93 (listpoint -> listpoint point identifier .)
    pop             reduce using rule 93 (listpoint -> listpoint point identifier .)
    end             reduce using rule 93 (listpoint -> listpoint point identifier .)
    rsqbrack        reduce using rule 93 (listpoint -> listpoint point identifier .)
    comma           reduce using rule 93 (listpoint -> listpoint point identifier .)
    elseif          reduce using rule 93 (listpoint -> listpoint point identifier .)
    else            reduce using rule 93 (listpoint -> listpoint point identifier .)
    twopoint        reduce using rule 93 (listpoint -> listpoint point identifier .)


state 191

    (94) expression -> native lparen arguments rparen .

    equal           reduce using rule 94 (expression -> native lparen arguments rparen .)
    definir         reduce using rule 94 (expression -> native lparen arguments rparen .)
    plus            reduce using rule 94 (expression -> native lparen arguments rparen .)
    minus           reduce using rule 94 (expression -> native lparen arguments rparen .)
    mul             reduce using rule 94 (expression -> native lparen arguments rparen .)
    div             reduce using rule 94 (expression -> native lparen arguments rparen .)
    mod             reduce using rule 94 (expression -> native lparen arguments rparen .)
    exp             reduce using rule 94 (expression -> native lparen arguments rparen .)
    gte             reduce using rule 94 (expression -> native lparen arguments rparen .)
    lte             reduce using rule 94 (expression -> native lparen arguments rparen .)
    gt              reduce using rule 94 (expression -> native lparen arguments rparen .)
    lt              reduce using rule 94 (expression -> native lparen arguments rparen .)
    eq              reduce using rule 94 (expression -> native lparen arguments rparen .)
    neq             reduce using rule 94 (expression -> native lparen arguments rparen .)
    and             reduce using rule 94 (expression -> native lparen arguments rparen .)
    or              reduce using rule 94 (expression -> native lparen arguments rparen .)
    point           reduce using rule 94 (expression -> native lparen arguments rparen .)
    terminator      reduce using rule 94 (expression -> native lparen arguments rparen .)
    rparen          reduce using rule 94 (expression -> native lparen arguments rparen .)
    function        reduce using rule 94 (expression -> native lparen arguments rparen .)
    print           reduce using rule 94 (expression -> native lparen arguments rparen .)
    println         reduce using rule 94 (expression -> native lparen arguments rparen .)
    while           reduce using rule 94 (expression -> native lparen arguments rparen .)
    for             reduce using rule 94 (expression -> native lparen arguments rparen .)
    struct          reduce using rule 94 (expression -> native lparen arguments rparen .)
    mutable         reduce using rule 94 (expression -> native lparen arguments rparen .)
    nothing         reduce using rule 94 (expression -> native lparen arguments rparen .)
    global          reduce using rule 94 (expression -> native lparen arguments rparen .)
    local           reduce using rule 94 (expression -> native lparen arguments rparen .)
    no              reduce using rule 94 (expression -> native lparen arguments rparen .)
    identifier      reduce using rule 94 (expression -> native lparen arguments rparen .)
    lsqbrack        reduce using rule 94 (expression -> native lparen arguments rparen .)
    valor_cadena    reduce using rule 94 (expression -> native lparen arguments rparen .)
    break           reduce using rule 94 (expression -> native lparen arguments rparen .)
    continue        reduce using rule 94 (expression -> native lparen arguments rparen .)
    return          reduce using rule 94 (expression -> native lparen arguments rparen .)
    lparen          reduce using rule 94 (expression -> native lparen arguments rparen .)
    if              reduce using rule 94 (expression -> native lparen arguments rparen .)
    valor_entero    reduce using rule 94 (expression -> native lparen arguments rparen .)
    valor_decimal   reduce using rule 94 (expression -> native lparen arguments rparen .)
    valor_caracter  reduce using rule 94 (expression -> native lparen arguments rparen .)
    verdadero       reduce using rule 94 (expression -> native lparen arguments rparen .)
    falso           reduce using rule 94 (expression -> native lparen arguments rparen .)
    Int64           reduce using rule 94 (expression -> native lparen arguments rparen .)
    Float64         reduce using rule 94 (expression -> native lparen arguments rparen .)
    Bool            reduce using rule 94 (expression -> native lparen arguments rparen .)
    Char            reduce using rule 94 (expression -> native lparen arguments rparen .)
    String          reduce using rule 94 (expression -> native lparen arguments rparen .)
    sin             reduce using rule 94 (expression -> native lparen arguments rparen .)
    cos             reduce using rule 94 (expression -> native lparen arguments rparen .)
    tan             reduce using rule 94 (expression -> native lparen arguments rparen .)
    sqrt            reduce using rule 94 (expression -> native lparen arguments rparen .)
    log10           reduce using rule 94 (expression -> native lparen arguments rparen .)
    uppercase       reduce using rule 94 (expression -> native lparen arguments rparen .)
    lowercase       reduce using rule 94 (expression -> native lparen arguments rparen .)
    trunc           reduce using rule 94 (expression -> native lparen arguments rparen .)
    float           reduce using rule 94 (expression -> native lparen arguments rparen .)
    string          reduce using rule 94 (expression -> native lparen arguments rparen .)
    typeof          reduce using rule 94 (expression -> native lparen arguments rparen .)
    length          reduce using rule 94 (expression -> native lparen arguments rparen .)
    log             reduce using rule 94 (expression -> native lparen arguments rparen .)
    parse           reduce using rule 94 (expression -> native lparen arguments rparen .)
    push            reduce using rule 94 (expression -> native lparen arguments rparen .)
    pop             reduce using rule 94 (expression -> native lparen arguments rparen .)
    end             reduce using rule 94 (expression -> native lparen arguments rparen .)
    rsqbrack        reduce using rule 94 (expression -> native lparen arguments rparen .)
    comma           reduce using rule 94 (expression -> native lparen arguments rparen .)
    elseif          reduce using rule 94 (expression -> native lparen arguments rparen .)
    else            reduce using rule 94 (expression -> native lparen arguments rparen .)
    twopoint        reduce using rule 94 (expression -> native lparen arguments rparen .)


state 192

    (7) if_statement -> if expression statement_list elseif_clause . end
    (8) if_statement -> if expression statement_list elseif_clause . else_clause end
    (12) elseif_clause -> elseif_clause . elseif expression statement_list
    (13) else_clause -> . else statement_list

    end             shift and go to state 204
    elseif          shift and go to state 206
    else            shift and go to state 196

    else_clause                    shift and go to state 205

state 193

    (9) if_statement -> if expression statement_list end .

    terminator      reduce using rule 9 (if_statement -> if expression statement_list end .)


state 194

    (10) if_statement -> if expression statement_list else_clause . end

    end             shift and go to state 207


state 195

    (11) elseif_clause -> elseif . expression statement_list
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 208
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 196

    (13) else_clause -> else . statement_list
    (2) statement_list -> . statement terminator
    (3) statement_list -> . statement_list statement terminator
    (4) statement_list -> .
    (5) statement -> . expression
    (6) statement -> . if_statement
    (14) statement -> . function identifier lparen arguments rparen statement_list end
    (15) statement -> . print lparen arguments rparen
    (16) statement -> . println lparen arguments rparen
    (17) statement -> . while expression statement_list end
    (18) statement -> . for container statement_list end
    (19) statement -> . struct identifier struct_parameters end
    (20) statement -> . mutable struct identifier struct_parameters end
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (7) if_statement -> . if expression statement_list elseif_clause end
    (8) if_statement -> . if expression statement_list elseif_clause else_clause end
    (9) if_statement -> . if expression statement_list end
    (10) if_statement -> . if expression statement_list else_clause end
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for println resolved as shift
  ! shift/reduce conflict for while resolved as shift
  ! shift/reduce conflict for for resolved as shift
  ! shift/reduce conflict for struct resolved as shift
  ! shift/reduce conflict for mutable resolved as shift
  ! shift/reduce conflict for nothing resolved as shift
  ! shift/reduce conflict for global resolved as shift
  ! shift/reduce conflict for local resolved as shift
  ! shift/reduce conflict for plus resolved as shift
  ! shift/reduce conflict for minus resolved as shift
  ! shift/reduce conflict for no resolved as shift
  ! shift/reduce conflict for identifier resolved as shift
  ! shift/reduce conflict for lsqbrack resolved as shift
  ! shift/reduce conflict for valor_cadena resolved as shift
  ! shift/reduce conflict for break resolved as shift
  ! shift/reduce conflict for continue resolved as shift
  ! shift/reduce conflict for return resolved as shift
  ! shift/reduce conflict for lparen resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for valor_entero resolved as shift
  ! shift/reduce conflict for valor_decimal resolved as shift
  ! shift/reduce conflict for valor_caracter resolved as shift
  ! shift/reduce conflict for verdadero resolved as shift
  ! shift/reduce conflict for falso resolved as shift
  ! shift/reduce conflict for Int64 resolved as shift
  ! shift/reduce conflict for Float64 resolved as shift
  ! shift/reduce conflict for Bool resolved as shift
  ! shift/reduce conflict for Char resolved as shift
  ! shift/reduce conflict for String resolved as shift
  ! shift/reduce conflict for sin resolved as shift
  ! shift/reduce conflict for cos resolved as shift
  ! shift/reduce conflict for tan resolved as shift
  ! shift/reduce conflict for sqrt resolved as shift
  ! shift/reduce conflict for log10 resolved as shift
  ! shift/reduce conflict for uppercase resolved as shift
  ! shift/reduce conflict for lowercase resolved as shift
  ! shift/reduce conflict for trunc resolved as shift
  ! shift/reduce conflict for float resolved as shift
  ! shift/reduce conflict for string resolved as shift
  ! shift/reduce conflict for typeof resolved as shift
  ! shift/reduce conflict for length resolved as shift
  ! shift/reduce conflict for log resolved as shift
  ! shift/reduce conflict for parse resolved as shift
  ! shift/reduce conflict for push resolved as shift
  ! shift/reduce conflict for pop resolved as shift
    end             reduce using rule 4 (statement_list -> .)
    function        shift and go to state 6
    print           shift and go to state 9
    println         shift and go to state 10
    while           shift and go to state 11
    for             shift and go to state 12
    struct          shift and go to state 13
    mutable         shift and go to state 14
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    if              shift and go to state 32
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

  ! function        [ reduce using rule 4 (statement_list -> .) ]
  ! print           [ reduce using rule 4 (statement_list -> .) ]
  ! println         [ reduce using rule 4 (statement_list -> .) ]
  ! while           [ reduce using rule 4 (statement_list -> .) ]
  ! for             [ reduce using rule 4 (statement_list -> .) ]
  ! struct          [ reduce using rule 4 (statement_list -> .) ]
  ! mutable         [ reduce using rule 4 (statement_list -> .) ]
  ! nothing         [ reduce using rule 4 (statement_list -> .) ]
  ! global          [ reduce using rule 4 (statement_list -> .) ]
  ! local           [ reduce using rule 4 (statement_list -> .) ]
  ! plus            [ reduce using rule 4 (statement_list -> .) ]
  ! minus           [ reduce using rule 4 (statement_list -> .) ]
  ! no              [ reduce using rule 4 (statement_list -> .) ]
  ! identifier      [ reduce using rule 4 (statement_list -> .) ]
  ! lsqbrack        [ reduce using rule 4 (statement_list -> .) ]
  ! valor_cadena    [ reduce using rule 4 (statement_list -> .) ]
  ! break           [ reduce using rule 4 (statement_list -> .) ]
  ! continue        [ reduce using rule 4 (statement_list -> .) ]
  ! return          [ reduce using rule 4 (statement_list -> .) ]
  ! lparen          [ reduce using rule 4 (statement_list -> .) ]
  ! if              [ reduce using rule 4 (statement_list -> .) ]
  ! valor_entero    [ reduce using rule 4 (statement_list -> .) ]
  ! valor_decimal   [ reduce using rule 4 (statement_list -> .) ]
  ! valor_caracter  [ reduce using rule 4 (statement_list -> .) ]
  ! verdadero       [ reduce using rule 4 (statement_list -> .) ]
  ! falso           [ reduce using rule 4 (statement_list -> .) ]
  ! Int64           [ reduce using rule 4 (statement_list -> .) ]
  ! Float64         [ reduce using rule 4 (statement_list -> .) ]
  ! Bool            [ reduce using rule 4 (statement_list -> .) ]
  ! Char            [ reduce using rule 4 (statement_list -> .) ]
  ! String          [ reduce using rule 4 (statement_list -> .) ]
  ! sin             [ reduce using rule 4 (statement_list -> .) ]
  ! cos             [ reduce using rule 4 (statement_list -> .) ]
  ! tan             [ reduce using rule 4 (statement_list -> .) ]
  ! sqrt            [ reduce using rule 4 (statement_list -> .) ]
  ! log10           [ reduce using rule 4 (statement_list -> .) ]
  ! uppercase       [ reduce using rule 4 (statement_list -> .) ]
  ! lowercase       [ reduce using rule 4 (statement_list -> .) ]
  ! trunc           [ reduce using rule 4 (statement_list -> .) ]
  ! float           [ reduce using rule 4 (statement_list -> .) ]
  ! string          [ reduce using rule 4 (statement_list -> .) ]
  ! typeof          [ reduce using rule 4 (statement_list -> .) ]
  ! length          [ reduce using rule 4 (statement_list -> .) ]
  ! log             [ reduce using rule 4 (statement_list -> .) ]
  ! parse           [ reduce using rule 4 (statement_list -> .) ]
  ! push            [ reduce using rule 4 (statement_list -> .) ]
  ! pop             [ reduce using rule 4 (statement_list -> .) ]

    statement_list                 shift and go to state 209
    statement                      shift and go to state 3
    expression                     shift and go to state 4
    if_statement                   shift and go to state 5
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 197

    (14) statement -> function identifier lparen arguments rparen . statement_list end
    (2) statement_list -> . statement terminator
    (3) statement_list -> . statement_list statement terminator
    (4) statement_list -> .
    (5) statement -> . expression
    (6) statement -> . if_statement
    (14) statement -> . function identifier lparen arguments rparen statement_list end
    (15) statement -> . print lparen arguments rparen
    (16) statement -> . println lparen arguments rparen
    (17) statement -> . while expression statement_list end
    (18) statement -> . for container statement_list end
    (19) statement -> . struct identifier struct_parameters end
    (20) statement -> . mutable struct identifier struct_parameters end
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (7) if_statement -> . if expression statement_list elseif_clause end
    (8) if_statement -> . if expression statement_list elseif_clause else_clause end
    (9) if_statement -> . if expression statement_list end
    (10) if_statement -> . if expression statement_list else_clause end
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for println resolved as shift
  ! shift/reduce conflict for while resolved as shift
  ! shift/reduce conflict for for resolved as shift
  ! shift/reduce conflict for struct resolved as shift
  ! shift/reduce conflict for mutable resolved as shift
  ! shift/reduce conflict for nothing resolved as shift
  ! shift/reduce conflict for global resolved as shift
  ! shift/reduce conflict for local resolved as shift
  ! shift/reduce conflict for plus resolved as shift
  ! shift/reduce conflict for minus resolved as shift
  ! shift/reduce conflict for no resolved as shift
  ! shift/reduce conflict for identifier resolved as shift
  ! shift/reduce conflict for lsqbrack resolved as shift
  ! shift/reduce conflict for valor_cadena resolved as shift
  ! shift/reduce conflict for break resolved as shift
  ! shift/reduce conflict for continue resolved as shift
  ! shift/reduce conflict for return resolved as shift
  ! shift/reduce conflict for lparen resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for valor_entero resolved as shift
  ! shift/reduce conflict for valor_decimal resolved as shift
  ! shift/reduce conflict for valor_caracter resolved as shift
  ! shift/reduce conflict for verdadero resolved as shift
  ! shift/reduce conflict for falso resolved as shift
  ! shift/reduce conflict for Int64 resolved as shift
  ! shift/reduce conflict for Float64 resolved as shift
  ! shift/reduce conflict for Bool resolved as shift
  ! shift/reduce conflict for Char resolved as shift
  ! shift/reduce conflict for String resolved as shift
  ! shift/reduce conflict for sin resolved as shift
  ! shift/reduce conflict for cos resolved as shift
  ! shift/reduce conflict for tan resolved as shift
  ! shift/reduce conflict for sqrt resolved as shift
  ! shift/reduce conflict for log10 resolved as shift
  ! shift/reduce conflict for uppercase resolved as shift
  ! shift/reduce conflict for lowercase resolved as shift
  ! shift/reduce conflict for trunc resolved as shift
  ! shift/reduce conflict for float resolved as shift
  ! shift/reduce conflict for string resolved as shift
  ! shift/reduce conflict for typeof resolved as shift
  ! shift/reduce conflict for length resolved as shift
  ! shift/reduce conflict for log resolved as shift
  ! shift/reduce conflict for parse resolved as shift
  ! shift/reduce conflict for push resolved as shift
  ! shift/reduce conflict for pop resolved as shift
    end             reduce using rule 4 (statement_list -> .)
    function        shift and go to state 6
    print           shift and go to state 9
    println         shift and go to state 10
    while           shift and go to state 11
    for             shift and go to state 12
    struct          shift and go to state 13
    mutable         shift and go to state 14
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    if              shift and go to state 32
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

  ! function        [ reduce using rule 4 (statement_list -> .) ]
  ! print           [ reduce using rule 4 (statement_list -> .) ]
  ! println         [ reduce using rule 4 (statement_list -> .) ]
  ! while           [ reduce using rule 4 (statement_list -> .) ]
  ! for             [ reduce using rule 4 (statement_list -> .) ]
  ! struct          [ reduce using rule 4 (statement_list -> .) ]
  ! mutable         [ reduce using rule 4 (statement_list -> .) ]
  ! nothing         [ reduce using rule 4 (statement_list -> .) ]
  ! global          [ reduce using rule 4 (statement_list -> .) ]
  ! local           [ reduce using rule 4 (statement_list -> .) ]
  ! plus            [ reduce using rule 4 (statement_list -> .) ]
  ! minus           [ reduce using rule 4 (statement_list -> .) ]
  ! no              [ reduce using rule 4 (statement_list -> .) ]
  ! identifier      [ reduce using rule 4 (statement_list -> .) ]
  ! lsqbrack        [ reduce using rule 4 (statement_list -> .) ]
  ! valor_cadena    [ reduce using rule 4 (statement_list -> .) ]
  ! break           [ reduce using rule 4 (statement_list -> .) ]
  ! continue        [ reduce using rule 4 (statement_list -> .) ]
  ! return          [ reduce using rule 4 (statement_list -> .) ]
  ! lparen          [ reduce using rule 4 (statement_list -> .) ]
  ! if              [ reduce using rule 4 (statement_list -> .) ]
  ! valor_entero    [ reduce using rule 4 (statement_list -> .) ]
  ! valor_decimal   [ reduce using rule 4 (statement_list -> .) ]
  ! valor_caracter  [ reduce using rule 4 (statement_list -> .) ]
  ! verdadero       [ reduce using rule 4 (statement_list -> .) ]
  ! falso           [ reduce using rule 4 (statement_list -> .) ]
  ! Int64           [ reduce using rule 4 (statement_list -> .) ]
  ! Float64         [ reduce using rule 4 (statement_list -> .) ]
  ! Bool            [ reduce using rule 4 (statement_list -> .) ]
  ! Char            [ reduce using rule 4 (statement_list -> .) ]
  ! String          [ reduce using rule 4 (statement_list -> .) ]
  ! sin             [ reduce using rule 4 (statement_list -> .) ]
  ! cos             [ reduce using rule 4 (statement_list -> .) ]
  ! tan             [ reduce using rule 4 (statement_list -> .) ]
  ! sqrt            [ reduce using rule 4 (statement_list -> .) ]
  ! log10           [ reduce using rule 4 (statement_list -> .) ]
  ! uppercase       [ reduce using rule 4 (statement_list -> .) ]
  ! lowercase       [ reduce using rule 4 (statement_list -> .) ]
  ! trunc           [ reduce using rule 4 (statement_list -> .) ]
  ! float           [ reduce using rule 4 (statement_list -> .) ]
  ! string          [ reduce using rule 4 (statement_list -> .) ]
  ! typeof          [ reduce using rule 4 (statement_list -> .) ]
  ! length          [ reduce using rule 4 (statement_list -> .) ]
  ! log             [ reduce using rule 4 (statement_list -> .) ]
  ! parse           [ reduce using rule 4 (statement_list -> .) ]
  ! push            [ reduce using rule 4 (statement_list -> .) ]
  ! pop             [ reduce using rule 4 (statement_list -> .) ]

    statement_list                 shift and go to state 210
    statement                      shift and go to state 3
    expression                     shift and go to state 4
    if_statement                   shift and go to state 5
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 198

    (73) list_index -> list_index lsqbrack argsarray rsqbrack .

    lsqbrack        reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    equal           reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    definir         reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    plus            reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    minus           reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    mul             reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    div             reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    mod             reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    exp             reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    gte             reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    lte             reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    gt              reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    lt              reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    eq              reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    neq             reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    and             reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    or              reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    point           reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    terminator      reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    rparen          reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    function        reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    print           reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    println         reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    while           reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    for             reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    struct          reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    mutable         reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    nothing         reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    global          reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    local           reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    no              reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    identifier      reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    valor_cadena    reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    break           reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    continue        reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    return          reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    lparen          reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    if              reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    valor_entero    reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    valor_decimal   reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    valor_caracter  reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    verdadero       reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    falso           reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    Int64           reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    Float64         reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    Bool            reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    Char            reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    String          reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    sin             reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    cos             reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    tan             reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    sqrt            reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    log10           reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    uppercase       reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    lowercase       reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    trunc           reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    float           reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    string          reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    typeof          reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    length          reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    log             reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    parse           reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    push            reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    pop             reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    end             reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    rsqbrack        reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    comma           reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    elseif          reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    else            reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)
    twopoint        reduce using rule 73 (list_index -> list_index lsqbrack argsarray rsqbrack .)


state 199

    (83) slice_all -> expression twopoint expression .
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray

    rsqbrack        reduce using rule 83 (slice_all -> expression twopoint expression .)
    function        reduce using rule 83 (slice_all -> expression twopoint expression .)
    print           reduce using rule 83 (slice_all -> expression twopoint expression .)
    println         reduce using rule 83 (slice_all -> expression twopoint expression .)
    while           reduce using rule 83 (slice_all -> expression twopoint expression .)
    for             reduce using rule 83 (slice_all -> expression twopoint expression .)
    struct          reduce using rule 83 (slice_all -> expression twopoint expression .)
    mutable         reduce using rule 83 (slice_all -> expression twopoint expression .)
    nothing         reduce using rule 83 (slice_all -> expression twopoint expression .)
    global          reduce using rule 83 (slice_all -> expression twopoint expression .)
    local           reduce using rule 83 (slice_all -> expression twopoint expression .)
    plus            reduce using rule 83 (slice_all -> expression twopoint expression .)
    minus           reduce using rule 83 (slice_all -> expression twopoint expression .)
    no              reduce using rule 83 (slice_all -> expression twopoint expression .)
    identifier      reduce using rule 83 (slice_all -> expression twopoint expression .)
    lsqbrack        reduce using rule 83 (slice_all -> expression twopoint expression .)
    valor_cadena    reduce using rule 83 (slice_all -> expression twopoint expression .)
    break           reduce using rule 83 (slice_all -> expression twopoint expression .)
    continue        reduce using rule 83 (slice_all -> expression twopoint expression .)
    return          reduce using rule 83 (slice_all -> expression twopoint expression .)
    lparen          reduce using rule 83 (slice_all -> expression twopoint expression .)
    if              reduce using rule 83 (slice_all -> expression twopoint expression .)
    valor_entero    reduce using rule 83 (slice_all -> expression twopoint expression .)
    valor_decimal   reduce using rule 83 (slice_all -> expression twopoint expression .)
    valor_caracter  reduce using rule 83 (slice_all -> expression twopoint expression .)
    verdadero       reduce using rule 83 (slice_all -> expression twopoint expression .)
    falso           reduce using rule 83 (slice_all -> expression twopoint expression .)
    Int64           reduce using rule 83 (slice_all -> expression twopoint expression .)
    Float64         reduce using rule 83 (slice_all -> expression twopoint expression .)
    Bool            reduce using rule 83 (slice_all -> expression twopoint expression .)
    Char            reduce using rule 83 (slice_all -> expression twopoint expression .)
    String          reduce using rule 83 (slice_all -> expression twopoint expression .)
    sin             reduce using rule 83 (slice_all -> expression twopoint expression .)
    cos             reduce using rule 83 (slice_all -> expression twopoint expression .)
    tan             reduce using rule 83 (slice_all -> expression twopoint expression .)
    sqrt            reduce using rule 83 (slice_all -> expression twopoint expression .)
    log10           reduce using rule 83 (slice_all -> expression twopoint expression .)
    uppercase       reduce using rule 83 (slice_all -> expression twopoint expression .)
    lowercase       reduce using rule 83 (slice_all -> expression twopoint expression .)
    trunc           reduce using rule 83 (slice_all -> expression twopoint expression .)
    float           reduce using rule 83 (slice_all -> expression twopoint expression .)
    string          reduce using rule 83 (slice_all -> expression twopoint expression .)
    typeof          reduce using rule 83 (slice_all -> expression twopoint expression .)
    length          reduce using rule 83 (slice_all -> expression twopoint expression .)
    log             reduce using rule 83 (slice_all -> expression twopoint expression .)
    parse           reduce using rule 83 (slice_all -> expression twopoint expression .)
    push            reduce using rule 83 (slice_all -> expression twopoint expression .)
    pop             reduce using rule 83 (slice_all -> expression twopoint expression .)
    end             reduce using rule 83 (slice_all -> expression twopoint expression .)
    equal           shift and go to state 61
    definir         shift and go to state 62
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    eq              shift and go to state 73
    neq             shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    point           shift and go to state 77

  ! plus            [ shift and go to state 63 ]
  ! minus           [ shift and go to state 64 ]


state 200

    (83) slice_all -> expression twopoint . expression
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 199
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 201

    (116) struct_parameters -> struct_parameters expression terminator .

    end             reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    nothing         reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    global          reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    local           reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    plus            reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    minus           reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    no              reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    identifier      reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    lsqbrack        reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    valor_cadena    reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    break           reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    continue        reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    return          reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    lparen          reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    valor_entero    reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    valor_decimal   reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    valor_caracter  reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    verdadero       reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    falso           reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    Int64           reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    Float64         reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    Bool            reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    Char            reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    String          reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    sin             reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    cos             reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    tan             reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    sqrt            reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    log10           reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    uppercase       reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    lowercase       reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    trunc           reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    float           reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    string          reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    typeof          reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    length          reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    log             reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    parse           reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    push            reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)
    pop             reduce using rule 116 (struct_parameters -> struct_parameters expression terminator .)


state 202

    (20) statement -> mutable struct identifier struct_parameters end .

    terminator      reduce using rule 20 (statement -> mutable struct identifier struct_parameters end .)


state 203

    (69) expression -> lsqbrack arguments rsqbrack definir Array . lkey type_data rkey

    lkey            shift and go to state 211


state 204

    (7) if_statement -> if expression statement_list elseif_clause end .

    terminator      reduce using rule 7 (if_statement -> if expression statement_list elseif_clause end .)


state 205

    (8) if_statement -> if expression statement_list elseif_clause else_clause . end

    end             shift and go to state 212


state 206

    (12) elseif_clause -> elseif_clause elseif . expression statement_list
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 213
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 207

    (10) if_statement -> if expression statement_list else_clause end .

    terminator      reduce using rule 10 (if_statement -> if expression statement_list else_clause end .)


state 208

    (11) elseif_clause -> elseif expression . statement_list
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray
    (2) statement_list -> . statement terminator
    (3) statement_list -> . statement_list statement terminator
    (4) statement_list -> .
    (5) statement -> . expression
    (6) statement -> . if_statement
    (14) statement -> . function identifier lparen arguments rparen statement_list end
    (15) statement -> . print lparen arguments rparen
    (16) statement -> . println lparen arguments rparen
    (17) statement -> . while expression statement_list end
    (18) statement -> . for container statement_list end
    (19) statement -> . struct identifier struct_parameters end
    (20) statement -> . mutable struct identifier struct_parameters end
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (7) if_statement -> . if expression statement_list elseif_clause end
    (8) if_statement -> . if expression statement_list elseif_clause else_clause end
    (9) if_statement -> . if expression statement_list end
    (10) if_statement -> . if expression statement_list else_clause end
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

  ! shift/reduce conflict for plus resolved as shift
  ! shift/reduce conflict for minus resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for println resolved as shift
  ! shift/reduce conflict for while resolved as shift
  ! shift/reduce conflict for for resolved as shift
  ! shift/reduce conflict for struct resolved as shift
  ! shift/reduce conflict for mutable resolved as shift
  ! shift/reduce conflict for nothing resolved as shift
  ! shift/reduce conflict for global resolved as shift
  ! shift/reduce conflict for local resolved as shift
  ! shift/reduce conflict for no resolved as shift
  ! shift/reduce conflict for identifier resolved as shift
  ! shift/reduce conflict for lsqbrack resolved as shift
  ! shift/reduce conflict for valor_cadena resolved as shift
  ! shift/reduce conflict for break resolved as shift
  ! shift/reduce conflict for continue resolved as shift
  ! shift/reduce conflict for return resolved as shift
  ! shift/reduce conflict for lparen resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for valor_entero resolved as shift
  ! shift/reduce conflict for valor_decimal resolved as shift
  ! shift/reduce conflict for valor_caracter resolved as shift
  ! shift/reduce conflict for verdadero resolved as shift
  ! shift/reduce conflict for falso resolved as shift
  ! shift/reduce conflict for Int64 resolved as shift
  ! shift/reduce conflict for Float64 resolved as shift
  ! shift/reduce conflict for Bool resolved as shift
  ! shift/reduce conflict for Char resolved as shift
  ! shift/reduce conflict for String resolved as shift
  ! shift/reduce conflict for sin resolved as shift
  ! shift/reduce conflict for cos resolved as shift
  ! shift/reduce conflict for tan resolved as shift
  ! shift/reduce conflict for sqrt resolved as shift
  ! shift/reduce conflict for log10 resolved as shift
  ! shift/reduce conflict for uppercase resolved as shift
  ! shift/reduce conflict for lowercase resolved as shift
  ! shift/reduce conflict for trunc resolved as shift
  ! shift/reduce conflict for float resolved as shift
  ! shift/reduce conflict for string resolved as shift
  ! shift/reduce conflict for typeof resolved as shift
  ! shift/reduce conflict for length resolved as shift
  ! shift/reduce conflict for log resolved as shift
  ! shift/reduce conflict for parse resolved as shift
  ! shift/reduce conflict for push resolved as shift
  ! shift/reduce conflict for pop resolved as shift
    equal           shift and go to state 61
    definir         shift and go to state 62
    plus            shift and go to state 147
    minus           shift and go to state 148
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    eq              shift and go to state 73
    neq             shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    point           shift and go to state 77
    end             reduce using rule 4 (statement_list -> .)
    elseif          reduce using rule 4 (statement_list -> .)
    else            reduce using rule 4 (statement_list -> .)
    function        shift and go to state 6
    print           shift and go to state 9
    println         shift and go to state 10
    while           shift and go to state 11
    for             shift and go to state 12
    struct          shift and go to state 13
    mutable         shift and go to state 14
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    if              shift and go to state 32
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

  ! function        [ reduce using rule 4 (statement_list -> .) ]
  ! print           [ reduce using rule 4 (statement_list -> .) ]
  ! println         [ reduce using rule 4 (statement_list -> .) ]
  ! while           [ reduce using rule 4 (statement_list -> .) ]
  ! for             [ reduce using rule 4 (statement_list -> .) ]
  ! struct          [ reduce using rule 4 (statement_list -> .) ]
  ! mutable         [ reduce using rule 4 (statement_list -> .) ]
  ! nothing         [ reduce using rule 4 (statement_list -> .) ]
  ! global          [ reduce using rule 4 (statement_list -> .) ]
  ! local           [ reduce using rule 4 (statement_list -> .) ]
  ! plus            [ reduce using rule 4 (statement_list -> .) ]
  ! minus           [ reduce using rule 4 (statement_list -> .) ]
  ! no              [ reduce using rule 4 (statement_list -> .) ]
  ! identifier      [ reduce using rule 4 (statement_list -> .) ]
  ! lsqbrack        [ reduce using rule 4 (statement_list -> .) ]
  ! valor_cadena    [ reduce using rule 4 (statement_list -> .) ]
  ! break           [ reduce using rule 4 (statement_list -> .) ]
  ! continue        [ reduce using rule 4 (statement_list -> .) ]
  ! return          [ reduce using rule 4 (statement_list -> .) ]
  ! lparen          [ reduce using rule 4 (statement_list -> .) ]
  ! if              [ reduce using rule 4 (statement_list -> .) ]
  ! valor_entero    [ reduce using rule 4 (statement_list -> .) ]
  ! valor_decimal   [ reduce using rule 4 (statement_list -> .) ]
  ! valor_caracter  [ reduce using rule 4 (statement_list -> .) ]
  ! verdadero       [ reduce using rule 4 (statement_list -> .) ]
  ! falso           [ reduce using rule 4 (statement_list -> .) ]
  ! Int64           [ reduce using rule 4 (statement_list -> .) ]
  ! Float64         [ reduce using rule 4 (statement_list -> .) ]
  ! Bool            [ reduce using rule 4 (statement_list -> .) ]
  ! Char            [ reduce using rule 4 (statement_list -> .) ]
  ! String          [ reduce using rule 4 (statement_list -> .) ]
  ! sin             [ reduce using rule 4 (statement_list -> .) ]
  ! cos             [ reduce using rule 4 (statement_list -> .) ]
  ! tan             [ reduce using rule 4 (statement_list -> .) ]
  ! sqrt            [ reduce using rule 4 (statement_list -> .) ]
  ! log10           [ reduce using rule 4 (statement_list -> .) ]
  ! uppercase       [ reduce using rule 4 (statement_list -> .) ]
  ! lowercase       [ reduce using rule 4 (statement_list -> .) ]
  ! trunc           [ reduce using rule 4 (statement_list -> .) ]
  ! float           [ reduce using rule 4 (statement_list -> .) ]
  ! string          [ reduce using rule 4 (statement_list -> .) ]
  ! typeof          [ reduce using rule 4 (statement_list -> .) ]
  ! length          [ reduce using rule 4 (statement_list -> .) ]
  ! log             [ reduce using rule 4 (statement_list -> .) ]
  ! parse           [ reduce using rule 4 (statement_list -> .) ]
  ! push            [ reduce using rule 4 (statement_list -> .) ]
  ! pop             [ reduce using rule 4 (statement_list -> .) ]

    expression                     shift and go to state 4
    statement_list                 shift and go to state 214
    type_data                      shift and go to state 18
    statement                      shift and go to state 3
    if_statement                   shift and go to state 5
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    id                             shift and go to state 30
    native                         shift and go to state 31

state 209

    (13) else_clause -> else statement_list .
    (3) statement_list -> statement_list . statement terminator
    (5) statement -> . expression
    (6) statement -> . if_statement
    (14) statement -> . function identifier lparen arguments rparen statement_list end
    (15) statement -> . print lparen arguments rparen
    (16) statement -> . println lparen arguments rparen
    (17) statement -> . while expression statement_list end
    (18) statement -> . for container statement_list end
    (19) statement -> . struct identifier struct_parameters end
    (20) statement -> . mutable struct identifier struct_parameters end
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (7) if_statement -> . if expression statement_list elseif_clause end
    (8) if_statement -> . if expression statement_list elseif_clause else_clause end
    (9) if_statement -> . if expression statement_list end
    (10) if_statement -> . if expression statement_list else_clause end
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    end             reduce using rule 13 (else_clause -> else statement_list .)
    function        shift and go to state 6
    print           shift and go to state 9
    println         shift and go to state 10
    while           shift and go to state 11
    for             shift and go to state 12
    struct          shift and go to state 13
    mutable         shift and go to state 14
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    if              shift and go to state 32
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    statement                      shift and go to state 59
    expression                     shift and go to state 4
    if_statement                   shift and go to state 5
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 210

    (14) statement -> function identifier lparen arguments rparen statement_list . end
    (3) statement_list -> statement_list . statement terminator
    (5) statement -> . expression
    (6) statement -> . if_statement
    (14) statement -> . function identifier lparen arguments rparen statement_list end
    (15) statement -> . print lparen arguments rparen
    (16) statement -> . println lparen arguments rparen
    (17) statement -> . while expression statement_list end
    (18) statement -> . for container statement_list end
    (19) statement -> . struct identifier struct_parameters end
    (20) statement -> . mutable struct identifier struct_parameters end
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (7) if_statement -> . if expression statement_list elseif_clause end
    (8) if_statement -> . if expression statement_list elseif_clause else_clause end
    (9) if_statement -> . if expression statement_list end
    (10) if_statement -> . if expression statement_list else_clause end
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    end             shift and go to state 215
    function        shift and go to state 6
    print           shift and go to state 9
    println         shift and go to state 10
    while           shift and go to state 11
    for             shift and go to state 12
    struct          shift and go to state 13
    mutable         shift and go to state 14
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    if              shift and go to state 32
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    statement                      shift and go to state 59
    expression                     shift and go to state 4
    if_statement                   shift and go to state 5
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 211

    (69) expression -> lsqbrack arguments rsqbrack definir Array lkey . type_data rkey
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier

    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    identifier      shift and go to state 110

    type_data                      shift and go to state 216
    id                             shift and go to state 109

state 212

    (8) if_statement -> if expression statement_list elseif_clause else_clause end .

    terminator      reduce using rule 8 (if_statement -> if expression statement_list elseif_clause else_clause end .)


state 213

    (12) elseif_clause -> elseif_clause elseif expression . statement_list
    (48) expression -> expression . equal expression
    (49) expression -> expression . definir type_data
    (50) expression -> expression . plus expression
    (51) expression -> expression . minus expression
    (52) expression -> expression . mul expression
    (53) expression -> expression . div expression
    (54) expression -> expression . mod expression
    (55) expression -> expression . exp expression
    (58) expression -> expression . gte expression
    (59) expression -> expression . lte expression
    (60) expression -> expression . gt expression
    (61) expression -> expression . lt expression
    (62) expression -> expression . eq expression
    (63) expression -> expression . neq expression
    (64) expression -> expression . and expression
    (65) expression -> expression . or expression
    (39) array_operator -> expression . point oparray
    (2) statement_list -> . statement terminator
    (3) statement_list -> . statement_list statement terminator
    (4) statement_list -> .
    (5) statement -> . expression
    (6) statement -> . if_statement
    (14) statement -> . function identifier lparen arguments rparen statement_list end
    (15) statement -> . print lparen arguments rparen
    (16) statement -> . println lparen arguments rparen
    (17) statement -> . while expression statement_list end
    (18) statement -> . for container statement_list end
    (19) statement -> . struct identifier struct_parameters end
    (20) statement -> . mutable struct identifier struct_parameters end
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (7) if_statement -> . if expression statement_list elseif_clause end
    (8) if_statement -> . if expression statement_list elseif_clause else_clause end
    (9) if_statement -> . if expression statement_list end
    (10) if_statement -> . if expression statement_list else_clause end
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

  ! shift/reduce conflict for plus resolved as shift
  ! shift/reduce conflict for minus resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for print resolved as shift
  ! shift/reduce conflict for println resolved as shift
  ! shift/reduce conflict for while resolved as shift
  ! shift/reduce conflict for for resolved as shift
  ! shift/reduce conflict for struct resolved as shift
  ! shift/reduce conflict for mutable resolved as shift
  ! shift/reduce conflict for nothing resolved as shift
  ! shift/reduce conflict for global resolved as shift
  ! shift/reduce conflict for local resolved as shift
  ! shift/reduce conflict for no resolved as shift
  ! shift/reduce conflict for identifier resolved as shift
  ! shift/reduce conflict for lsqbrack resolved as shift
  ! shift/reduce conflict for valor_cadena resolved as shift
  ! shift/reduce conflict for break resolved as shift
  ! shift/reduce conflict for continue resolved as shift
  ! shift/reduce conflict for return resolved as shift
  ! shift/reduce conflict for lparen resolved as shift
  ! shift/reduce conflict for if resolved as shift
  ! shift/reduce conflict for valor_entero resolved as shift
  ! shift/reduce conflict for valor_decimal resolved as shift
  ! shift/reduce conflict for valor_caracter resolved as shift
  ! shift/reduce conflict for verdadero resolved as shift
  ! shift/reduce conflict for falso resolved as shift
  ! shift/reduce conflict for Int64 resolved as shift
  ! shift/reduce conflict for Float64 resolved as shift
  ! shift/reduce conflict for Bool resolved as shift
  ! shift/reduce conflict for Char resolved as shift
  ! shift/reduce conflict for String resolved as shift
  ! shift/reduce conflict for sin resolved as shift
  ! shift/reduce conflict for cos resolved as shift
  ! shift/reduce conflict for tan resolved as shift
  ! shift/reduce conflict for sqrt resolved as shift
  ! shift/reduce conflict for log10 resolved as shift
  ! shift/reduce conflict for uppercase resolved as shift
  ! shift/reduce conflict for lowercase resolved as shift
  ! shift/reduce conflict for trunc resolved as shift
  ! shift/reduce conflict for float resolved as shift
  ! shift/reduce conflict for string resolved as shift
  ! shift/reduce conflict for typeof resolved as shift
  ! shift/reduce conflict for length resolved as shift
  ! shift/reduce conflict for log resolved as shift
  ! shift/reduce conflict for parse resolved as shift
  ! shift/reduce conflict for push resolved as shift
  ! shift/reduce conflict for pop resolved as shift
    equal           shift and go to state 61
    definir         shift and go to state 62
    plus            shift and go to state 147
    minus           shift and go to state 148
    mul             shift and go to state 65
    div             shift and go to state 66
    mod             shift and go to state 67
    exp             shift and go to state 68
    gte             shift and go to state 69
    lte             shift and go to state 70
    gt              shift and go to state 71
    lt              shift and go to state 72
    eq              shift and go to state 73
    neq             shift and go to state 74
    and             shift and go to state 75
    or              shift and go to state 76
    point           shift and go to state 77
    end             reduce using rule 4 (statement_list -> .)
    elseif          reduce using rule 4 (statement_list -> .)
    else            reduce using rule 4 (statement_list -> .)
    function        shift and go to state 6
    print           shift and go to state 9
    println         shift and go to state 10
    while           shift and go to state 11
    for             shift and go to state 12
    struct          shift and go to state 13
    mutable         shift and go to state 14
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    if              shift and go to state 32
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

  ! function        [ reduce using rule 4 (statement_list -> .) ]
  ! print           [ reduce using rule 4 (statement_list -> .) ]
  ! println         [ reduce using rule 4 (statement_list -> .) ]
  ! while           [ reduce using rule 4 (statement_list -> .) ]
  ! for             [ reduce using rule 4 (statement_list -> .) ]
  ! struct          [ reduce using rule 4 (statement_list -> .) ]
  ! mutable         [ reduce using rule 4 (statement_list -> .) ]
  ! nothing         [ reduce using rule 4 (statement_list -> .) ]
  ! global          [ reduce using rule 4 (statement_list -> .) ]
  ! local           [ reduce using rule 4 (statement_list -> .) ]
  ! plus            [ reduce using rule 4 (statement_list -> .) ]
  ! minus           [ reduce using rule 4 (statement_list -> .) ]
  ! no              [ reduce using rule 4 (statement_list -> .) ]
  ! identifier      [ reduce using rule 4 (statement_list -> .) ]
  ! lsqbrack        [ reduce using rule 4 (statement_list -> .) ]
  ! valor_cadena    [ reduce using rule 4 (statement_list -> .) ]
  ! break           [ reduce using rule 4 (statement_list -> .) ]
  ! continue        [ reduce using rule 4 (statement_list -> .) ]
  ! return          [ reduce using rule 4 (statement_list -> .) ]
  ! lparen          [ reduce using rule 4 (statement_list -> .) ]
  ! if              [ reduce using rule 4 (statement_list -> .) ]
  ! valor_entero    [ reduce using rule 4 (statement_list -> .) ]
  ! valor_decimal   [ reduce using rule 4 (statement_list -> .) ]
  ! valor_caracter  [ reduce using rule 4 (statement_list -> .) ]
  ! verdadero       [ reduce using rule 4 (statement_list -> .) ]
  ! falso           [ reduce using rule 4 (statement_list -> .) ]
  ! Int64           [ reduce using rule 4 (statement_list -> .) ]
  ! Float64         [ reduce using rule 4 (statement_list -> .) ]
  ! Bool            [ reduce using rule 4 (statement_list -> .) ]
  ! Char            [ reduce using rule 4 (statement_list -> .) ]
  ! String          [ reduce using rule 4 (statement_list -> .) ]
  ! sin             [ reduce using rule 4 (statement_list -> .) ]
  ! cos             [ reduce using rule 4 (statement_list -> .) ]
  ! tan             [ reduce using rule 4 (statement_list -> .) ]
  ! sqrt            [ reduce using rule 4 (statement_list -> .) ]
  ! log10           [ reduce using rule 4 (statement_list -> .) ]
  ! uppercase       [ reduce using rule 4 (statement_list -> .) ]
  ! lowercase       [ reduce using rule 4 (statement_list -> .) ]
  ! trunc           [ reduce using rule 4 (statement_list -> .) ]
  ! float           [ reduce using rule 4 (statement_list -> .) ]
  ! string          [ reduce using rule 4 (statement_list -> .) ]
  ! typeof          [ reduce using rule 4 (statement_list -> .) ]
  ! length          [ reduce using rule 4 (statement_list -> .) ]
  ! log             [ reduce using rule 4 (statement_list -> .) ]
  ! parse           [ reduce using rule 4 (statement_list -> .) ]
  ! push            [ reduce using rule 4 (statement_list -> .) ]
  ! pop             [ reduce using rule 4 (statement_list -> .) ]

    expression                     shift and go to state 4
    statement_list                 shift and go to state 217
    type_data                      shift and go to state 18
    statement                      shift and go to state 3
    if_statement                   shift and go to state 5
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    id                             shift and go to state 30
    native                         shift and go to state 31

state 214

    (11) elseif_clause -> elseif expression statement_list .
    (3) statement_list -> statement_list . statement terminator
    (5) statement -> . expression
    (6) statement -> . if_statement
    (14) statement -> . function identifier lparen arguments rparen statement_list end
    (15) statement -> . print lparen arguments rparen
    (16) statement -> . println lparen arguments rparen
    (17) statement -> . while expression statement_list end
    (18) statement -> . for container statement_list end
    (19) statement -> . struct identifier struct_parameters end
    (20) statement -> . mutable struct identifier struct_parameters end
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (7) if_statement -> . if expression statement_list elseif_clause end
    (8) if_statement -> . if expression statement_list elseif_clause else_clause end
    (9) if_statement -> . if expression statement_list end
    (10) if_statement -> . if expression statement_list else_clause end
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    end             reduce using rule 11 (elseif_clause -> elseif expression statement_list .)
    elseif          reduce using rule 11 (elseif_clause -> elseif expression statement_list .)
    else            reduce using rule 11 (elseif_clause -> elseif expression statement_list .)
    function        shift and go to state 6
    print           shift and go to state 9
    println         shift and go to state 10
    while           shift and go to state 11
    for             shift and go to state 12
    struct          shift and go to state 13
    mutable         shift and go to state 14
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    if              shift and go to state 32
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 4
    statement                      shift and go to state 59
    if_statement                   shift and go to state 5
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 215

    (14) statement -> function identifier lparen arguments rparen statement_list end .

    terminator      reduce using rule 14 (statement -> function identifier lparen arguments rparen statement_list end .)


state 216

    (69) expression -> lsqbrack arguments rsqbrack definir Array lkey type_data . rkey

    rkey            shift and go to state 218


state 217

    (12) elseif_clause -> elseif_clause elseif expression statement_list .
    (3) statement_list -> statement_list . statement terminator
    (5) statement -> . expression
    (6) statement -> . if_statement
    (14) statement -> . function identifier lparen arguments rparen statement_list end
    (15) statement -> . print lparen arguments rparen
    (16) statement -> . println lparen arguments rparen
    (17) statement -> . while expression statement_list end
    (18) statement -> . for container statement_list end
    (19) statement -> . struct identifier struct_parameters end
    (20) statement -> . mutable struct identifier struct_parameters end
    (27) expression -> . primitive
    (28) expression -> . array_access
    (29) expression -> . array_operator
    (30) expression -> . type_data
    (37) expression -> . nothing
    (46) expression -> . global expression
    (47) expression -> . local expression
    (48) expression -> . expression equal expression
    (49) expression -> . expression definir type_data
    (50) expression -> . expression plus expression
    (51) expression -> . expression minus expression
    (52) expression -> . expression mul expression
    (53) expression -> . expression div expression
    (54) expression -> . expression mod expression
    (55) expression -> . expression exp expression
    (56) expression -> . plus expression
    (57) expression -> . minus expression
    (58) expression -> . expression gte expression
    (59) expression -> . expression lte expression
    (60) expression -> . expression gt expression
    (61) expression -> . expression lt expression
    (62) expression -> . expression eq expression
    (63) expression -> . expression neq expression
    (64) expression -> . expression and expression
    (65) expression -> . expression or expression
    (66) expression -> . no expression
    (67) expression -> . identifier lparen arguments rparen
    (68) expression -> . lsqbrack arguments rsqbrack
    (69) expression -> . lsqbrack arguments rsqbrack definir Array lkey type_data rkey
    (70) expression -> . valor_cadena lsqbrack expslice rsqbrack
    (87) expression -> . break
    (88) expression -> . continue
    (89) expression -> . return expression
    (90) expression -> . lparen expression rparen
    (91) expression -> . id listpoint
    (94) expression -> . native lparen arguments rparen
    (7) if_statement -> . if expression statement_list elseif_clause end
    (8) if_statement -> . if expression statement_list elseif_clause else_clause end
    (9) if_statement -> . if expression statement_list end
    (10) if_statement -> . if expression statement_list else_clause end
    (31) primitive -> . valor_entero
    (32) primitive -> . valor_decimal
    (33) primitive -> . valor_cadena
    (34) primitive -> . valor_caracter
    (35) primitive -> . verdadero
    (36) primitive -> . falso
    (71) array_access -> . identifier list_index
    (38) array_operator -> . native point expression
    (39) array_operator -> . expression point oparray
    (21) type_data -> . Int64
    (22) type_data -> . Float64
    (23) type_data -> . Bool
    (24) type_data -> . Char
    (25) type_data -> . String
    (26) type_data -> . id
    (111) id -> . identifier
    (95) native -> . sin
    (96) native -> . cos
    (97) native -> . tan
    (98) native -> . sqrt
    (99) native -> . log10
    (100) native -> . uppercase
    (101) native -> . lowercase
    (102) native -> . trunc
    (103) native -> . float
    (104) native -> . string
    (105) native -> . typeof
    (106) native -> . length
    (107) native -> . log
    (108) native -> . parse
    (109) native -> . push no
    (110) native -> . pop no

    end             reduce using rule 12 (elseif_clause -> elseif_clause elseif expression statement_list .)
    elseif          reduce using rule 12 (elseif_clause -> elseif_clause elseif expression statement_list .)
    else            reduce using rule 12 (elseif_clause -> elseif_clause elseif expression statement_list .)
    function        shift and go to state 6
    print           shift and go to state 9
    println         shift and go to state 10
    while           shift and go to state 11
    for             shift and go to state 12
    struct          shift and go to state 13
    mutable         shift and go to state 14
    nothing         shift and go to state 19
    global          shift and go to state 20
    local           shift and go to state 21
    plus            shift and go to state 22
    minus           shift and go to state 23
    no              shift and go to state 24
    identifier      shift and go to state 7
    lsqbrack        shift and go to state 25
    valor_cadena    shift and go to state 26
    break           shift and go to state 27
    continue        shift and go to state 28
    return          shift and go to state 29
    lparen          shift and go to state 8
    if              shift and go to state 32
    valor_entero    shift and go to state 33
    valor_decimal   shift and go to state 34
    valor_caracter  shift and go to state 35
    verdadero       shift and go to state 36
    falso           shift and go to state 37
    Int64           shift and go to state 38
    Float64         shift and go to state 39
    Bool            shift and go to state 40
    Char            shift and go to state 41
    String          shift and go to state 42
    sin             shift and go to state 43
    cos             shift and go to state 44
    tan             shift and go to state 45
    sqrt            shift and go to state 46
    log10           shift and go to state 47
    uppercase       shift and go to state 48
    lowercase       shift and go to state 49
    trunc           shift and go to state 50
    float           shift and go to state 51
    string          shift and go to state 52
    typeof          shift and go to state 53
    length          shift and go to state 54
    log             shift and go to state 55
    parse           shift and go to state 56
    push            shift and go to state 57
    pop             shift and go to state 58

    expression                     shift and go to state 4
    statement                      shift and go to state 59
    if_statement                   shift and go to state 5
    primitive                      shift and go to state 15
    array_access                   shift and go to state 16
    array_operator                 shift and go to state 17
    type_data                      shift and go to state 18
    id                             shift and go to state 30
    native                         shift and go to state 31

state 218

    (69) expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .

    equal           reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    definir         reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    plus            reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    minus           reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    mul             reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    div             reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    mod             reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    exp             reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    gte             reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    lte             reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    gt              reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    lt              reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    eq              reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    neq             reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    and             reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    or              reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    point           reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    terminator      reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    rparen          reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    function        reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    print           reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    println         reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    while           reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    for             reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    struct          reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    mutable         reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    nothing         reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    global          reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    local           reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    no              reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    identifier      reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    lsqbrack        reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    valor_cadena    reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    break           reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    continue        reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    return          reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    lparen          reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    if              reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    valor_entero    reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    valor_decimal   reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    valor_caracter  reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    verdadero       reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    falso           reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    Int64           reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    Float64         reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    Bool            reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    Char            reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    String          reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    sin             reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    cos             reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    tan             reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    sqrt            reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    log10           reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    uppercase       reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    lowercase       reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    trunc           reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    float           reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    string          reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    typeof          reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    length          reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    log             reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    parse           reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    push            reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    pop             reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    end             reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    rsqbrack        reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    comma           reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    elseif          reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    else            reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)
    twopoint        reduce using rule 69 (expression -> lsqbrack arguments rsqbrack definir Array lkey type_data rkey .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for function in state 0 resolved as shift
WARNING: shift/reduce conflict for print in state 0 resolved as shift
WARNING: shift/reduce conflict for println in state 0 resolved as shift
WARNING: shift/reduce conflict for while in state 0 resolved as shift
WARNING: shift/reduce conflict for for in state 0 resolved as shift
WARNING: shift/reduce conflict for struct in state 0 resolved as shift
WARNING: shift/reduce conflict for mutable in state 0 resolved as shift
WARNING: shift/reduce conflict for nothing in state 0 resolved as shift
WARNING: shift/reduce conflict for global in state 0 resolved as shift
WARNING: shift/reduce conflict for local in state 0 resolved as shift
WARNING: shift/reduce conflict for plus in state 0 resolved as shift
WARNING: shift/reduce conflict for minus in state 0 resolved as shift
WARNING: shift/reduce conflict for no in state 0 resolved as shift
WARNING: shift/reduce conflict for identifier in state 0 resolved as shift
WARNING: shift/reduce conflict for lsqbrack in state 0 resolved as shift
WARNING: shift/reduce conflict for valor_cadena in state 0 resolved as shift
WARNING: shift/reduce conflict for break in state 0 resolved as shift
WARNING: shift/reduce conflict for continue in state 0 resolved as shift
WARNING: shift/reduce conflict for return in state 0 resolved as shift
WARNING: shift/reduce conflict for lparen in state 0 resolved as shift
WARNING: shift/reduce conflict for if in state 0 resolved as shift
WARNING: shift/reduce conflict for valor_entero in state 0 resolved as shift
WARNING: shift/reduce conflict for valor_decimal in state 0 resolved as shift
WARNING: shift/reduce conflict for valor_caracter in state 0 resolved as shift
WARNING: shift/reduce conflict for verdadero in state 0 resolved as shift
WARNING: shift/reduce conflict for falso in state 0 resolved as shift
WARNING: shift/reduce conflict for Int64 in state 0 resolved as shift
WARNING: shift/reduce conflict for Float64 in state 0 resolved as shift
WARNING: shift/reduce conflict for Bool in state 0 resolved as shift
WARNING: shift/reduce conflict for Char in state 0 resolved as shift
WARNING: shift/reduce conflict for String in state 0 resolved as shift
WARNING: shift/reduce conflict for sin in state 0 resolved as shift
WARNING: shift/reduce conflict for cos in state 0 resolved as shift
WARNING: shift/reduce conflict for tan in state 0 resolved as shift
WARNING: shift/reduce conflict for sqrt in state 0 resolved as shift
WARNING: shift/reduce conflict for log10 in state 0 resolved as shift
WARNING: shift/reduce conflict for uppercase in state 0 resolved as shift
WARNING: shift/reduce conflict for lowercase in state 0 resolved as shift
WARNING: shift/reduce conflict for trunc in state 0 resolved as shift
WARNING: shift/reduce conflict for float in state 0 resolved as shift
WARNING: shift/reduce conflict for string in state 0 resolved as shift
WARNING: shift/reduce conflict for typeof in state 0 resolved as shift
WARNING: shift/reduce conflict for length in state 0 resolved as shift
WARNING: shift/reduce conflict for log in state 0 resolved as shift
WARNING: shift/reduce conflict for parse in state 0 resolved as shift
WARNING: shift/reduce conflict for push in state 0 resolved as shift
WARNING: shift/reduce conflict for pop in state 0 resolved as shift
WARNING: shift/reduce conflict for lparen in state 7 resolved as shift
WARNING: shift/reduce conflict for lsqbrack in state 7 resolved as shift
WARNING: shift/reduce conflict for lsqbrack in state 26 resolved as shift
WARNING: shift/reduce conflict for point in state 30 resolved as shift
WARNING: shift/reduce conflict for lsqbrack in state 80 resolved as shift
WARNING: shift/reduce conflict for plus in state 85 resolved as shift
WARNING: shift/reduce conflict for minus in state 85 resolved as shift
WARNING: shift/reduce conflict for function in state 85 resolved as shift
WARNING: shift/reduce conflict for print in state 85 resolved as shift
WARNING: shift/reduce conflict for println in state 85 resolved as shift
WARNING: shift/reduce conflict for while in state 85 resolved as shift
WARNING: shift/reduce conflict for for in state 85 resolved as shift
WARNING: shift/reduce conflict for struct in state 85 resolved as shift
WARNING: shift/reduce conflict for mutable in state 85 resolved as shift
WARNING: shift/reduce conflict for nothing in state 85 resolved as shift
WARNING: shift/reduce conflict for global in state 85 resolved as shift
WARNING: shift/reduce conflict for local in state 85 resolved as shift
WARNING: shift/reduce conflict for no in state 85 resolved as shift
WARNING: shift/reduce conflict for identifier in state 85 resolved as shift
WARNING: shift/reduce conflict for lsqbrack in state 85 resolved as shift
WARNING: shift/reduce conflict for valor_cadena in state 85 resolved as shift
WARNING: shift/reduce conflict for break in state 85 resolved as shift
WARNING: shift/reduce conflict for continue in state 85 resolved as shift
WARNING: shift/reduce conflict for return in state 85 resolved as shift
WARNING: shift/reduce conflict for lparen in state 85 resolved as shift
WARNING: shift/reduce conflict for if in state 85 resolved as shift
WARNING: shift/reduce conflict for valor_entero in state 85 resolved as shift
WARNING: shift/reduce conflict for valor_decimal in state 85 resolved as shift
WARNING: shift/reduce conflict for valor_caracter in state 85 resolved as shift
WARNING: shift/reduce conflict for verdadero in state 85 resolved as shift
WARNING: shift/reduce conflict for falso in state 85 resolved as shift
WARNING: shift/reduce conflict for Int64 in state 85 resolved as shift
WARNING: shift/reduce conflict for Float64 in state 85 resolved as shift
WARNING: shift/reduce conflict for Bool in state 85 resolved as shift
WARNING: shift/reduce conflict for Char in state 85 resolved as shift
WARNING: shift/reduce conflict for String in state 85 resolved as shift
WARNING: shift/reduce conflict for sin in state 85 resolved as shift
WARNING: shift/reduce conflict for cos in state 85 resolved as shift
WARNING: shift/reduce conflict for tan in state 85 resolved as shift
WARNING: shift/reduce conflict for sqrt in state 85 resolved as shift
WARNING: shift/reduce conflict for log10 in state 85 resolved as shift
WARNING: shift/reduce conflict for uppercase in state 85 resolved as shift
WARNING: shift/reduce conflict for lowercase in state 85 resolved as shift
WARNING: shift/reduce conflict for trunc in state 85 resolved as shift
WARNING: shift/reduce conflict for float in state 85 resolved as shift
WARNING: shift/reduce conflict for string in state 85 resolved as shift
WARNING: shift/reduce conflict for typeof in state 85 resolved as shift
WARNING: shift/reduce conflict for length in state 85 resolved as shift
WARNING: shift/reduce conflict for log in state 85 resolved as shift
WARNING: shift/reduce conflict for parse in state 85 resolved as shift
WARNING: shift/reduce conflict for push in state 85 resolved as shift
WARNING: shift/reduce conflict for pop in state 85 resolved as shift
WARNING: shift/reduce conflict for function in state 86 resolved as shift
WARNING: shift/reduce conflict for print in state 86 resolved as shift
WARNING: shift/reduce conflict for println in state 86 resolved as shift
WARNING: shift/reduce conflict for while in state 86 resolved as shift
WARNING: shift/reduce conflict for for in state 86 resolved as shift
WARNING: shift/reduce conflict for struct in state 86 resolved as shift
WARNING: shift/reduce conflict for mutable in state 86 resolved as shift
WARNING: shift/reduce conflict for nothing in state 86 resolved as shift
WARNING: shift/reduce conflict for global in state 86 resolved as shift
WARNING: shift/reduce conflict for local in state 86 resolved as shift
WARNING: shift/reduce conflict for plus in state 86 resolved as shift
WARNING: shift/reduce conflict for minus in state 86 resolved as shift
WARNING: shift/reduce conflict for no in state 86 resolved as shift
WARNING: shift/reduce conflict for identifier in state 86 resolved as shift
WARNING: shift/reduce conflict for lsqbrack in state 86 resolved as shift
WARNING: shift/reduce conflict for valor_cadena in state 86 resolved as shift
WARNING: shift/reduce conflict for break in state 86 resolved as shift
WARNING: shift/reduce conflict for continue in state 86 resolved as shift
WARNING: shift/reduce conflict for return in state 86 resolved as shift
WARNING: shift/reduce conflict for lparen in state 86 resolved as shift
WARNING: shift/reduce conflict for if in state 86 resolved as shift
WARNING: shift/reduce conflict for valor_entero in state 86 resolved as shift
WARNING: shift/reduce conflict for valor_decimal in state 86 resolved as shift
WARNING: shift/reduce conflict for valor_caracter in state 86 resolved as shift
WARNING: shift/reduce conflict for verdadero in state 86 resolved as shift
WARNING: shift/reduce conflict for falso in state 86 resolved as shift
WARNING: shift/reduce conflict for Int64 in state 86 resolved as shift
WARNING: shift/reduce conflict for Float64 in state 86 resolved as shift
WARNING: shift/reduce conflict for Bool in state 86 resolved as shift
WARNING: shift/reduce conflict for Char in state 86 resolved as shift
WARNING: shift/reduce conflict for String in state 86 resolved as shift
WARNING: shift/reduce conflict for sin in state 86 resolved as shift
WARNING: shift/reduce conflict for cos in state 86 resolved as shift
WARNING: shift/reduce conflict for tan in state 86 resolved as shift
WARNING: shift/reduce conflict for sqrt in state 86 resolved as shift
WARNING: shift/reduce conflict for log10 in state 86 resolved as shift
WARNING: shift/reduce conflict for uppercase in state 86 resolved as shift
WARNING: shift/reduce conflict for lowercase in state 86 resolved as shift
WARNING: shift/reduce conflict for trunc in state 86 resolved as shift
WARNING: shift/reduce conflict for float in state 86 resolved as shift
WARNING: shift/reduce conflict for string in state 86 resolved as shift
WARNING: shift/reduce conflict for typeof in state 86 resolved as shift
WARNING: shift/reduce conflict for length in state 86 resolved as shift
WARNING: shift/reduce conflict for log in state 86 resolved as shift
WARNING: shift/reduce conflict for parse in state 86 resolved as shift
WARNING: shift/reduce conflict for push in state 86 resolved as shift
WARNING: shift/reduce conflict for pop in state 86 resolved as shift
WARNING: shift/reduce conflict for nothing in state 88 resolved as shift
WARNING: shift/reduce conflict for global in state 88 resolved as shift
WARNING: shift/reduce conflict for local in state 88 resolved as shift
WARNING: shift/reduce conflict for plus in state 88 resolved as shift
WARNING: shift/reduce conflict for minus in state 88 resolved as shift
WARNING: shift/reduce conflict for no in state 88 resolved as shift
WARNING: shift/reduce conflict for identifier in state 88 resolved as shift
WARNING: shift/reduce conflict for lsqbrack in state 88 resolved as shift
WARNING: shift/reduce conflict for valor_cadena in state 88 resolved as shift
WARNING: shift/reduce conflict for break in state 88 resolved as shift
WARNING: shift/reduce conflict for continue in state 88 resolved as shift
WARNING: shift/reduce conflict for return in state 88 resolved as shift
WARNING: shift/reduce conflict for lparen in state 88 resolved as shift
WARNING: shift/reduce conflict for valor_entero in state 88 resolved as shift
WARNING: shift/reduce conflict for valor_decimal in state 88 resolved as shift
WARNING: shift/reduce conflict for valor_caracter in state 88 resolved as shift
WARNING: shift/reduce conflict for verdadero in state 88 resolved as shift
WARNING: shift/reduce conflict for falso in state 88 resolved as shift
WARNING: shift/reduce conflict for Int64 in state 88 resolved as shift
WARNING: shift/reduce conflict for Float64 in state 88 resolved as shift
WARNING: shift/reduce conflict for Bool in state 88 resolved as shift
WARNING: shift/reduce conflict for Char in state 88 resolved as shift
WARNING: shift/reduce conflict for String in state 88 resolved as shift
WARNING: shift/reduce conflict for sin in state 88 resolved as shift
WARNING: shift/reduce conflict for cos in state 88 resolved as shift
WARNING: shift/reduce conflict for tan in state 88 resolved as shift
WARNING: shift/reduce conflict for sqrt in state 88 resolved as shift
WARNING: shift/reduce conflict for log10 in state 88 resolved as shift
WARNING: shift/reduce conflict for uppercase in state 88 resolved as shift
WARNING: shift/reduce conflict for lowercase in state 88 resolved as shift
WARNING: shift/reduce conflict for trunc in state 88 resolved as shift
WARNING: shift/reduce conflict for float in state 88 resolved as shift
WARNING: shift/reduce conflict for string in state 88 resolved as shift
WARNING: shift/reduce conflict for typeof in state 88 resolved as shift
WARNING: shift/reduce conflict for length in state 88 resolved as shift
WARNING: shift/reduce conflict for log in state 88 resolved as shift
WARNING: shift/reduce conflict for parse in state 88 resolved as shift
WARNING: shift/reduce conflict for push in state 88 resolved as shift
WARNING: shift/reduce conflict for pop in state 88 resolved as shift
WARNING: shift/reduce conflict for equal in state 90 resolved as shift
WARNING: shift/reduce conflict for definir in state 90 resolved as shift
WARNING: shift/reduce conflict for plus in state 90 resolved as shift
WARNING: shift/reduce conflict for minus in state 90 resolved as shift
WARNING: shift/reduce conflict for mul in state 90 resolved as shift
WARNING: shift/reduce conflict for div in state 90 resolved as shift
WARNING: shift/reduce conflict for mod in state 90 resolved as shift
WARNING: shift/reduce conflict for exp in state 90 resolved as shift
WARNING: shift/reduce conflict for gte in state 90 resolved as shift
WARNING: shift/reduce conflict for lte in state 90 resolved as shift
WARNING: shift/reduce conflict for gt in state 90 resolved as shift
WARNING: shift/reduce conflict for lt in state 90 resolved as shift
WARNING: shift/reduce conflict for eq in state 90 resolved as shift
WARNING: shift/reduce conflict for neq in state 90 resolved as shift
WARNING: shift/reduce conflict for and in state 90 resolved as shift
WARNING: shift/reduce conflict for or in state 90 resolved as shift
WARNING: shift/reduce conflict for point in state 90 resolved as shift
WARNING: shift/reduce conflict for equal in state 91 resolved as shift
WARNING: shift/reduce conflict for definir in state 91 resolved as shift
WARNING: shift/reduce conflict for plus in state 91 resolved as shift
WARNING: shift/reduce conflict for minus in state 91 resolved as shift
WARNING: shift/reduce conflict for mul in state 91 resolved as shift
WARNING: shift/reduce conflict for div in state 91 resolved as shift
WARNING: shift/reduce conflict for mod in state 91 resolved as shift
WARNING: shift/reduce conflict for exp in state 91 resolved as shift
WARNING: shift/reduce conflict for gte in state 91 resolved as shift
WARNING: shift/reduce conflict for lte in state 91 resolved as shift
WARNING: shift/reduce conflict for gt in state 91 resolved as shift
WARNING: shift/reduce conflict for lt in state 91 resolved as shift
WARNING: shift/reduce conflict for eq in state 91 resolved as shift
WARNING: shift/reduce conflict for neq in state 91 resolved as shift
WARNING: shift/reduce conflict for and in state 91 resolved as shift
WARNING: shift/reduce conflict for or in state 91 resolved as shift
WARNING: shift/reduce conflict for point in state 91 resolved as shift
WARNING: shift/reduce conflict for equal in state 98 resolved as shift
WARNING: shift/reduce conflict for definir in state 98 resolved as shift
WARNING: shift/reduce conflict for plus in state 98 resolved as shift
WARNING: shift/reduce conflict for minus in state 98 resolved as shift
WARNING: shift/reduce conflict for mul in state 98 resolved as shift
WARNING: shift/reduce conflict for div in state 98 resolved as shift
WARNING: shift/reduce conflict for mod in state 98 resolved as shift
WARNING: shift/reduce conflict for exp in state 98 resolved as shift
WARNING: shift/reduce conflict for gte in state 98 resolved as shift
WARNING: shift/reduce conflict for lte in state 98 resolved as shift
WARNING: shift/reduce conflict for gt in state 98 resolved as shift
WARNING: shift/reduce conflict for lt in state 98 resolved as shift
WARNING: shift/reduce conflict for eq in state 98 resolved as shift
WARNING: shift/reduce conflict for neq in state 98 resolved as shift
WARNING: shift/reduce conflict for and in state 98 resolved as shift
WARNING: shift/reduce conflict for or in state 98 resolved as shift
WARNING: shift/reduce conflict for point in state 98 resolved as shift
WARNING: shift/reduce conflict for point in state 99 resolved as shift
WARNING: shift/reduce conflict for plus in state 103 resolved as shift
WARNING: shift/reduce conflict for minus in state 103 resolved as shift
WARNING: shift/reduce conflict for function in state 103 resolved as shift
WARNING: shift/reduce conflict for print in state 103 resolved as shift
WARNING: shift/reduce conflict for println in state 103 resolved as shift
WARNING: shift/reduce conflict for while in state 103 resolved as shift
WARNING: shift/reduce conflict for for in state 103 resolved as shift
WARNING: shift/reduce conflict for struct in state 103 resolved as shift
WARNING: shift/reduce conflict for mutable in state 103 resolved as shift
WARNING: shift/reduce conflict for nothing in state 103 resolved as shift
WARNING: shift/reduce conflict for global in state 103 resolved as shift
WARNING: shift/reduce conflict for local in state 103 resolved as shift
WARNING: shift/reduce conflict for no in state 103 resolved as shift
WARNING: shift/reduce conflict for identifier in state 103 resolved as shift
WARNING: shift/reduce conflict for lsqbrack in state 103 resolved as shift
WARNING: shift/reduce conflict for valor_cadena in state 103 resolved as shift
WARNING: shift/reduce conflict for break in state 103 resolved as shift
WARNING: shift/reduce conflict for continue in state 103 resolved as shift
WARNING: shift/reduce conflict for return in state 103 resolved as shift
WARNING: shift/reduce conflict for lparen in state 103 resolved as shift
WARNING: shift/reduce conflict for if in state 103 resolved as shift
WARNING: shift/reduce conflict for valor_entero in state 103 resolved as shift
WARNING: shift/reduce conflict for valor_decimal in state 103 resolved as shift
WARNING: shift/reduce conflict for valor_caracter in state 103 resolved as shift
WARNING: shift/reduce conflict for verdadero in state 103 resolved as shift
WARNING: shift/reduce conflict for falso in state 103 resolved as shift
WARNING: shift/reduce conflict for Int64 in state 103 resolved as shift
WARNING: shift/reduce conflict for Float64 in state 103 resolved as shift
WARNING: shift/reduce conflict for Bool in state 103 resolved as shift
WARNING: shift/reduce conflict for Char in state 103 resolved as shift
WARNING: shift/reduce conflict for String in state 103 resolved as shift
WARNING: shift/reduce conflict for sin in state 103 resolved as shift
WARNING: shift/reduce conflict for cos in state 103 resolved as shift
WARNING: shift/reduce conflict for tan in state 103 resolved as shift
WARNING: shift/reduce conflict for sqrt in state 103 resolved as shift
WARNING: shift/reduce conflict for log10 in state 103 resolved as shift
WARNING: shift/reduce conflict for uppercase in state 103 resolved as shift
WARNING: shift/reduce conflict for lowercase in state 103 resolved as shift
WARNING: shift/reduce conflict for trunc in state 103 resolved as shift
WARNING: shift/reduce conflict for float in state 103 resolved as shift
WARNING: shift/reduce conflict for string in state 103 resolved as shift
WARNING: shift/reduce conflict for typeof in state 103 resolved as shift
WARNING: shift/reduce conflict for length in state 103 resolved as shift
WARNING: shift/reduce conflict for log in state 103 resolved as shift
WARNING: shift/reduce conflict for parse in state 103 resolved as shift
WARNING: shift/reduce conflict for push in state 103 resolved as shift
WARNING: shift/reduce conflict for pop in state 103 resolved as shift
WARNING: shift/reduce conflict for nothing in state 153 resolved as shift
WARNING: shift/reduce conflict for global in state 153 resolved as shift
WARNING: shift/reduce conflict for local in state 153 resolved as shift
WARNING: shift/reduce conflict for plus in state 153 resolved as shift
WARNING: shift/reduce conflict for minus in state 153 resolved as shift
WARNING: shift/reduce conflict for no in state 153 resolved as shift
WARNING: shift/reduce conflict for identifier in state 153 resolved as shift
WARNING: shift/reduce conflict for lsqbrack in state 153 resolved as shift
WARNING: shift/reduce conflict for valor_cadena in state 153 resolved as shift
WARNING: shift/reduce conflict for break in state 153 resolved as shift
WARNING: shift/reduce conflict for continue in state 153 resolved as shift
WARNING: shift/reduce conflict for return in state 153 resolved as shift
WARNING: shift/reduce conflict for lparen in state 153 resolved as shift
WARNING: shift/reduce conflict for valor_entero in state 153 resolved as shift
WARNING: shift/reduce conflict for valor_decimal in state 153 resolved as shift
WARNING: shift/reduce conflict for valor_caracter in state 153 resolved as shift
WARNING: shift/reduce conflict for verdadero in state 153 resolved as shift
WARNING: shift/reduce conflict for falso in state 153 resolved as shift
WARNING: shift/reduce conflict for Int64 in state 153 resolved as shift
WARNING: shift/reduce conflict for Float64 in state 153 resolved as shift
WARNING: shift/reduce conflict for Bool in state 153 resolved as shift
WARNING: shift/reduce conflict for Char in state 153 resolved as shift
WARNING: shift/reduce conflict for String in state 153 resolved as shift
WARNING: shift/reduce conflict for sin in state 153 resolved as shift
WARNING: shift/reduce conflict for cos in state 153 resolved as shift
WARNING: shift/reduce conflict for tan in state 153 resolved as shift
WARNING: shift/reduce conflict for sqrt in state 153 resolved as shift
WARNING: shift/reduce conflict for log10 in state 153 resolved as shift
WARNING: shift/reduce conflict for uppercase in state 153 resolved as shift
WARNING: shift/reduce conflict for lowercase in state 153 resolved as shift
WARNING: shift/reduce conflict for trunc in state 153 resolved as shift
WARNING: shift/reduce conflict for float in state 153 resolved as shift
WARNING: shift/reduce conflict for string in state 153 resolved as shift
WARNING: shift/reduce conflict for typeof in state 153 resolved as shift
WARNING: shift/reduce conflict for length in state 153 resolved as shift
WARNING: shift/reduce conflict for log in state 153 resolved as shift
WARNING: shift/reduce conflict for parse in state 153 resolved as shift
WARNING: shift/reduce conflict for push in state 153 resolved as shift
WARNING: shift/reduce conflict for pop in state 153 resolved as shift
WARNING: shift/reduce conflict for definir in state 154 resolved as shift
WARNING: shift/reduce conflict for plus in state 182 resolved as shift
WARNING: shift/reduce conflict for minus in state 182 resolved as shift
WARNING: shift/reduce conflict for function in state 196 resolved as shift
WARNING: shift/reduce conflict for print in state 196 resolved as shift
WARNING: shift/reduce conflict for println in state 196 resolved as shift
WARNING: shift/reduce conflict for while in state 196 resolved as shift
WARNING: shift/reduce conflict for for in state 196 resolved as shift
WARNING: shift/reduce conflict for struct in state 196 resolved as shift
WARNING: shift/reduce conflict for mutable in state 196 resolved as shift
WARNING: shift/reduce conflict for nothing in state 196 resolved as shift
WARNING: shift/reduce conflict for global in state 196 resolved as shift
WARNING: shift/reduce conflict for local in state 196 resolved as shift
WARNING: shift/reduce conflict for plus in state 196 resolved as shift
WARNING: shift/reduce conflict for minus in state 196 resolved as shift
WARNING: shift/reduce conflict for no in state 196 resolved as shift
WARNING: shift/reduce conflict for identifier in state 196 resolved as shift
WARNING: shift/reduce conflict for lsqbrack in state 196 resolved as shift
WARNING: shift/reduce conflict for valor_cadena in state 196 resolved as shift
WARNING: shift/reduce conflict for break in state 196 resolved as shift
WARNING: shift/reduce conflict for continue in state 196 resolved as shift
WARNING: shift/reduce conflict for return in state 196 resolved as shift
WARNING: shift/reduce conflict for lparen in state 196 resolved as shift
WARNING: shift/reduce conflict for if in state 196 resolved as shift
WARNING: shift/reduce conflict for valor_entero in state 196 resolved as shift
WARNING: shift/reduce conflict for valor_decimal in state 196 resolved as shift
WARNING: shift/reduce conflict for valor_caracter in state 196 resolved as shift
WARNING: shift/reduce conflict for verdadero in state 196 resolved as shift
WARNING: shift/reduce conflict for falso in state 196 resolved as shift
WARNING: shift/reduce conflict for Int64 in state 196 resolved as shift
WARNING: shift/reduce conflict for Float64 in state 196 resolved as shift
WARNING: shift/reduce conflict for Bool in state 196 resolved as shift
WARNING: shift/reduce conflict for Char in state 196 resolved as shift
WARNING: shift/reduce conflict for String in state 196 resolved as shift
WARNING: shift/reduce conflict for sin in state 196 resolved as shift
WARNING: shift/reduce conflict for cos in state 196 resolved as shift
WARNING: shift/reduce conflict for tan in state 196 resolved as shift
WARNING: shift/reduce conflict for sqrt in state 196 resolved as shift
WARNING: shift/reduce conflict for log10 in state 196 resolved as shift
WARNING: shift/reduce conflict for uppercase in state 196 resolved as shift
WARNING: shift/reduce conflict for lowercase in state 196 resolved as shift
WARNING: shift/reduce conflict for trunc in state 196 resolved as shift
WARNING: shift/reduce conflict for float in state 196 resolved as shift
WARNING: shift/reduce conflict for string in state 196 resolved as shift
WARNING: shift/reduce conflict for typeof in state 196 resolved as shift
WARNING: shift/reduce conflict for length in state 196 resolved as shift
WARNING: shift/reduce conflict for log in state 196 resolved as shift
WARNING: shift/reduce conflict for parse in state 196 resolved as shift
WARNING: shift/reduce conflict for push in state 196 resolved as shift
WARNING: shift/reduce conflict for pop in state 196 resolved as shift
WARNING: shift/reduce conflict for function in state 197 resolved as shift
WARNING: shift/reduce conflict for print in state 197 resolved as shift
WARNING: shift/reduce conflict for println in state 197 resolved as shift
WARNING: shift/reduce conflict for while in state 197 resolved as shift
WARNING: shift/reduce conflict for for in state 197 resolved as shift
WARNING: shift/reduce conflict for struct in state 197 resolved as shift
WARNING: shift/reduce conflict for mutable in state 197 resolved as shift
WARNING: shift/reduce conflict for nothing in state 197 resolved as shift
WARNING: shift/reduce conflict for global in state 197 resolved as shift
WARNING: shift/reduce conflict for local in state 197 resolved as shift
WARNING: shift/reduce conflict for plus in state 197 resolved as shift
WARNING: shift/reduce conflict for minus in state 197 resolved as shift
WARNING: shift/reduce conflict for no in state 197 resolved as shift
WARNING: shift/reduce conflict for identifier in state 197 resolved as shift
WARNING: shift/reduce conflict for lsqbrack in state 197 resolved as shift
WARNING: shift/reduce conflict for valor_cadena in state 197 resolved as shift
WARNING: shift/reduce conflict for break in state 197 resolved as shift
WARNING: shift/reduce conflict for continue in state 197 resolved as shift
WARNING: shift/reduce conflict for return in state 197 resolved as shift
WARNING: shift/reduce conflict for lparen in state 197 resolved as shift
WARNING: shift/reduce conflict for if in state 197 resolved as shift
WARNING: shift/reduce conflict for valor_entero in state 197 resolved as shift
WARNING: shift/reduce conflict for valor_decimal in state 197 resolved as shift
WARNING: shift/reduce conflict for valor_caracter in state 197 resolved as shift
WARNING: shift/reduce conflict for verdadero in state 197 resolved as shift
WARNING: shift/reduce conflict for falso in state 197 resolved as shift
WARNING: shift/reduce conflict for Int64 in state 197 resolved as shift
WARNING: shift/reduce conflict for Float64 in state 197 resolved as shift
WARNING: shift/reduce conflict for Bool in state 197 resolved as shift
WARNING: shift/reduce conflict for Char in state 197 resolved as shift
WARNING: shift/reduce conflict for String in state 197 resolved as shift
WARNING: shift/reduce conflict for sin in state 197 resolved as shift
WARNING: shift/reduce conflict for cos in state 197 resolved as shift
WARNING: shift/reduce conflict for tan in state 197 resolved as shift
WARNING: shift/reduce conflict for sqrt in state 197 resolved as shift
WARNING: shift/reduce conflict for log10 in state 197 resolved as shift
WARNING: shift/reduce conflict for uppercase in state 197 resolved as shift
WARNING: shift/reduce conflict for lowercase in state 197 resolved as shift
WARNING: shift/reduce conflict for trunc in state 197 resolved as shift
WARNING: shift/reduce conflict for float in state 197 resolved as shift
WARNING: shift/reduce conflict for string in state 197 resolved as shift
WARNING: shift/reduce conflict for typeof in state 197 resolved as shift
WARNING: shift/reduce conflict for length in state 197 resolved as shift
WARNING: shift/reduce conflict for log in state 197 resolved as shift
WARNING: shift/reduce conflict for parse in state 197 resolved as shift
WARNING: shift/reduce conflict for push in state 197 resolved as shift
WARNING: shift/reduce conflict for pop in state 197 resolved as shift
WARNING: shift/reduce conflict for plus in state 208 resolved as shift
WARNING: shift/reduce conflict for minus in state 208 resolved as shift
WARNING: shift/reduce conflict for function in state 208 resolved as shift
WARNING: shift/reduce conflict for print in state 208 resolved as shift
WARNING: shift/reduce conflict for println in state 208 resolved as shift
WARNING: shift/reduce conflict for while in state 208 resolved as shift
WARNING: shift/reduce conflict for for in state 208 resolved as shift
WARNING: shift/reduce conflict for struct in state 208 resolved as shift
WARNING: shift/reduce conflict for mutable in state 208 resolved as shift
WARNING: shift/reduce conflict for nothing in state 208 resolved as shift
WARNING: shift/reduce conflict for global in state 208 resolved as shift
WARNING: shift/reduce conflict for local in state 208 resolved as shift
WARNING: shift/reduce conflict for no in state 208 resolved as shift
WARNING: shift/reduce conflict for identifier in state 208 resolved as shift
WARNING: shift/reduce conflict for lsqbrack in state 208 resolved as shift
WARNING: shift/reduce conflict for valor_cadena in state 208 resolved as shift
WARNING: shift/reduce conflict for break in state 208 resolved as shift
WARNING: shift/reduce conflict for continue in state 208 resolved as shift
WARNING: shift/reduce conflict for return in state 208 resolved as shift
WARNING: shift/reduce conflict for lparen in state 208 resolved as shift
WARNING: shift/reduce conflict for if in state 208 resolved as shift
WARNING: shift/reduce conflict for valor_entero in state 208 resolved as shift
WARNING: shift/reduce conflict for valor_decimal in state 208 resolved as shift
WARNING: shift/reduce conflict for valor_caracter in state 208 resolved as shift
WARNING: shift/reduce conflict for verdadero in state 208 resolved as shift
WARNING: shift/reduce conflict for falso in state 208 resolved as shift
WARNING: shift/reduce conflict for Int64 in state 208 resolved as shift
WARNING: shift/reduce conflict for Float64 in state 208 resolved as shift
WARNING: shift/reduce conflict for Bool in state 208 resolved as shift
WARNING: shift/reduce conflict for Char in state 208 resolved as shift
WARNING: shift/reduce conflict for String in state 208 resolved as shift
WARNING: shift/reduce conflict for sin in state 208 resolved as shift
WARNING: shift/reduce conflict for cos in state 208 resolved as shift
WARNING: shift/reduce conflict for tan in state 208 resolved as shift
WARNING: shift/reduce conflict for sqrt in state 208 resolved as shift
WARNING: shift/reduce conflict for log10 in state 208 resolved as shift
WARNING: shift/reduce conflict for uppercase in state 208 resolved as shift
WARNING: shift/reduce conflict for lowercase in state 208 resolved as shift
WARNING: shift/reduce conflict for trunc in state 208 resolved as shift
WARNING: shift/reduce conflict for float in state 208 resolved as shift
WARNING: shift/reduce conflict for string in state 208 resolved as shift
WARNING: shift/reduce conflict for typeof in state 208 resolved as shift
WARNING: shift/reduce conflict for length in state 208 resolved as shift
WARNING: shift/reduce conflict for log in state 208 resolved as shift
WARNING: shift/reduce conflict for parse in state 208 resolved as shift
WARNING: shift/reduce conflict for push in state 208 resolved as shift
WARNING: shift/reduce conflict for pop in state 208 resolved as shift
WARNING: shift/reduce conflict for plus in state 213 resolved as shift
WARNING: shift/reduce conflict for minus in state 213 resolved as shift
WARNING: shift/reduce conflict for function in state 213 resolved as shift
WARNING: shift/reduce conflict for print in state 213 resolved as shift
WARNING: shift/reduce conflict for println in state 213 resolved as shift
WARNING: shift/reduce conflict for while in state 213 resolved as shift
WARNING: shift/reduce conflict for for in state 213 resolved as shift
WARNING: shift/reduce conflict for struct in state 213 resolved as shift
WARNING: shift/reduce conflict for mutable in state 213 resolved as shift
WARNING: shift/reduce conflict for nothing in state 213 resolved as shift
WARNING: shift/reduce conflict for global in state 213 resolved as shift
WARNING: shift/reduce conflict for local in state 213 resolved as shift
WARNING: shift/reduce conflict for no in state 213 resolved as shift
WARNING: shift/reduce conflict for identifier in state 213 resolved as shift
WARNING: shift/reduce conflict for lsqbrack in state 213 resolved as shift
WARNING: shift/reduce conflict for valor_cadena in state 213 resolved as shift
WARNING: shift/reduce conflict for break in state 213 resolved as shift
WARNING: shift/reduce conflict for continue in state 213 resolved as shift
WARNING: shift/reduce conflict for return in state 213 resolved as shift
WARNING: shift/reduce conflict for lparen in state 213 resolved as shift
WARNING: shift/reduce conflict for if in state 213 resolved as shift
WARNING: shift/reduce conflict for valor_entero in state 213 resolved as shift
WARNING: shift/reduce conflict for valor_decimal in state 213 resolved as shift
WARNING: shift/reduce conflict for valor_caracter in state 213 resolved as shift
WARNING: shift/reduce conflict for verdadero in state 213 resolved as shift
WARNING: shift/reduce conflict for falso in state 213 resolved as shift
WARNING: shift/reduce conflict for Int64 in state 213 resolved as shift
WARNING: shift/reduce conflict for Float64 in state 213 resolved as shift
WARNING: shift/reduce conflict for Bool in state 213 resolved as shift
WARNING: shift/reduce conflict for Char in state 213 resolved as shift
WARNING: shift/reduce conflict for String in state 213 resolved as shift
WARNING: shift/reduce conflict for sin in state 213 resolved as shift
WARNING: shift/reduce conflict for cos in state 213 resolved as shift
WARNING: shift/reduce conflict for tan in state 213 resolved as shift
WARNING: shift/reduce conflict for sqrt in state 213 resolved as shift
WARNING: shift/reduce conflict for log10 in state 213 resolved as shift
WARNING: shift/reduce conflict for uppercase in state 213 resolved as shift
WARNING: shift/reduce conflict for lowercase in state 213 resolved as shift
WARNING: shift/reduce conflict for trunc in state 213 resolved as shift
WARNING: shift/reduce conflict for float in state 213 resolved as shift
WARNING: shift/reduce conflict for string in state 213 resolved as shift
WARNING: shift/reduce conflict for typeof in state 213 resolved as shift
WARNING: shift/reduce conflict for length in state 213 resolved as shift
WARNING: shift/reduce conflict for log in state 213 resolved as shift
WARNING: shift/reduce conflict for parse in state 213 resolved as shift
WARNING: shift/reduce conflict for push in state 213 resolved as shift
WARNING: shift/reduce conflict for pop in state 213 resolved as shift
WARNING: reduce/reduce conflict in state 177 resolved using rule (expression -> expression plus expression)
WARNING: rejected rule (expression -> plus expression) in state 177
WARNING: reduce/reduce conflict in state 178 resolved using rule (expression -> expression minus expression)
WARNING: rejected rule (expression -> minus expression) in state 178
